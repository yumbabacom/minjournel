{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/components/Sidebar.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function Sidebar({\n  user,\n  currentAccountId,\n  accounts = [],\n  onAccountSwitch,\n  onAddAccount,\n  onEditAccount,\n  onDeleteAccount,\n  onLogout,\n  onUpdateUser\n}) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const [showAccountDropdown, setShowAccountDropdown] = useState(false);\n  const [editingAccountId, setEditingAccountId] = useState(null);\n  const [editingBalance, setEditingBalance] = useState('');\n  const [mounted, setMounted] = useState(false);\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [isAMTradeMode, setIsAMTradeMode] = useState(false);\n  const [userSettings, setUserSettings] = useState({\n    fullName: user?.fullName || user?.name || '',\n    email: user?.email || '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n    avatar: user?.avatar || null,\n    notifications: {\n      email: true,\n      push: true,\n      trades: true,\n      reports: false\n    },\n    preferences: {\n      theme: 'light',\n      currency: 'USD',\n      timezone: 'UTC',\n      language: 'en'\n    }\n  });\n\n  // Prevent hydration mismatch by only rendering client-specific content after mount\n  useEffect(() => {\n    setMounted(true);\n    // Only enable AM Trade mode if currently on an AM Trade page, not from localStorage\n    const isOnAMTradePage = pathname?.startsWith('/am-trade');\n\n    if (isOnAMTradePage) {\n      setIsAMTradeMode(true);\n      localStorage.setItem('isAMTradeMode', 'true');\n    } else {\n      // If not on AM Trade page, ensure AM Trade mode is disabled\n      setIsAMTradeMode(false);\n      localStorage.setItem('isAMTradeMode', 'false');\n    }\n  }, [pathname]);\n\n  // Update userSettings when user prop changes\n  useEffect(() => {\n    if (user) {\n      setUserSettings(prev => ({\n        ...prev,\n        fullName: user.fullName || user.name || '',\n        email: user.email || '',\n        avatar: user.avatar || null\n      }));\n    }\n  }, [user]);\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.dropdown-container')) {\n        setShowUserDropdown(false);\n        setShowAccountDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Get current active account\n  const currentAccount = accounts.find(acc =>\n    (acc.id === currentAccountId) || (acc._id === currentAccountId)\n  ) || accounts[0] || {\n    id: null,\n    name: 'No Account',\n    balance: 0,\n    tag: 'personal',\n    color: 'bg-gray-600',\n    isActive: false\n  };\n\n  // Ensure current account has color property\n  if (currentAccount && !currentAccount.color) {\n    currentAccount.color = getTagColor(currentAccount.tag);\n  }\n\n  const getTagColor = (tag) => {\n    const colors = {\n      'personal': 'bg-blue-600',\n      'funded': 'bg-green-600', \n      'demo': 'bg-purple-600',\n      'forex': 'bg-orange-600',\n      'crypto': 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      'personal': 'Personal',\n      'funded': 'Funded',\n      'demo': 'Demo', \n      'forex': 'Forex',\n      'crypto': 'Crypto'\n    };\n    return names[tag] || tag;\n  };\n\n  const handleSwitchAccount = (accountId) => {\n    if (!accountId) return;\n    onAccountSwitch?.(accountId);\n    setShowAccountDropdown(false);\n  };\n\n  const handleEditBalance = (accountId) => {\n    const account = accounts.find(acc => (acc.id === accountId) || (acc._id === accountId));\n    setEditingAccountId(accountId);\n    setEditingBalance(account?.balance?.toString() || '');\n  };\n\n  const handleSaveBalance = (accountId) => {\n    onEditAccount?.(accountId, { balance: parseFloat(editingBalance) || 0 });\n    setEditingAccountId(null);\n    setEditingBalance('');\n  };\n\n  const handleAMTradeToggle = () => {\n    const newMode = !isAMTradeMode;\n    setIsAMTradeMode(newMode);\n    localStorage.setItem('isAMTradeMode', newMode.toString());\n\n    // Navigate to appropriate page\n    if (newMode) {\n      router.push('/am-trade');\n    } else {\n      router.push('/dashboard');\n    }\n  };\n\n  const handleAvatarUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setUserSettings(prev => ({\n          ...prev,\n          avatar: e.target.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleOpenSettings = () => {\n    // Reset form with current user data when opening\n    setUserSettings(prev => ({\n      ...prev,\n      fullName: user?.fullName || user?.name || '',\n      email: user?.email || '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      avatar: user?.avatar || null\n    }));\n    setShowSettingsModal(true);\n    setShowUserDropdown(false);\n  };\n\n  const handleSaveSettings = async () => {\n    try {\n      // Get token from cookies or localStorage with better error handling\n      let token = null;\n\n      // Try to get from cookies first\n      try {\n        const cookies = document.cookie.split('; ');\n        const authCookie = cookies.find(row => row.startsWith('auth-token='));\n        if (authCookie) {\n          token = authCookie.split('=')[1];\n        }\n      } catch (cookieError) {\n        console.log('Error reading cookies:', cookieError);\n      }\n\n      // Fallback to localStorage\n      if (!token) {\n        try {\n          token = localStorage.getItem('auth-token');\n        } catch (storageError) {\n          console.log('Error reading localStorage:', storageError);\n        }\n      }\n\n      if (!token) {\n        alert('Authentication token not found. Please log in again.');\n        return;\n      }\n\n      console.log('Using token for profile update:', token ? 'Token found' : 'No token');\n\n      // Prepare data to send\n      const updateData = {\n        fullName: userSettings.fullName,\n        email: userSettings.email,\n        currentPassword: userSettings.currentPassword,\n        newPassword: userSettings.newPassword,\n        confirmPassword: userSettings.confirmPassword\n      };\n\n      // Make API call\n      const response = await fetch('/api/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updateData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert('Profile updated successfully!');\n        setShowSettingsModal(false);\n\n        // Update user data in parent component if callback provided\n        if (typeof onUpdateUser === 'function') {\n          onUpdateUser(data.user);\n        }\n\n        // Refresh page to update user data in UI\n        window.location.reload();\n      } else {\n        console.error('Profile update failed:', data);\n        alert(data.error || 'Failed to update profile');\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      alert('An error occurred while saving settings. Please try again.');\n    }\n  };\n\n  const getInitials = (name) => {\n    if (!name) return 'U';\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  // AM Trade menu items (removed Balance - it's shown in sidebar account section)\n  const amTradeMenuItems = [\n    {\n      id: 'overview',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-am-trade',\n      name: 'Add AM Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    }\n  ];\n\n  // Regular menu items\n  const menuItems = [\n    {\n      id: 'dashboard',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-trade',\n      name: 'Add Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    },\n    {\n      id: 'analytics',\n      name: 'Analytics',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'strategy',\n      name: 'Strategy',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n        </svg>\n      )\n    },\n    {\n      id: 'sessions',\n      name: 'Sessions',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'risk-analysis',\n      name: 'Risk',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'forex-news',\n      name: 'Forex News',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'calendar',\n      name: 'Calendar',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n      )\n    }\n  ];\n\n  const handleNavigation = (itemId) => {\n    if (isAMTradeMode) {\n      // AM Trade mode navigation\n      if (itemId === 'overview') {\n        router.push('/am-trade/overview');\n      } else if (itemId === 'add-am-trade') {\n        router.push('/am-trade/add-am-trade');\n      } else if (itemId === 'journal') {\n        router.push('/am-trade/journal');\n      } else {\n        router.push('/am-trade');\n      }\n    } else {\n      // Regular mode navigation\n      if (itemId === 'add-trade') {\n        router.push('/add-trade');\n      } else if (itemId === 'dashboard') {\n        router.push('/dashboard');\n      } else if (itemId === 'journal') {\n        router.push('/journal');\n      } else {\n        router.push(`/dashboard?section=${itemId}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-64 bg-gradient-to-b from-slate-50 via-white to-gray-50/50 border-r border-gray-200/60 flex flex-col fixed left-0 top-0 h-screen shadow-xl backdrop-blur-sm\">\n      {/* Compact User Profile */}\n      <div className=\"p-4 border-b border-gray-200/60\">\n        <div className=\"relative dropdown-container\">\n          <button\n            onClick={() => setShowUserDropdown(!showUserDropdown)}\n            className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-white/80 transition-all duration-200 group shadow-sm hover:shadow-md border border-transparent hover:border-gray-200/60\"\n          >\n            <div className=\"relative\">\n              {userSettings.avatar ? (\n                <img\n                  src={userSettings.avatar}\n                  alt=\"Profile\"\n                  className=\"w-10 h-10 rounded-xl object-cover border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-sm\"\n                />\n              ) : (\n                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 via-blue-600 to-indigo-600 rounded-xl flex items-center justify-center border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-lg\">\n                  <span className=\"text-white font-bold text-sm tracking-wide\">\n                    {getInitials(user?.fullName || user?.name)}\n                  </span>\n                </div>\n              )}\n              <div className=\"absolute -bottom-0.5 -right-0.5 w-3.5 h-3.5 bg-gradient-to-br from-green-400 to-green-500 border-2 border-white rounded-full shadow-sm\">\n                <div className=\"w-full h-full bg-green-500 rounded-full animate-pulse\"></div>\n              </div>\n            </div>\n            <div className=\"flex-1 text-left min-w-0\">\n              <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                {user?.fullName || user?.name || 'User'}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <div className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gradient-to-r from-green-100 to-emerald-100 text-green-700 border border-green-200/60\">\n                  <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-1.5 animate-pulse\"></div>\n                  Online\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <svg\n                className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showUserDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </button>\n\n          {/* Minimal User Dropdown Menu */}\n          {showUserDropdown && (\n            <div className=\"absolute top-full left-0 mt-3 w-full bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 overflow-hidden\">\n              <div className=\"p-3\">\n                {/* Profile Header */}\n                <div className=\"px-4 py-3 bg-gradient-to-r from-gray-50 to-slate-50 rounded-xl border border-gray-100/60 mb-3\">\n                  <p className=\"font-bold text-gray-900 text-sm tracking-tight\">{user?.fullName || user?.name}</p>\n                  <p className=\"text-xs text-gray-500 mt-0.5\">{user?.email}</p>\n                </div>\n\n                {/* Menu Items */}\n                <div className=\"space-y-1\">\n                  <button\n                    onClick={handleOpenSettings}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-gray-700 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-blue-100 to-blue-200 rounded-lg flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      </svg>\n                    </div>\n                    <span>Account Settings</span>\n                  </button>\n\n                  <div className=\"border-t border-gray-200/60 my-3\"></div>\n\n                  <button\n                    onClick={onLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-red-600 hover:bg-gradient-to-r hover:from-red-50 hover:to-rose-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-red-100 to-red-200 rounded-lg flex items-center justify-center group-hover:from-red-200 group-hover:to-red-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                      </svg>\n                    </div>\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact Account Balance Card */}\n        <div className=\"mt-4 relative dropdown-container\">\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              setShowAccountDropdown(!showAccountDropdown);\n            }}\n            className=\"w-full p-4 bg-gradient-to-br from-white via-gray-50/50 to-slate-50/30 border border-gray-200/60 rounded-xl hover:border-gray-300/60 hover:shadow-md transition-all duration-200 group backdrop-blur-sm\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-left flex-1\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className={`w-3 h-3 rounded-full ${currentAccount.color} shadow-sm`}></div>\n                    <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Balance</p>\n                  </div>\n                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium border ${\n                    currentAccount.tag === 'funded' ? 'bg-green-100 text-green-700 border-green-200' :\n                    currentAccount.tag === 'demo' ? 'bg-purple-100 text-purple-700 border-purple-200' :\n                    currentAccount.tag === 'forex' ? 'bg-orange-100 text-orange-700 border-orange-200' :\n                    currentAccount.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border-indigo-200' :\n                    'bg-blue-100 text-blue-700 border-blue-200'\n                  }`}>\n                    {getTagDisplayName(currentAccount.tag)}\n                  </span>\n                </div>\n                <p className=\"font-bold text-gray-900 text-lg tracking-tight mb-1\">${Number(currentAccount.balance || 0).toLocaleString()}</p>\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-xs text-gray-600 truncate font-medium\">{currentAccount.name}</p>\n                  <svg\n                    className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showAccountDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </button>\n\n          {/* Minimal Account Dropdown */}\n          {showAccountDropdown && (\n            <div\n              className=\"absolute top-full left-0 mt-3 w-80 bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 max-h-80 overflow-y-auto\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"p-4\">\n                {/* Add New Account Button */}\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (typeof onAddAccount === 'function') {\n                      onAddAccount();\n                      setShowAccountDropdown(false);\n                    }\n                  }}\n                  className=\"w-full flex items-center space-x-4 p-4 text-blue-600 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-2xl transition-all duration-300 border border-blue-200/60 bg-gradient-to-r from-blue-25 to-indigo-25 hover:border-blue-300/60 group shadow-sm hover:shadow-md\"\n                >\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-300 shadow-sm\">\n                    <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-left\">\n                    <span className=\"font-bold text-blue-700 text-sm\">Add New Account</span>\n                    <p className=\"text-xs text-blue-500 mt-0.5\">Create a new trading account</p>\n                  </div>\n                </button>\n\n                <div className=\"border-t border-gray-200 my-3\"></div>\n\n                {/* Existing Accounts */}\n                <div className=\"space-y-2\">\n                  {accounts.map((account, index) => {\n                    const accountId = account.id || account._id;\n                    const isCurrentAccount = String(accountId) === String(currentAccountId);\n\n                    if (!account.color) {\n                      account.color = getTagColor(account.tag);\n                    }\n\n                    return (\n                      <div\n                        key={`${accountId}-${currentAccountId}`}\n                        className={`flex items-center justify-between p-3 rounded-lg transition-all duration-200 border ${\n                          isCurrentAccount\n                            ? 'bg-blue-50 border-blue-200 shadow-sm'\n                            : 'hover:bg-gray-50 border-gray-100 hover:border-gray-200 hover:shadow-sm'\n                        }`}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          handleSwitchAccount(accountId);\n                        }}\n                      >\n                        <div className=\"flex items-center space-x-3 flex-1 cursor-pointer\">\n                          <div className=\"relative\">\n                            <div className={`w-3 h-3 rounded-full ${account.color} shadow-sm`}></div>\n                            {isCurrentAccount && (\n                              <div className=\"absolute -top-0.5 -right-0.5 w-1.5 h-1.5 bg-green-500 rounded-full border border-white\"></div>\n                            )}\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                              {account.name}\n                            </p>\n                            <div className=\"flex items-center space-x-2 mt-1\">\n                              {editingAccountId === accountId ? (\n                                <div className=\"flex items-center space-x-2\">\n                                  <input\n                                    type=\"number\"\n                                    value={editingBalance}\n                                    onChange={(e) => {\n                                      e.stopPropagation();\n                                      setEditingBalance(e.target.value);\n                                    }}\n                                    onClick={(e) => e.stopPropagation()}\n                                    className=\"w-24 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                    placeholder=\"Enter balance\"\n                                  />\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      handleSaveBalance(accountId);\n                                    }}\n                                    className=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                  </button>\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      setEditingAccountId(null);\n                                      setEditingBalance('');\n                                    }}\n                                    className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                  </button>\n                                </div>\n                              ) : (\n                                <>\n                                  <span className=\"text-sm font-bold text-gray-900\">${Number(account.balance || 0).toLocaleString()}</span>\n                                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium ${\n                                    account.tag === 'funded' ? 'bg-green-100 text-green-700 border border-green-200' :\n                                    account.tag === 'demo' ? 'bg-purple-100 text-purple-700 border border-purple-200' :\n                                    account.tag === 'forex' ? 'bg-orange-100 text-orange-700 border border-orange-200' :\n                                    account.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border border-indigo-200' :\n                                    'bg-blue-100 text-blue-700 border border-blue-200'\n                                  }`}>\n                                    {getTagDisplayName(account.tag)}\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Action Buttons */}\n                        <div className=\"flex items-center space-x-1 ml-2\">\n                          <button\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              handleEditBalance(accountId);\n                            }}\n                            className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-100 rounded transition-colors\"\n                            title=\"Edit Balance\"\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                          {accounts.length > 1 && (\n                            <button\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                if (typeof onDeleteAccount === 'function') {\n                                  onDeleteAccount(accountId);\n                                }\n                              }}\n                              className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-100 rounded transition-colors\"\n                              title=\"Delete Account\"\n                            >\n                              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Footer Info */}\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                  <p className=\"text-xs text-gray-500 text-center\">\n                    {accounts.length} {accounts.length === 1 ? 'Account' : 'Accounts'} • Click to switch\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact AM Trade Toggle */}\n        <div className=\"mt-4 p-3 bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 rounded-xl border border-orange-200/60 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"flex items-center space-x-2 mb-0.5\">\n                <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-orange-400 to-amber-500 rounded-full\"></div>\n                <p className=\"text-sm font-semibold text-gray-900\">AM Trade Mode</p>\n              </div>\n              <p className=\"text-xs text-gray-600\">Morning trading interface</p>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={isAMTradeMode}\n                onChange={handleAMTradeToggle}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-3 peer-focus:ring-orange-300/50 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all after:shadow-sm peer-checked:bg-gradient-to-r peer-checked:from-orange-500 peer-checked:to-amber-500\"></div>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Compact Navigation */}\n      <nav className=\"flex-1 p-4 overflow-y-auto\">\n        <div className=\"space-y-1\">\n          {(isAMTradeMode ? amTradeMenuItems : menuItems).map((item) => {\n            // Calculate active state only after component is mounted\n            const isActive = mounted && (\n              isAMTradeMode ? (\n                pathname === `/am-trade/${item.id}` ||\n                (pathname === '/am-trade' && item.id === 'overview') ||\n                (pathname === '/am-trade/add-am-trade' && item.id === 'add-am-trade') ||\n                (pathname === '/am-trade/journal' && item.id === 'journal')\n              ) : (\n                pathname === `/${item.id}` ||\n                (pathname === '/add-trade' && item.id === 'add-trade') ||\n                (pathname === '/journal' && item.id === 'journal')\n              )\n            );\n\n            return (\n              <button\n                key={item.id}\n                onClick={() => handleNavigation(item.id)}\n                className={`w-full flex items-center space-x-3 px-3 py-2.5 rounded-xl text-sm font-medium transition-all duration-200 group ${\n                  isActive\n                    ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-md'\n                    : item.highlight\n                    ? 'bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 hover:from-green-100 hover:to-emerald-100 border border-green-200/60'\n                    : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }`}\n              >\n                <div className={`w-7 h-7 rounded-lg flex items-center justify-center transition-all duration-200 ${\n                  isActive\n                    ? 'bg-white/20 text-white'\n                    : item.highlight\n                    ? 'bg-green-100 text-green-600'\n                    : 'bg-gray-100 text-gray-600 group-hover:bg-gray-200'\n                }`}>\n                  {item.icon}\n                </div>\n                <span className=\"flex-1 text-left\">{item.name}</span>\n                {isActive && (\n                  <div className=\"w-1.5 h-1.5 bg-white rounded-full\"></div>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </nav>\n\n      {/* Compact Footer */}\n      <div className=\"p-4 border-t border-gray-200/60\">\n        <button\n          onClick={onLogout}\n          className=\"w-full flex items-center space-x-3 px-3 py-2.5 text-gray-700 hover:bg-red-50 hover:text-red-600 rounded-xl text-sm font-medium transition-all duration-200 group\"\n        >\n          <div className=\"w-7 h-7 bg-gray-100 group-hover:bg-red-100 rounded-lg flex items-center justify-center transition-all duration-200\">\n            <svg className=\"w-4 h-4 text-gray-600 group-hover:text-red-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n            </svg>\n          </div>\n          <span className=\"flex-1 text-left\">Sign Out</span>\n        </button>\n      </div>\n\n      {/* Settings Modal - Portal to body */}\n      {showSettingsModal && typeof document !== 'undefined' && createPortal(\n        <div\n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-[9999] p-4\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowSettingsModal(false);\n            }\n          }}\n        >\n          <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-hidden relative z-[10000]\">\n            {/* Modal Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-blue-600 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900\">Account Settings</h2>\n                  <p className=\"text-sm text-gray-600\">Update your account information</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSettingsModal(false)}\n                className=\"p-2 hover:bg-gray-100 rounded-xl transition-colors\"\n              >\n                <svg className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Modal Content */}\n            <div className=\"p-6\">\n              <div className=\"space-y-6\">\n                {/* Form Fields */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Username</label>\n                  <input\n                    type=\"text\"\n                    value={userSettings.fullName}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, fullName: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your username\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={userSettings.email}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.currentPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, currentPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter current password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.newPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, newPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter new password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.confirmPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Confirm new password\"\n                  />\n                </div>\n              </div>\n\n              {/* Modal Footer */}\n              <div className=\"flex items-center justify-end pt-6 mt-8 border-t border-gray-200 space-x-3\">\n                <button\n                  onClick={() => setShowSettingsModal(false)}\n                  className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleSaveSettings}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-medium shadow-lg\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1953, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/app/am-trade/journal/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Cookies from 'js-cookie';\nimport Sidebar from '../../../components/Sidebar';\n\nexport default function AMTradeJournal() {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [trades, setTrades] = useState([]);\n  const [filteredTrades, setFilteredTrades] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [sortBy, setSortBy] = useState('newest');\n\n  // Modal states\n  const [showViewModal, setShowViewModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Edit form state\n  const [editFormData, setEditFormData] = useState({});\n  const [editCalculatedResults, setEditCalculatedResults] = useState({});\n\n  // Update form state\n  const [updateFormData, setUpdateFormData] = useState({});\n\n  // Account management states\n  const [showAddAccountModal, setShowAddAccountModal] = useState(false);\n  const [newAccount, setNewAccount] = useState({ name: '', balance: '', tag: 'personal' });\n\n  useEffect(() => {\n    const initializeUser = async () => {\n      try {\n        // First check if user is already in localStorage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n          setLoading(false);\n          return;\n        }\n\n        // If no user in localStorage, check for auth token and fetch user\n        const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n        if (!token) {\n          // No authentication, redirect to login\n          router.push('/login');\n          return;\n        }\n\n        // Fetch user with token using the same endpoint as dashboard\n        const response = await fetch('/api/user', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n          // Store user data in localStorage for future use\n          localStorage.setItem('user', JSON.stringify(userData));\n\n          // Fetch accounts for this user\n          await fetchAccounts(userData);\n        } else {\n          // Invalid token, redirect to login\n          router.push('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        router.push('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeUser();\n  }, [router]);\n\n  // Fetch accounts and trades when user is set\n  useEffect(() => {\n    if (user?.id || user?._id) {\n      fetchAccounts(user);\n      fetchTrades();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (currentAccountId && trades.length > 0) {\n      filterAndSortTrades();\n    }\n  }, [currentAccountId, trades, searchTerm, filterStatus, sortBy]);\n\n  const fetchAccounts = async (userData) => {\n    try {\n      const userId = userData?.id || userData?._id;\n      if (!userId) {\n        console.error('User ID not found');\n        return;\n      }\n\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        console.error('Authentication token is missing');\n        return;\n      }\n\n      const response = await fetch(`/api/accounts?userId=${userId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.accounts && Array.isArray(data.accounts)) {\n          setAccounts(data.accounts);\n\n          // Set current account from localStorage or use first account\n          const savedAccountId = localStorage.getItem('currentAccountId');\n          if (savedAccountId && data.accounts.find(acc => String(acc.id || acc._id) === savedAccountId)) {\n            setCurrentAccountId(savedAccountId);\n          } else if (data.accounts.length > 0) {\n            const firstAccountId = data.accounts[0].id || data.accounts[0]._id;\n            setCurrentAccountId(firstAccountId);\n            localStorage.setItem('currentAccountId', String(firstAccountId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  const fetchTrades = async () => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        console.error('Authentication token is missing');\n        return;\n      }\n\n      if (!user?.id && !user?._id) {\n        console.error('User ID not found');\n        return;\n      }\n\n      const userId = user?.id || user?._id;\n      const response = await fetch(`/api/am-trades?userId=${userId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.trades && Array.isArray(data.trades)) {\n          setTrades(data.trades);\n        }\n      } else {\n        console.error('Failed to fetch AM trades');\n      }\n    } catch (error) {\n      console.error('Error fetching trades:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterAndSortTrades = () => {\n    let filtered = trades.filter(trade => {\n      // Filter by current account\n      const tradeAccountId = String(trade.accountId || trade.account);\n      if (tradeAccountId !== currentAccountId) return false;\n\n      // Filter by search term\n      if (searchTerm) {\n        const searchLower = searchTerm.toLowerCase();\n        const matchesSearch =\n          trade.tradingPair?.toLowerCase().includes(searchLower) ||\n          trade.setup?.toLowerCase().includes(searchLower) ||\n          trade.strategy?.toLowerCase().includes(searchLower) ||\n          trade.notes?.toLowerCase().includes(searchLower);\n        if (!matchesSearch) return false;\n      }\n\n      // Filter by status\n      if (filterStatus !== 'all') {\n        if (filterStatus === 'pending' && trade.status) return false;\n        if (filterStatus === 'win' && trade.status !== 'win') return false;\n        if (filterStatus === 'loss' && trade.status !== 'loss') return false;\n      }\n\n      return true;\n    });\n\n    // Sort trades\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'newest':\n          return new Date(b.dateTime || b.createdAt) - new Date(a.dateTime || a.createdAt);\n        case 'oldest':\n          return new Date(a.dateTime || a.createdAt) - new Date(b.dateTime || b.createdAt);\n        case 'profit':\n          return (b.actualProfit || 0) - (a.actualProfit || 0);\n        case 'loss':\n          return (a.actualProfit || 0) - (b.actualProfit || 0);\n        case 'pair':\n          return (a.tradingPair || '').localeCompare(b.tradingPair || '');\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredTrades(filtered);\n  };\n\n  const handleAccountSwitch = (accountId) => {\n    setCurrentAccountId(accountId);\n    localStorage.setItem('currentAccountId', accountId);\n  };\n\n  const handleAddAccount = async () => {\n    if (!newAccount.name || !newAccount.balance) return;\n\n    try {\n      const token = Cookies.get('auth-token');\n      const response = await fetch('/api/accounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: newAccount.name,\n          balance: parseFloat(newAccount.balance),\n          tag: newAccount.tag\n        })\n      });\n\n      if (response.ok) {\n        const account = await response.json();\n        setAccounts(prev => [...prev, account]);\n        setShowAddAccountModal(false);\n        setNewAccount({ name: '', balance: '', tag: 'personal' });\n\n        // Switch to new account\n        const newAccountId = String(account.id || account._id);\n        setCurrentAccountId(newAccountId);\n        localStorage.setItem('currentAccountId', newAccountId);\n      }\n    } catch (error) {\n      console.error('Error adding account:', error);\n    }\n  };\n\n  const handleEditAccount = (account) => {\n    // Implementation for editing account\n    console.log('Edit account:', account);\n  };\n\n  const handleDeleteAccount = async (accountId) => {\n    try {\n      const token = Cookies.get('auth-token');\n      const response = await fetch(`/api/accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      if (response.ok) {\n        setAccounts(prev => prev.filter(acc => (acc.id || acc._id) !== accountId));\n\n        // If deleted account was current, switch to first available\n        if (String(currentAccountId) === String(accountId)) {\n          const remainingAccounts = accounts.filter(acc => acc.id !== accountId && acc._id !== accountId);\n          if (remainingAccounts.length > 0) {\n            const newCurrentId = remainingAccounts[0].id || remainingAccounts[0]._id;\n            setCurrentAccountId(newCurrentId);\n            localStorage.setItem('currentAccountId', String(newCurrentId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting account:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    Cookies.remove('auth-token');\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAMTradeMode');\n    router.push('/login');\n  };\n\n  // Trade action handlers\n  const handleViewTrade = (trade) => {\n    setSelectedTrade(trade);\n    setShowViewModal(true);\n  };\n\n  const handleEditTrade = (trade) => {\n    setSelectedTrade(trade);\n    // Initialize edit form with ALL current trade data\n    setEditFormData({\n      // Date & Time Information\n      dateTime: trade.dateTime || new Date().toISOString(),\n      manualDateTime: trade.manualDateTime || false,\n      weekday: trade.weekday || '',\n      month: trade.month || '',\n      quarter: trade.quarter || '',\n\n      // Basic Trade Information\n      accountSize: trade.accountSize || 0,\n      direction: trade.direction || '',\n      tradingPair: trade.tradingPair || '',\n      entryPrice: trade.entryPrice || '',\n      takeProfit: trade.takeProfit || '',\n      stopLoss: trade.stopLoss || '',\n      riskPercent: trade.riskPercent || '2',\n\n      // AM Trade Methodology Fields\n      setup: trade.setup || '',\n      htfFramework: trade.htfFramework || '',\n      strategy: trade.strategy || '',\n      dailyProfile: trade.dailyProfile || '',\n      entryCandle: trade.entryCandle || '',\n      entryTime: trade.entryTime || '',\n      entryTimeFrame: trade.entryTimeFrame || '',\n      entryConfluence: trade.entryConfluence || '',\n      duration: trade.duration || '',\n      plannedRR: trade.plannedRR || '',\n\n      // Analysis & Notes\n      analysis: trade.analysis || '',\n      notes: trade.notes || '',\n      riskManagementLessons: trade.riskManagementLessons || '',\n      tags: trade.tags || '',\n\n      // Additional fields that might exist\n      screenshot: trade.screenshot || null,\n\n      // Status fields (for reference, not editable in edit modal)\n      status: trade.status || null,\n      actualEntry: trade.actualEntry || null,\n      actualExit: trade.actualExit || null,\n      actualProfit: trade.actualProfit || null,\n      exitReason: trade.exitReason || null,\n      exitNotes: trade.exitNotes || ''\n    });\n\n    // Calculate initial results based on current trade data\n    const initialResults = calculateEditResults({\n      accountSize: trade.accountSize || 0,\n      direction: trade.direction || '',\n      tradingPair: trade.tradingPair || '',\n      entryPrice: trade.entryPrice || '',\n      takeProfit: trade.takeProfit || '',\n      stopLoss: trade.stopLoss || '',\n      riskPercent: trade.riskPercent || '2'\n    });\n\n    setEditCalculatedResults(trade.calculatedResults || initialResults);\n    setErrors({});\n    setShowEditModal(true);\n  };\n\n  const handleUpdateTrade = (trade) => {\n    setSelectedTrade(trade);\n    // Initialize update form with current trade data\n    setUpdateFormData({\n      status: trade.status || '',\n      actualEntry: trade.actualEntry || '',\n      actualExit: trade.actualExit || '',\n      actualProfit: trade.actualProfit || '',\n      exitReason: trade.exitReason || '',\n      exitNotes: trade.exitNotes || ''\n    });\n    setErrors({});\n    setShowUpdateModal(true);\n  };\n\n  const handleDeleteTrade = (trade) => {\n    setSelectedTrade(trade);\n    setShowDeleteModal(true);\n  };\n\n  const confirmDeleteTrade = async () => {\n    if (!selectedTrade) return;\n\n    setIsSubmitting(true);\n    try {\n      const token = Cookies.get('auth-token');\n      const response = await fetch(`/api/am-trades?tradeId=${selectedTrade._id}&userId=${user?.id || user?._id}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      if (response.ok) {\n        setTrades(prev => prev.filter(trade => trade._id !== selectedTrade._id));\n        setShowDeleteModal(false);\n        setSelectedTrade(null);\n        alert('Trade deleted successfully!');\n      } else {\n        alert('Failed to delete trade. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting trade:', error);\n      alert('Error deleting trade. Please check your connection and try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle edit form submission\n  const handleEditSubmit = async () => {\n    if (!selectedTrade) return;\n\n    // Validate required fields\n    const newErrors = {};\n    if (!editFormData.tradingPair) newErrors.tradingPair = 'Trading pair is required';\n    if (!editFormData.entryPrice) newErrors.entryPrice = 'Entry price is required';\n    if (!editFormData.takeProfit) newErrors.takeProfit = 'Take profit is required';\n    if (!editFormData.stopLoss) newErrors.stopLoss = 'Stop loss is required';\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      const token = Cookies.get('auth-token');\n      const response = await fetch('/api/am-trades', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          tradeId: selectedTrade._id,\n          userId: user?.id || user?._id,\n          ...editFormData,\n          calculatedResults: editCalculatedResults\n        })\n      });\n\n      if (response.ok) {\n        // Update the trade in local state\n        setTrades(prev => prev.map(trade =>\n          trade._id === selectedTrade._id\n            ? { ...trade, ...editFormData, calculatedResults: editCalculatedResults }\n            : trade\n        ));\n        setShowEditModal(false);\n        setSelectedTrade(null);\n        setEditFormData({});\n        setEditCalculatedResults({});\n        alert('Trade updated successfully!');\n      } else {\n        alert('Failed to update trade. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error updating trade:', error);\n      alert('Error updating trade. Please check your connection and try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle update form submission\n  const handleUpdateSubmit = async () => {\n    if (!selectedTrade) return;\n\n    // Validate required fields for update\n    const newErrors = {};\n    if (!updateFormData.status) newErrors.status = 'Status is required';\n    if (updateFormData.status !== 'pending' && !updateFormData.actualProfit) {\n      newErrors.actualProfit = 'Actual profit/loss is required';\n    }\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      const token = Cookies.get('auth-token');\n      const response = await fetch('/api/am-trades', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          tradeId: selectedTrade._id,\n          userId: user?.id || user?._id,\n          ...updateFormData,\n          updatedAt: new Date().toISOString()\n        })\n      });\n\n      if (response.ok) {\n        // Update the trade in local state\n        setTrades(prev => prev.map(trade =>\n          trade._id === selectedTrade._id\n            ? { ...trade, ...updateFormData }\n            : trade\n        ));\n        setShowUpdateModal(false);\n        setSelectedTrade(null);\n        setUpdateFormData({});\n        alert('Trade status updated successfully!');\n      } else {\n        alert('Failed to update trade status. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error updating trade status:', error);\n      alert('Error updating trade status. Please check your connection and try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Helper functions\n  const getTagColor = (tag) => {\n    const colors = {\n      personal: 'bg-blue-600',\n      business: 'bg-green-600',\n      demo: 'bg-purple-600',\n      forex: 'bg-orange-600',\n      crypto: 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      personal: 'Personal',\n      business: 'Business',\n      demo: 'Demo',\n      forex: 'Forex',\n      crypto: 'Crypto'\n    };\n    return names[tag] || 'Personal';\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'win':\n        return 'bg-green-100 text-green-800 border-green-200';\n      case 'loss':\n        return 'bg-red-100 text-red-800 border-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getDirectionColor = (direction) => {\n    return direction === 'long'\n      ? 'bg-green-100 text-green-800 border-green-200'\n      : 'bg-red-100 text-red-800 border-red-200';\n  };\n\n  // Auto-populate date fields when date changes (for edit modal)\n  const handleEditDateChange = (dateTimeValue) => {\n    if (!dateTimeValue) return;\n\n    const date = new Date(dateTimeValue);\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    const weekday = weekdays[date.getDay()];\n    const month = months[date.getMonth()];\n    const quarter = `Q${Math.floor(date.getMonth() / 3) + 1}`;\n\n    setEditFormData(prev => ({\n      ...prev,\n      dateTime: dateTimeValue,\n      weekday: weekday,\n      month: month,\n      quarter: quarter\n    }));\n  };\n\n  // Trading pairs data for edit modal (same as add-trade page)\n  const tradingPairs = {\n    forex: [\n      { pair: 'EUR/USD', name: 'Euro/US Dollar' },\n      { pair: 'GBP/USD', name: 'British Pound/US Dollar' },\n      { pair: 'USD/JPY', name: 'US Dollar/Japanese Yen' },\n      { pair: 'USD/CHF', name: 'US Dollar/Swiss Franc' },\n      { pair: 'AUD/USD', name: 'Australian Dollar/US Dollar' },\n      { pair: 'USD/CAD', name: 'US Dollar/Canadian Dollar' },\n      { pair: 'NZD/USD', name: 'New Zealand Dollar/US Dollar' },\n      { pair: 'EUR/GBP', name: 'Euro/British Pound' },\n      { pair: 'EUR/JPY', name: 'Euro/Japanese Yen' },\n      { pair: 'GBP/JPY', name: 'British Pound/Japanese Yen' },\n      { pair: 'AUD/JPY', name: 'Australian Dollar/Japanese Yen' },\n      { pair: 'CAD/JPY', name: 'Canadian Dollar/Japanese Yen' },\n      { pair: 'CHF/JPY', name: 'Swiss Franc/Japanese Yen' },\n      { pair: 'NZD/JPY', name: 'New Zealand Dollar/Japanese Yen' },\n      { pair: 'EUR/CHF', name: 'Euro/Swiss Franc' },\n      { pair: 'GBP/CHF', name: 'British Pound/Swiss Franc' },\n      { pair: 'AUD/CHF', name: 'Australian Dollar/Swiss Franc' },\n      { pair: 'CAD/CHF', name: 'Canadian Dollar/Swiss Franc' },\n      { pair: 'NZD/CHF', name: 'New Zealand Dollar/Swiss Franc' },\n      { pair: 'EUR/AUD', name: 'Euro/Australian Dollar' },\n      { pair: 'GBP/AUD', name: 'British Pound/Australian Dollar' },\n      { pair: 'EUR/CAD', name: 'Euro/Canadian Dollar' },\n      { pair: 'GBP/CAD', name: 'British Pound/Canadian Dollar' },\n      { pair: 'AUD/CAD', name: 'Australian Dollar/Canadian Dollar' },\n      { pair: 'EUR/NZD', name: 'Euro/New Zealand Dollar' },\n      { pair: 'GBP/NZD', name: 'British Pound/New Zealand Dollar' },\n      { pair: 'AUD/NZD', name: 'Australian Dollar/New Zealand Dollar' },\n      { pair: 'CAD/NZD', name: 'Canadian Dollar/New Zealand Dollar' }\n    ],\n    commodities: [\n      { pair: 'XAUUSD', name: 'Gold/US Dollar' },\n      { pair: 'XAGUSD', name: 'Silver/US Dollar' },\n      { pair: 'XBRUSD', name: 'Brent Oil/US Dollar' },\n      { pair: 'XTIUSD', name: 'WTI Oil/US Dollar' },\n      { pair: 'XAUEUR', name: 'Gold/Euro' },\n      { pair: 'XAUJPY', name: 'Gold/Japanese Yen' },\n      { pair: 'XAUGBP', name: 'Gold/British Pound' },\n      { pair: 'XAUAUD', name: 'Gold/Australian Dollar' },\n      { pair: 'XAUCAD', name: 'Gold/Canadian Dollar' },\n      { pair: 'XAUCHF', name: 'Gold/Swiss Franc' }\n    ],\n    crypto: [\n      { pair: 'BTC/USD', name: 'Bitcoin/US Dollar' },\n      { pair: 'ETH/USD', name: 'Ethereum/US Dollar' },\n      { pair: 'LTC/USD', name: 'Litecoin/US Dollar' },\n      { pair: 'XRP/USD', name: 'Ripple/US Dollar' },\n      { pair: 'ADA/USD', name: 'Cardano/US Dollar' },\n      { pair: 'DOT/USD', name: 'Polkadot/US Dollar' },\n      { pair: 'LINK/USD', name: 'Chainlink/US Dollar' },\n      { pair: 'BCH/USD', name: 'Bitcoin Cash/US Dollar' },\n      { pair: 'XLM/USD', name: 'Stellar/US Dollar' },\n      { pair: 'UNI/USD', name: 'Uniswap/US Dollar' }\n    ]\n  };\n\n  // Get trading pair details\n  const getTradingPairDetails = (pairSymbol) => {\n    for (const [category, pairs] of Object.entries(tradingPairs)) {\n      const pair = pairs.find(p => p.pair === pairSymbol);\n      if (pair) {\n        return { ...pair, category };\n      }\n    }\n    return null;\n  };\n\n  // Calculate pip value based on pair type\n  const calculatePipValue = (pairDetails) => {\n    if (!pairDetails) return 0;\n    const { category, pair } = pairDetails;\n\n    switch (category) {\n      case 'forex':\n        if (pair.includes('JPY')) {\n          return 1000; // JPY pairs: 1 pip = 0.01\n        } else {\n          return 10; // Most forex pairs: 1 pip = 0.0001\n        }\n      case 'crypto':\n        return 1; // Crypto: varies by exchange\n      case 'commodities':\n        if (pair.includes('XAU')) return 100; // Gold\n        if (pair.includes('XAG')) return 50; // Silver\n        if (pair.includes('XTI') || pair.includes('XBR')) return 100; // Oil\n        return 10; // Default\n      default:\n        return 10; // Default\n    }\n  };\n\n  // Calculate pips based on pair type\n  const calculatePips = (pairDetails, price1, price2) => {\n    if (!pairDetails || !price1 || !price2) return 0;\n    const { category, pair } = pairDetails;\n    const priceDiff = Math.abs(price1 - price2);\n\n    switch (category) {\n      case 'forex':\n        if (pair.includes('JPY')) {\n          return priceDiff * 100; // JPY pairs\n        } else {\n          return priceDiff * 10000; // Most forex\n        }\n      case 'crypto':\n        return priceDiff; // Crypto\n      case 'commodities':\n        if (pair.includes('XAU')) return priceDiff * 10; // Gold\n        if (pair.includes('XAG')) return priceDiff * 100; // Silver\n        if (pair.includes('XTI') || pair.includes('XBR')) return priceDiff * 100; // Oil\n        return priceDiff * 100; // Others\n      default:\n        return priceDiff * 10000; // Default\n    }\n  };\n\n  // Main calculation function for edit modal\n  const calculateEditResults = (data) => {\n    const entryPrice = parseFloat(data.entryPrice) || 0;\n    const takeProfit = parseFloat(data.takeProfit) || 0;\n    const stopLoss = parseFloat(data.stopLoss) || 0;\n    const accountSize = parseFloat(data.accountSize) || 0;\n    const riskPercent = parseFloat(data.riskPercent) || 2;\n\n    if (!accountSize || !entryPrice || !stopLoss || !takeProfit || !data.tradingPair) {\n      return {\n        riskAmount: 0,\n        lotSize: 0,\n        potentialProfit: 0,\n        potentialLoss: 0,\n        profitPips: 0,\n        lossPips: 0,\n        riskRewardRatio: 0\n      };\n    }\n\n    const pairDetails = getTradingPairDetails(data.tradingPair);\n    if (!pairDetails) {\n      return {\n        riskAmount: 0,\n        lotSize: 0,\n        potentialProfit: 0,\n        potentialLoss: 0,\n        profitPips: 0,\n        lossPips: 0,\n        riskRewardRatio: 0\n      };\n    }\n\n    const riskAmount = (accountSize * riskPercent) / 100;\n    const lossPips = calculatePips(pairDetails, entryPrice, stopLoss);\n    const profitPips = calculatePips(pairDetails, entryPrice, takeProfit);\n    const pipValuePerLot = calculatePipValue(pairDetails);\n    const lotSize = lossPips > 0 ? riskAmount / (lossPips * pipValuePerLot) : 0;\n    const potentialLoss = riskAmount;\n    const potentialProfit = profitPips * pipValuePerLot * lotSize;\n    const riskRewardRatio = potentialProfit > 0 ? potentialProfit / potentialLoss : 0;\n\n    return {\n      riskAmount: parseFloat(riskAmount.toFixed(2)),\n      lotSize: parseFloat(Math.max(0, lotSize).toFixed(4)),\n      potentialProfit: parseFloat(Math.max(0, potentialProfit).toFixed(2)),\n      potentialLoss: parseFloat(potentialLoss.toFixed(2)),\n      profitPips: parseFloat(profitPips.toFixed(1)),\n      lossPips: parseFloat(lossPips.toFixed(1)),\n      riskRewardRatio: parseFloat(riskRewardRatio.toFixed(2))\n    };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-blue-600 border-t-transparent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 flex\">\n      <Sidebar\n        user={user}\n        currentAccountId={currentAccountId}\n        accounts={accounts}\n        onAccountSwitch={handleAccountSwitch}\n        onAddAccount={() => setShowAddAccountModal(true)}\n        onEditAccount={handleEditAccount}\n        onDeleteAccount={handleDeleteAccount}\n        onLogout={handleLogout}\n        onUpdateUser={(updatedUser) => setUser(updatedUser)}\n      />\n\n      {/* Main Content */}\n      <main className=\"flex-1 lg:ml-64 p-3 sm:p-6 lg:p-8\">\n        <div className=\"max-w-8xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-6 sm:mb-8\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-purple-800 bg-clip-text text-transparent\">\n                  AM Trade Journal\n                </h1>\n                <p className=\"text-gray-600 mt-1 sm:mt-2 text-sm sm:text-base\">\n                  Track and analyze your Asian Market trading performance\n                </p>\n              </div>\n              <button\n                onClick={() => router.push('/am-trade/add-am-trade')}\n                className=\"px-4 sm:px-6 py-2.5 sm:py-3 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:via-purple-700 hover:to-indigo-700 transition-all duration-200 font-medium text-sm sm:text-base shadow-lg hover:shadow-xl flex items-center justify-center space-x-2 transform hover:scale-105 active:scale-95\"\n              >\n                <svg className=\"w-4 h-4 sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                </svg>\n                <span>Add New Trade</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Filters and Search */}\n          <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 rounded-2xl sm:rounded-3xl border border-gray-200/60 p-4 sm:p-6 lg:p-8 shadow-lg hover:shadow-xl transition-all duration-300 mb-6 sm:mb-8\">\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 lg:space-x-6\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status Filter</label>\n                  <div className=\"relative\">\n                    <select\n                      value={filterStatus}\n                      onChange={(e) => setFilterStatus(e.target.value)}\n                      className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                    >\n                      <option value=\"all\">All Trades</option>\n                      <option value=\"pending\">Pending</option>\n                      <option value=\"win\">Wins</option>\n                      <option value=\"loss\">Losses</option>\n                    </select>\n                    <div className=\"absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                      <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sort By</label>\n                  <div className=\"relative\">\n                    <select\n                      value={sortBy}\n                      onChange={(e) => setSortBy(e.target.value)}\n                      className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                    >\n                      <option value=\"newest\">Newest First</option>\n                      <option value=\"oldest\">Oldest First</option>\n                      <option value=\"profit\">Highest Profit</option>\n                      <option value=\"loss\">Highest Loss</option>\n                      <option value=\"pair\">Trading Pair</option>\n                    </select>\n                    <div className=\"absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                      <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex-1 lg:max-w-md\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Search Trades</label>\n                <div className=\"relative\">\n                  <svg className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 sm:w-5 sm:h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                  <input\n                    type=\"text\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    placeholder=\"Search by pair, strategy, setup...\"\n                    className=\"w-full pl-9 sm:pl-12 pr-4 py-2.5 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base\"\n                  />\n                  {searchTerm && (\n                    <button\n                      onClick={() => setSearchTerm('')}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Trade Statistics */}\n            <div className=\"mt-6 pt-6 border-t border-gray-200\">\n              <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl sm:text-3xl font-bold text-gray-900\">{filteredTrades.length}</p>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">Total Trades</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl sm:text-3xl font-bold text-green-600\">\n                    {filteredTrades.filter(t => t.status === 'win').length}\n                  </p>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">Wins</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl sm:text-3xl font-bold text-red-600\">\n                    {filteredTrades.filter(t => t.status === 'loss').length}\n                  </p>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">Losses</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl sm:text-3xl font-bold text-blue-600\">\n                    {filteredTrades.length > 0\n                      ? Math.round((filteredTrades.filter(t => t.status === 'win').length / filteredTrades.filter(t => t.status).length) * 100) || 0\n                      : 0}%\n                  </p>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">Win Rate</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Trades List */}\n          {filteredTrades.length > 0 ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6\">\n              {filteredTrades.map((trade) => (\n                <div\n                  key={trade._id || trade.id}\n                  className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 rounded-2xl sm:rounded-3xl border border-gray-200/60 p-4 sm:p-6 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-[1.02]\"\n                >\n                  {/* Trade Header */}\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg\">\n                        <span className=\"text-white text-sm sm:text-base font-bold\">\n                          {trade.tradingPair?.split('/')[0] || 'N/A'}\n                        </span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-base sm:text-lg font-bold text-gray-900\">{trade.tradingPair}</h3>\n                        <p className=\"text-xs sm:text-sm text-gray-600\">{formatDate(trade.dateTime || trade.createdAt)}</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getDirectionColor(trade.direction)}`}>\n                        {trade.direction?.toUpperCase() || 'N/A'}\n                      </span>\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getStatusColor(trade.status)}`}>\n                        {trade.status ? trade.status.charAt(0).toUpperCase() + trade.status.slice(1) : 'Pending'}\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Trade Details */}\n                  <div className=\"space-y-3 mb-4\">\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div className=\"bg-white/50 rounded-xl p-3 border border-gray-200/50\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Entry Price</p>\n                        <p className=\"text-sm font-semibold text-gray-900\">{trade.entryPrice || 'N/A'}</p>\n                      </div>\n                      <div className=\"bg-white/50 rounded-xl p-3 border border-gray-200/50\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Take Profit</p>\n                        <p className=\"text-sm font-semibold text-green-600\">{trade.takeProfit || 'N/A'}</p>\n                      </div>\n                      <div className=\"bg-white/50 rounded-xl p-3 border border-gray-200/50\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Stop Loss</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{trade.stopLoss || 'N/A'}</p>\n                      </div>\n                      <div className=\"bg-white/50 rounded-xl p-3 border border-gray-200/50\">\n                        <p className=\"text-xs text-gray-600 mb-1\">P&L</p>\n                        <p className={`text-sm font-semibold ${\n                          (trade.actualProfit || 0) > 0 ? 'text-green-600' :\n                          (trade.actualProfit || 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                        }`}>\n                          {formatCurrency(trade.actualProfit || 0)}\n                        </p>\n                      </div>\n                    </div>\n\n                    {/* Strategy & Setup */}\n                    {(trade.strategy || trade.setup) && (\n                      <div className=\"bg-white/50 rounded-xl p-3 border border-gray-200/50\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Strategy & Setup</p>\n                        <p className=\"text-sm font-medium text-gray-900\">\n                          {trade.strategy || trade.setup || 'N/A'}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => handleViewTrade(trade)}\n                        className=\"p-2 text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-all duration-200 transform hover:scale-110\"\n                        title=\"View Details\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={() => handleEditTrade(trade)}\n                        className=\"p-2 text-green-600 hover:text-green-700 hover:bg-green-50 rounded-lg transition-all duration-200 transform hover:scale-110\"\n                        title=\"Edit Trade\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={() => handleUpdateTrade(trade)}\n                        className=\"p-2 text-purple-600 hover:text-purple-700 hover:bg-purple-50 rounded-lg transition-all duration-200 transform hover:scale-110\"\n                        title=\"Update Status\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={() => handleDeleteTrade(trade)}\n                        className=\"p-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-all duration-200 transform hover:scale-110\"\n                        title=\"Delete Trade\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                      </button>\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {trade.weekday || 'N/A'}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 rounded-2xl sm:rounded-3xl border border-gray-200/60 p-8 sm:p-12 shadow-lg text-center\">\n              <div className=\"w-16 h-16 sm:w-20 sm:h-20 mx-auto mb-6 bg-gradient-to-br from-blue-100 to-purple-100 rounded-2xl flex items-center justify-center\">\n                <svg className=\"w-8 h-8 sm:w-10 sm:h-10 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-2\">No AM Trades Found</h3>\n              <p className=\"text-gray-600 mb-6 text-sm sm:text-base\">\n                {searchTerm || filterStatus !== 'all'\n                  ? 'No trades match your current filters. Try adjusting your search or filter criteria.'\n                  : 'Start building your AM trading journal by adding your first morning session trade.'\n                }\n              </p>\n              <button\n                onClick={() => router.push('/am-trade/add-am-trade')}\n                className=\"px-6 py-3 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:via-purple-700 hover:to-indigo-700 transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95 flex items-center space-x-2 mx-auto\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                </svg>\n                <span>Add Your First AM Trade</span>\n              </button>\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Add New Account Modal */}\n      {showAddAccountModal && (\n        <div className=\"fixed inset-0 backdrop-blur-sm bg-gray-900/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-md transform transition-all\">\n            {/* Modal Header */}\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Add New Account</h3>\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"px-6 py-4 space-y-4\">\n              {/* Account Name */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Account Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={newAccount.name}\n                  onChange={(e) => setNewAccount({ ...newAccount, name: e.target.value })}\n                  placeholder=\"e.g., My AM Trading Account\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                />\n              </div>\n\n              {/* Initial Balance */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Initial Balance\n                </label>\n                <div className=\"relative\">\n                  <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\n                  <input\n                    type=\"number\"\n                    value={newAccount.balance}\n                    onChange={(e) => setNewAccount({ ...newAccount, balance: e.target.value })}\n                    placeholder=\"0.00\"\n                    className=\"w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                  />\n                </div>\n              </div>\n\n              {/* Account Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Account Type\n                </label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {[\n                    { value: 'personal', label: 'Personal', color: 'bg-blue-600' },\n                    { value: 'business', label: 'Business', color: 'bg-green-600' },\n                    { value: 'demo', label: 'Demo', color: 'bg-purple-600' },\n                    { value: 'forex', label: 'Forex', color: 'bg-orange-600' },\n                    { value: 'crypto', label: 'Crypto', color: 'bg-indigo-600' }\n                  ].map((tag) => (\n                    <button\n                      key={tag.value}\n                      onClick={() => setNewAccount({ ...newAccount, tag: tag.value })}\n                      className={`flex items-center space-x-3 p-3 rounded-lg border-2 transition-all ${\n                        newAccount.tag === tag.value\n                          ? 'border-blue-500 bg-blue-50'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className={`w-4 h-4 rounded-full ${tag.color}`}></div>\n                      <span className=\"font-medium text-gray-900\">{tag.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <p className=\"text-sm font-medium text-gray-700 mb-2\">Preview</p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${getTagColor(newAccount.tag)}`}></div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {newAccount.name || 'Account Name'}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      ${newAccount.balance ? parseFloat(newAccount.balance).toLocaleString() : '0.00'} • {getTagDisplayName(newAccount.tag)}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-xl\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleAddAccount}\n                  disabled={!newAccount.name || !newAccount.balance}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span>Add Account</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* View Trade Modal */}\n      {showViewModal && selectedTrade && (\n        <div className=\"fixed inset-0 backdrop-blur-md bg-gray-900/60 flex items-center justify-center z-50 p-2 sm:p-4\">\n          <div className=\"bg-white rounded-2xl sm:rounded-3xl shadow-2xl w-full max-w-4xl max-h-[95vh] sm:max-h-[90vh] overflow-hidden transform transition-all duration-300\">\n            {/* Modal Header */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-gray-200 bg-gradient-to-r from-blue-50 via-purple-50 to-indigo-50\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                <div>\n                  <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Trade Details</h3>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">{selectedTrade.tradingPair} • {formatDate(selectedTrade.dateTime || selectedTrade.createdAt)}</p>\n                </div>\n                <button\n                  onClick={() => setShowViewModal(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-white/50 transition-all duration-200 self-end sm:self-auto transform hover:scale-110\"\n                >\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"p-4 sm:p-6 overflow-y-auto max-h-[70vh] sm:max-h-[60vh]\">\n              <div className=\"space-y-6\">\n                {/* Date & Time Information */}\n                <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-4 border border-blue-200\">\n                  <h4 className=\"text-lg font-semibold text-blue-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    Date & Time Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Date & Time</p>\n                      <p className=\"text-sm font-semibold\">{formatDate(selectedTrade.dateTime || selectedTrade.createdAt)}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Weekday</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.weekday || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Month</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.month || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Quarter</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.quarter || 'N/A'}</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Basic Trade Information */}\n                <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl p-4 border border-green-200\">\n                  <h4 className=\"text-lg font-semibold text-green-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Basic Trade Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Trading Pair</p>\n                      <p className=\"text-sm font-semibold text-blue-600\">{selectedTrade.tradingPair || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Direction</p>\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getDirectionColor(selectedTrade.direction)}`}>\n                        {selectedTrade.direction?.toUpperCase() || 'N/A'}\n                      </span>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Account Size</p>\n                      <p className=\"text-sm font-semibold\">{formatCurrency(selectedTrade.accountSize)}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Price</p>\n                      <p className=\"text-sm font-semibold text-blue-600\">{selectedTrade.entryPrice || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Take Profit</p>\n                      <p className=\"text-sm font-semibold text-green-600\">{selectedTrade.takeProfit || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Stop Loss</p>\n                      <p className=\"text-sm font-semibold text-red-600\">{selectedTrade.stopLoss || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Risk Percent</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.riskPercent || '2'}%</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Status</p>\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getStatusColor(selectedTrade.status)}`}>\n                        {selectedTrade.status ? selectedTrade.status.charAt(0).toUpperCase() + selectedTrade.status.slice(1) : 'Pending'}\n                      </span>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Actual P&L</p>\n                      <p className={`text-sm font-semibold ${\n                        (selectedTrade.actualProfit || 0) > 0 ? 'text-green-600' :\n                        (selectedTrade.actualProfit || 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {formatCurrency(selectedTrade.actualProfit || 0)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* AM Trade Methodology */}\n                <div className=\"bg-gradient-to-br from-purple-50 to-indigo-50 rounded-xl p-4 border border-purple-200\">\n                  <h4 className=\"text-lg font-semibold text-purple-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    AM Trade Methodology\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Setup</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.setup || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">HTF Framework</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.htfFramework || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Strategy</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.strategy || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Daily Profile</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.dailyProfile || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Candle</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.entryCandle || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Time</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.entryTime || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Timeframe</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.entryTimeFrame || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Confluence</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.entryConfluence || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Duration</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.duration || 'N/A'}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Planned R:R</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.plannedRR || 'N/A'}</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Calculated Results */}\n                {selectedTrade.calculatedResults && (\n                  <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 rounded-xl p-4 border border-yellow-200\">\n                    <h4 className=\"text-lg font-semibold text-yellow-900 mb-4 flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                      </svg>\n                      Calculated Results\n                    </h4>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Risk Amount</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(selectedTrade.calculatedResults.riskAmount || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Lot Size</p>\n                        <p className=\"text-sm font-semibold\">{selectedTrade.calculatedResults.lotSize || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Potential Profit</p>\n                        <p className=\"text-sm font-semibold text-green-600\">{formatCurrency(selectedTrade.calculatedResults.potentialProfit || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Potential Loss</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(selectedTrade.calculatedResults.potentialLoss || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Profit Pips</p>\n                        <p className=\"text-sm font-semibold text-green-600\">{selectedTrade.calculatedResults.profitPips || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Loss Pips</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{selectedTrade.calculatedResults.lossPips || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Risk:Reward</p>\n                        <p className=\"text-sm font-semibold text-blue-600\">1:{selectedTrade.calculatedResults.riskRewardRatio || 0}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Notes and Analysis */}\n                {(selectedTrade.notes || selectedTrade.analysis || selectedTrade.riskManagementLessons) && (\n                  <div className=\"bg-gradient-to-br from-gray-50 to-slate-50 rounded-xl p-4 border border-gray-200\">\n                    <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      Notes & Analysis\n                    </h4>\n                    <div className=\"space-y-4\">\n                      {selectedTrade.analysis && (\n                        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                          <p className=\"text-sm font-medium text-gray-700 mb-2\">Trade Analysis</p>\n                          <p className=\"text-sm text-gray-600 whitespace-pre-wrap\">{selectedTrade.analysis}</p>\n                        </div>\n                      )}\n                      {selectedTrade.notes && (\n                        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                          <p className=\"text-sm font-medium text-gray-700 mb-2\">Trade Notes</p>\n                          <p className=\"text-sm text-gray-600 whitespace-pre-wrap\">{selectedTrade.notes}</p>\n                        </div>\n                      )}\n                      {selectedTrade.riskManagementLessons && (\n                        <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                          <p className=\"text-sm font-medium text-gray-700 mb-2\">Risk Management Lessons</p>\n                          <p className=\"text-sm text-gray-600 whitespace-pre-wrap\">{selectedTrade.riskManagementLessons}</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Tags */}\n                {selectedTrade.tags && (\n                  <div className=\"bg-gradient-to-br from-indigo-50 to-blue-50 rounded-xl p-4 border border-indigo-200\">\n                    <h4 className=\"text-lg font-semibold text-indigo-900 mb-4 flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n                      </svg>\n                      Tags\n                    </h4>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-sm text-gray-600\">{selectedTrade.tags}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-t border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowViewModal(false)}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200\"\n                >\n                  Close\n                </button>\n                <button\n                  onClick={() => {\n                    setShowViewModal(false);\n                    handleEditTrade(selectedTrade);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all duration-200 flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  <span>Edit Trade</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Trade Modal */}\n      {showEditModal && selectedTrade && (\n        <div className=\"fixed inset-0 backdrop-blur-md bg-gray-900/60 flex items-center justify-center z-50 p-2 sm:p-4\">\n          <div className=\"bg-white rounded-2xl sm:rounded-3xl shadow-2xl w-full max-w-6xl max-h-[95vh] sm:max-h-[90vh] overflow-hidden transform transition-all duration-300\">\n            {/* Modal Header */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-gray-200 bg-gradient-to-r from-green-50 via-emerald-50 to-teal-50\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                <div>\n                  <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Edit Trade</h3>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">{selectedTrade.tradingPair} • {formatDate(selectedTrade.dateTime || selectedTrade.createdAt)}</p>\n                </div>\n                <button\n                  onClick={() => setShowEditModal(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-white/50 transition-all duration-200 self-end sm:self-auto transform hover:scale-110\"\n                >\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"p-4 sm:p-6 overflow-y-auto max-h-[70vh] sm:max-h-[60vh]\">\n              <div className=\"space-y-6\">\n                {/* Basic Trade Information */}\n                <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-4 border border-blue-200\">\n                  <h4 className=\"text-lg font-semibold text-blue-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Basic Trade Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {/* Trading Pair */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trading Pair *</label>\n                      <div className=\"relative\">\n                        <select\n                          value={editFormData.tradingPair || ''}\n                          onChange={(e) => {\n                            const newData = { ...editFormData, tradingPair: e.target.value };\n                            setEditFormData(newData);\n                            // Recalculate when trading pair changes\n                            const results = calculateEditResults(newData);\n                            setEditCalculatedResults(results);\n                          }}\n                          className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                            errors.tradingPair ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                          }`}\n                        >\n                          <option value=\"\">Select Trading Pair</option>\n                          {Object.entries(tradingPairs).map(([category, pairs]) => (\n                            <optgroup key={category} label={category.charAt(0).toUpperCase() + category.slice(1)}>\n                              {pairs.map((pair) => (\n                                <option key={pair.pair} value={pair.pair}>\n                                  {pair.pair} - {pair.name}\n                                </option>\n                              ))}\n                            </optgroup>\n                          ))}\n                        </select>\n                        {errors.tradingPair && (\n                          <p className=\"text-red-600 text-xs mt-1\">{errors.tradingPair}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Direction */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Direction</label>\n                      <div className=\"relative\">\n                        <select\n                          value={editFormData.direction || ''}\n                          onChange={(e) => setEditFormData({ ...editFormData, direction: e.target.value })}\n                          className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                        >\n                          <option value=\"\">Auto-detect</option>\n                          <option value=\"long\">Long (Buy)</option>\n                          <option value=\"short\">Short (Sell)</option>\n                        </select>\n                      </div>\n                    </div>\n\n                    {/* Account Size */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Size</label>\n                      <input\n                        type=\"number\"\n                        value={editFormData.accountSize || ''}\n                        onChange={(e) => {\n                          const newData = { ...editFormData, accountSize: e.target.value };\n                          setEditFormData(newData);\n                          // Recalculate when account size changes\n                          const results = calculateEditResults(newData);\n                          setEditCalculatedResults(results);\n                        }}\n                        placeholder=\"Enter account size\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Entry Price */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Price *</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={editFormData.entryPrice || ''}\n                        onChange={(e) => {\n                          const newData = { ...editFormData, entryPrice: e.target.value };\n                          setEditFormData(newData);\n                          // Auto-detect direction and recalculate\n                          if (newData.entryPrice && newData.takeProfit) {\n                            const entry = parseFloat(newData.entryPrice);\n                            const takeProfit = parseFloat(newData.takeProfit);\n                            if (entry && takeProfit) {\n                              newData.direction = takeProfit > entry ? 'long' : 'short';\n                              setEditFormData(newData);\n                            }\n                          }\n                          const results = calculateEditResults(newData);\n                          setEditCalculatedResults(results);\n                        }}\n                        placeholder=\"Enter entry price\"\n                        className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                          errors.entryPrice ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.entryPrice && (\n                        <p className=\"text-red-600 text-xs mt-1\">{errors.entryPrice}</p>\n                      )}\n                    </div>\n\n                    {/* Take Profit */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Take Profit *</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={editFormData.takeProfit || ''}\n                        onChange={(e) => {\n                          const newData = { ...editFormData, takeProfit: e.target.value };\n                          setEditFormData(newData);\n                          // Auto-detect direction and recalculate\n                          if (newData.entryPrice && newData.takeProfit) {\n                            const entry = parseFloat(newData.entryPrice);\n                            const takeProfit = parseFloat(newData.takeProfit);\n                            if (entry && takeProfit) {\n                              newData.direction = takeProfit > entry ? 'long' : 'short';\n                              setEditFormData(newData);\n                            }\n                          }\n                          const results = calculateEditResults(newData);\n                          setEditCalculatedResults(results);\n                        }}\n                        placeholder=\"Enter take profit\"\n                        className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                          errors.takeProfit ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.takeProfit && (\n                        <p className=\"text-red-600 text-xs mt-1\">{errors.takeProfit}</p>\n                      )}\n                    </div>\n\n                    {/* Stop Loss */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stop Loss *</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={editFormData.stopLoss || ''}\n                        onChange={(e) => {\n                          const newData = { ...editFormData, stopLoss: e.target.value };\n                          setEditFormData(newData);\n                          // Recalculate when stop loss changes\n                          const results = calculateEditResults(newData);\n                          setEditCalculatedResults(results);\n                        }}\n                        placeholder=\"Enter stop loss\"\n                        className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                          errors.stopLoss ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.stopLoss && (\n                        <p className=\"text-red-600 text-xs mt-1\">{errors.stopLoss}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Date & Time Information */}\n                <div className=\"bg-gradient-to-br from-indigo-50 to-purple-50 rounded-xl p-4 border border-indigo-200\">\n                  <h4 className=\"text-lg font-semibold text-indigo-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    Date & Time Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n                    {/* Date & Time */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date & Time</label>\n                      <input\n                        type=\"datetime-local\"\n                        value={editFormData.dateTime ? new Date(editFormData.dateTime).toISOString().slice(0, 16) : ''}\n                        onChange={(e) => handleEditDateChange(e.target.value)}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Weekday */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Weekday</label>\n                      <select\n                        value={editFormData.weekday || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, weekday: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select Weekday</option>\n                        <option value=\"Monday\">Monday</option>\n                        <option value=\"Tuesday\">Tuesday</option>\n                        <option value=\"Wednesday\">Wednesday</option>\n                        <option value=\"Thursday\">Thursday</option>\n                        <option value=\"Friday\">Friday</option>\n                      </select>\n                    </div>\n\n                    {/* Month */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Month</label>\n                      <select\n                        value={editFormData.month || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, month: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select Month</option>\n                        <option value=\"January\">January</option>\n                        <option value=\"February\">February</option>\n                        <option value=\"March\">March</option>\n                        <option value=\"April\">April</option>\n                        <option value=\"May\">May</option>\n                        <option value=\"June\">June</option>\n                        <option value=\"July\">July</option>\n                        <option value=\"August\">August</option>\n                        <option value=\"September\">September</option>\n                        <option value=\"October\">October</option>\n                        <option value=\"November\">November</option>\n                        <option value=\"December\">December</option>\n                      </select>\n                    </div>\n\n                    {/* Quarter */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Quarter</label>\n                      <select\n                        value={editFormData.quarter || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, quarter: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select Quarter</option>\n                        <option value=\"Q1\">Q1 (Jan-Mar)</option>\n                        <option value=\"Q2\">Q2 (Apr-Jun)</option>\n                        <option value=\"Q3\">Q3 (Jul-Sep)</option>\n                        <option value=\"Q4\">Q4 (Oct-Dec)</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* AM Trade Methodology Fields */}\n                <div className=\"bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl p-4 border border-purple-200\">\n                  <h4 className=\"text-lg font-semibold text-purple-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    AM Trade Methodology\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {/* Setup */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Setup</label>\n                      <select\n                        value={editFormData.setup || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, setup: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select setup</option>\n                        <option value=\"Continuation Day\">Continuation Day</option>\n                        <option value=\"Reversal Day\">Reversal Day</option>\n                      </select>\n                    </div>\n\n                    {/* HTF Framework */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">HTF Framework</label>\n                      <select\n                        value={editFormData.htfFramework || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, htfFramework: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select HTF framework</option>\n                        <option value=\"Manipulation\">Manipulation</option>\n                        <option value=\"Divergence\">Divergence</option>\n                        <option value=\"Opposing Candle\">Opposing Candle</option>\n                      </select>\n                    </div>\n\n                    {/* Strategy */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trading Strategy</label>\n                      <input\n                        type=\"text\"\n                        value={editFormData.strategy || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, strategy: e.target.value })}\n                        placeholder=\"e.g., Breakout, Support/Resistance, Trend Following\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Daily Profile */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Daily Profile</label>\n                      <select\n                        value={editFormData.dailyProfile || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, dailyProfile: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select daily profile</option>\n                        <option value=\"18:00 Reversal\">18:00 Reversal</option>\n                        <option value=\"01:00 Reversal\">01:00 Reversal</option>\n                        <option value=\"08:00 Reversal\">08:00 Reversal</option>\n                      </select>\n                    </div>\n\n                    {/* Entry Candle */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Candle</label>\n                      <select\n                        value={editFormData.entryCandle || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, entryCandle: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select entry candle</option>\n                        <option value=\"08:00 Candle\">08:00 Candle</option>\n                        <option value=\"01:00 Candle\">01:00 Candle</option>\n                      </select>\n                    </div>\n\n                    {/* Entry Time */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Time</label>\n                      <select\n                        value={editFormData.entryTime || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, entryTime: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select entry time</option>\n                        <option value=\"9:30-9:59\">9:30-9:59</option>\n                        <option value=\"7:00-7:59\">7:00-7:59</option>\n                        <option value=\"4:00-4:59\">4:00-4:59</option>\n                        <option value=\"2:00-2:59\">2:00-2:59</option>\n                        <option value=\"8:00-8:29\">8:00-8:29</option>\n                        <option value=\"12:00-12:59\">12:00-12:59</option>\n                        <option value=\"3:00-3:59\">3:00-3:59</option>\n                        <option value=\"6:00-6:59\">6:00-6:59</option>\n                        <option value=\"11:00-11:59\">11:00-11:59</option>\n                        <option value=\"10:00-10:59\">10:00-10:59</option>\n                        <option value=\"5:00-5:59\">5:00-5:59</option>\n                        <option value=\"9:00-9:29\">9:00-9:29</option>\n                        <option value=\"1:00-1:59\">1:00-1:59</option>\n                        <option value=\"14:00-14:59\">14:00-14:59</option>\n                        <option value=\"13:00-13:59\">13:00-13:59</option>\n                      </select>\n                    </div>\n\n                    {/* Entry Timeframe */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Timeframe</label>\n                      <select\n                        value={editFormData.entryTimeFrame || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, entryTimeFrame: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select time frame</option>\n                        <option value=\"1 minute\">1 minute</option>\n                        <option value=\"< 5 minutes\">&lt; 5 minutes</option>\n                        <option value=\"5 minutes\">5 minutes</option>\n                        <option value=\"15 minutes\">15 minutes</option>\n                        <option value=\"1 hour\">1 hour</option>\n                      </select>\n                    </div>\n\n                    {/* Entry Confluence */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Confluence</label>\n                      <select\n                        value={editFormData.entryConfluence || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, entryConfluence: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select confluence</option>\n                        <option value=\"Short-term Swing\">Short-term Swing</option>\n                        <option value=\"Opposing Candle\">Opposing Candle</option>\n                        <option value=\"Volatility Driver\">Volatility Driver</option>\n                        <option value=\"Divergence\">Divergence</option>\n                      </select>\n                    </div>\n\n                    {/* Duration */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Duration</label>\n                      <input\n                        type=\"text\"\n                        value={editFormData.duration || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, duration: e.target.value })}\n                        placeholder=\"e.g. 45 minutes\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Risk Percent */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Risk Percent</label>\n                      <select\n                        value={editFormData.riskPercent || '2%'}\n                        onChange={(e) => {\n                          const newData = { ...editFormData, riskPercent: e.target.value };\n                          setEditFormData(newData);\n                          // Recalculate when risk percent changes\n                          const results = calculateEditResults(newData);\n                          setEditCalculatedResults(results);\n                        }}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select risk %</option>\n                        <option value=\"0.25%\">0.25% - Conservative</option>\n                        <option value=\"0.5%\">0.5% - Moderate</option>\n                        <option value=\"1%\">1% - Standard</option>\n                        <option value=\"2%\">2% - Aggressive</option>\n                      </select>\n                    </div>\n\n                    {/* Planned R:R */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Planned R:R</label>\n                      <select\n                        value={editFormData.plannedRR || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, plannedRR: e.target.value })}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      >\n                        <option value=\"\">Select RR</option>\n                        <option value=\"2R\">2R - Conservative</option>\n                        <option value=\"3R\">3R - Balanced</option>\n                        <option value=\"4R\">4R - Aggressive</option>\n                        <option value=\"5R\">5R - High Risk</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Analysis and Notes */}\n                <div className=\"bg-gradient-to-br from-gray-50 to-slate-50 rounded-xl p-4 border border-gray-200\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    Analysis & Notes\n                  </h4>\n                  <div className=\"grid grid-cols-1 gap-4\">\n                    {/* Analysis */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trade Analysis</label>\n                      <textarea\n                        value={editFormData.analysis || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, analysis: e.target.value })}\n                        placeholder=\"Detailed analysis of the trade setup, market conditions, technical analysis...\"\n                        rows={4}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                      />\n                    </div>\n\n                    {/* Notes */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trade Notes</label>\n                      <textarea\n                        value={editFormData.notes || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, notes: e.target.value })}\n                        placeholder=\"General notes, observations, feelings during the trade...\"\n                        rows={3}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                      />\n                    </div>\n\n                    {/* Risk Management Lessons */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Risk Management Lessons</label>\n                      <textarea\n                        value={editFormData.riskManagementLessons || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, riskManagementLessons: e.target.value })}\n                        placeholder=\"What did you learn about risk management from this trade?\"\n                        rows={3}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                      />\n                    </div>\n\n                    {/* Tags */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tags</label>\n                      <input\n                        type=\"text\"\n                        value={editFormData.tags || ''}\n                        onChange={(e) => setEditFormData({ ...editFormData, tags: e.target.value })}\n                        placeholder=\"e.g., breakout, news, high-probability, mistake\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Calculated Results Display */}\n                {editCalculatedResults && Object.keys(editCalculatedResults).length > 0 && (\n                  <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 rounded-xl p-4 border border-yellow-200\">\n                    <h4 className=\"text-lg font-semibold text-yellow-900 mb-4 flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                      </svg>\n                      Live Calculated Results\n                    </h4>\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-7 gap-3\">\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Risk Amount</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(editCalculatedResults.riskAmount || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Lot Size</p>\n                        <p className=\"text-sm font-semibold\">{editCalculatedResults.lotSize || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Potential Profit</p>\n                        <p className=\"text-sm font-semibold text-green-600\">{formatCurrency(editCalculatedResults.potentialProfit || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Potential Loss</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{formatCurrency(editCalculatedResults.potentialLoss || 0)}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Profit Pips</p>\n                        <p className=\"text-sm font-semibold text-green-600\">{editCalculatedResults.profitPips || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Loss Pips</p>\n                        <p className=\"text-sm font-semibold text-red-600\">{editCalculatedResults.lossPips || 0}</p>\n                      </div>\n                      <div className=\"bg-white rounded-lg p-3 shadow-sm text-center\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Risk:Reward</p>\n                        <p className=\"text-sm font-semibold text-blue-600\">1:{editCalculatedResults.riskRewardRatio || 0}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-t border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowEditModal(false)}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200\"\n                  disabled={isSubmitting}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleEditSubmit}\n                  disabled={isSubmitting}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-xl hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <svg className=\"animate-spin w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      <span>Saving...</span>\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>Save Changes</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Update Trade Modal - Full Featured like Main Journal */}\n      {showUpdateModal && selectedTrade && (\n        <AMTradeStatusUpdateModal\n          trade={selectedTrade}\n          accounts={accounts}\n          onClose={() => {\n            setShowUpdateModal(false);\n            setSelectedTrade(null);\n            setUpdateFormData({});\n          }}\n          onStatusUpdated={(updatedTrade, updatedAccount) => {\n            setTrades(prev => prev.map(trade =>\n              trade._id === updatedTrade._id ? updatedTrade : trade\n            ));\n            if (updatedAccount) {\n              setAccounts(prev => prev.map(acc =>\n                acc.id === updatedAccount.id || acc._id === updatedAccount._id\n                  ? updatedAccount : acc\n              ));\n            }\n            setShowUpdateModal(false);\n            setSelectedTrade(null);\n            setUpdateFormData({});\n          }}\n        />\n      )}\n\n      {/* Old Update Modal - Remove this section */}\n      {false && showUpdateModal && selectedTrade && (\n        <div className=\"fixed inset-0 backdrop-blur-md bg-gray-900/60 flex items-center justify-center z-50 p-2 sm:p-4\">\n          <div className=\"bg-white rounded-2xl sm:rounded-3xl shadow-2xl w-full max-w-4xl max-h-[95vh] sm:max-h-[90vh] overflow-hidden transform transition-all duration-300\">\n            {/* Modal Header */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-gray-200 bg-gradient-to-r from-purple-50 via-indigo-50 to-blue-50\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                <div>\n                  <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Update Trade Status</h3>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">{selectedTrade.tradingPair} • {formatDate(selectedTrade.dateTime || selectedTrade.createdAt)}</p>\n                </div>\n                <button\n                  onClick={() => setShowUpdateModal(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-white/50 transition-all duration-200 self-end sm:self-auto transform hover:scale-110\"\n                >\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"p-4 sm:p-6 overflow-y-auto max-h-[70vh] sm:max-h-[60vh]\">\n              <div className=\"space-y-6\">\n                {/* Current Trade Summary */}\n                <div className=\"bg-gradient-to-br from-gray-50 to-slate-50 rounded-xl p-4 border border-gray-200\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    Current Trade Summary\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Trading Pair</p>\n                      <p className=\"text-sm font-semibold text-blue-600\">{selectedTrade.tradingPair}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Direction</p>\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getDirectionColor(selectedTrade.direction)}`}>\n                        {selectedTrade.direction?.toUpperCase()}\n                      </span>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Entry Price</p>\n                      <p className=\"text-sm font-semibold\">{selectedTrade.entryPrice}</p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Current Status</p>\n                      <span className={`inline-flex px-2 py-1 rounded-lg text-xs font-medium border ${getStatusColor(selectedTrade.status)}`}>\n                        {selectedTrade.status ? selectedTrade.status.charAt(0).toUpperCase() + selectedTrade.status.slice(1) : 'Pending'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Update Form */}\n                <div className=\"bg-gradient-to-br from-purple-50 to-indigo-50 rounded-xl p-4 border border-purple-200\">\n                  <h4 className=\"text-lg font-semibold text-purple-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    Update Trade Results\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                    {/* Trade Status */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trade Status *</label>\n                      <div className=\"relative\">\n                        <select\n                          value={updateFormData.status || ''}\n                          onChange={(e) => setUpdateFormData({ ...updateFormData, status: e.target.value })}\n                          className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 ${\n                            errors.status ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                          }`}\n                        >\n                          <option value=\"\">Select Status</option>\n                          <option value=\"pending\">Pending</option>\n                          <option value=\"win\">Win</option>\n                          <option value=\"loss\">Loss</option>\n                        </select>\n                        {errors.status && (\n                          <p className=\"text-red-600 text-xs mt-1\">{errors.status}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Actual Entry Price */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Actual Entry Price</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={updateFormData.actualEntry || ''}\n                        onChange={(e) => setUpdateFormData({ ...updateFormData, actualEntry: e.target.value })}\n                        placeholder=\"Enter actual entry price\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Actual Exit Price */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Actual Exit Price</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={updateFormData.actualExit || ''}\n                        onChange={(e) => setUpdateFormData({ ...updateFormData, actualExit: e.target.value })}\n                        placeholder=\"Enter actual exit price\"\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200\"\n                      />\n                    </div>\n\n                    {/* Actual Profit/Loss */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Actual Profit/Loss *</label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={updateFormData.actualProfit || ''}\n                        onChange={(e) => setUpdateFormData({ ...updateFormData, actualProfit: e.target.value })}\n                        placeholder=\"Enter actual P&L (positive for profit, negative for loss)\"\n                        className={`w-full px-3 py-2.5 border rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 ${\n                          errors.actualProfit ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.actualProfit && (\n                        <p className=\"text-red-600 text-xs mt-1\">{errors.actualProfit}</p>\n                      )}\n                    </div>\n\n                    {/* Exit Reason */}\n                    <div className=\"sm:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Reason</label>\n                      <div className=\"relative\">\n                        <select\n                          value={updateFormData.exitReason || ''}\n                          onChange={(e) => setUpdateFormData({ ...updateFormData, exitReason: e.target.value })}\n                          className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200\"\n                        >\n                          <option value=\"\">Select Exit Reason</option>\n                          <option value=\"take-profit-hit\">Take Profit Hit</option>\n                          <option value=\"stop-loss-hit\">Stop Loss Hit</option>\n                          <option value=\"manual-close-profit\">Manual Close (Profit)</option>\n                          <option value=\"manual-close-loss\">Manual Close (Loss)</option>\n                          <option value=\"break-even\">Break Even</option>\n                          <option value=\"partial-close\">Partial Close</option>\n                          <option value=\"news-event\">News Event</option>\n                          <option value=\"time-based\">Time-Based Exit</option>\n                          <option value=\"other\">Other</option>\n                        </select>\n                      </div>\n                    </div>\n\n                    {/* Exit Notes */}\n                    <div className=\"sm:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Notes</label>\n                      <textarea\n                        value={updateFormData.exitNotes || ''}\n                        onChange={(e) => setUpdateFormData({ ...updateFormData, exitNotes: e.target.value })}\n                        placeholder=\"Add notes about the trade exit, lessons learned, what went well or wrong...\"\n                        rows={4}\n                        className=\"w-full px-3 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 resize-none\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Planned vs Actual Comparison */}\n                {selectedTrade.calculatedResults && (\n                  <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 rounded-xl p-4 border border-yellow-200\">\n                    <h4 className=\"text-lg font-semibold text-yellow-900 mb-4 flex items-center\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    Planned vs Actual Comparison\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-2\">Planned Profit</p>\n                      <p className=\"text-sm font-semibold text-green-600\">\n                        {formatCurrency(selectedTrade.calculatedResults.potentialProfit || 0)}\n                      </p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-2\">Actual P&L</p>\n                      <p className={`text-sm font-semibold ${\n                        (updateFormData.actualProfit || 0) > 0 ? 'text-green-600' :\n                        (updateFormData.actualProfit || 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {formatCurrency(updateFormData.actualProfit || 0)}\n                      </p>\n                    </div>\n                    <div className=\"bg-white rounded-lg p-3 shadow-sm\">\n                      <p className=\"text-xs text-gray-600 mb-2\">Difference</p>\n                      <p className={`text-sm font-semibold ${\n                        ((updateFormData.actualProfit || 0) - (selectedTrade.calculatedResults.potentialProfit || 0)) > 0 ? 'text-green-600' :\n                        ((updateFormData.actualProfit || 0) - (selectedTrade.calculatedResults.potentialProfit || 0)) < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {formatCurrency((updateFormData.actualProfit || 0) - (selectedTrade.calculatedResults.potentialProfit || 0))}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                )}\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-t border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowUpdateModal(false)}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200\"\n                  disabled={isSubmitting}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleUpdateSubmit}\n                  disabled={isSubmitting}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded-xl hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <svg className=\"animate-spin w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      <span>Updating...</span>\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                      </svg>\n                      <span>Update Trade</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && selectedTrade && (\n        <div className=\"fixed inset-0 backdrop-blur-md bg-gray-900/60 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-md transform transition-all duration-300\">\n            {/* Modal Header */}\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Delete Trade</h3>\n                  <p className=\"text-sm text-gray-600\">This action cannot be undone</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"px-6 py-4\">\n              <p className=\"text-gray-700 mb-4\">\n                Are you sure you want to delete this trade? This will permanently remove:\n              </p>\n              <div className=\"bg-gray-50 rounded-lg p-4 space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Trading Pair:</span>\n                  <span className=\"text-sm font-medium\">{selectedTrade.tradingPair}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">Date:</span>\n                  <span className=\"text-sm font-medium\">{formatDate(selectedTrade.dateTime || selectedTrade.createdAt)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600\">P&L:</span>\n                  <span className={`text-sm font-medium ${\n                    (selectedTrade.actualProfit || 0) > 0 ? 'text-green-600' :\n                    (selectedTrade.actualProfit || 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                  }`}>\n                    {formatCurrency(selectedTrade.actualProfit || 0)}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-2xl\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowDeleteModal(false)}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200\"\n                  disabled={isSubmitting}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={confirmDeleteTrade}\n                  disabled={isSubmitting}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <svg className=\"animate-spin w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      <span>Deleting...</span>\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n                      <span>Delete Trade</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Enhanced AM Trade Status Update Modal Component (same as main journal)\nfunction AMTradeStatusUpdateModal({ trade, accounts, onClose, onStatusUpdated }) {\n  const [selectedStatus, setSelectedStatus] = useState(trade.status === 'win' || trade.status === 'loss' ? trade.status : 'win');\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('status');\n\n  // Helper function to format currency (local to modal)\n  const formatCurrency = (amount) => {\n    if (amount === null || amount === undefined || isNaN(amount)) return '$0.00';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Form data for trade modifications\n  const [formData, setFormData] = useState({\n    actualEntry: trade.actualEntry || trade.entryPrice || '',\n    actualExit: trade.actualExit || '',\n    stopLoss: trade.stopLoss || '',\n    takeProfit: trade.takeProfit || '',\n    exitReason: trade.exitReason || '',\n    notes: trade.notes || '',\n    actualProfit: trade.actualProfit || '',\n    exitType: trade.actualExit ? 'price' : 'other', // 'price' or 'other'\n    manualPL: trade.actualProfit || '',\n    exitDescription: trade.exitDescription || '',\n    closingImage: null\n  });\n\n  // Auto-populate execution prices based on status selection and existing data\n  const updateExecutionPricesFromStatus = (status) => {\n    // Check if current exit price matches either TP or SL (indicating it was auto-filled)\n    const isAutoFilled = formData.actualExit === trade.takeProfit || formData.actualExit === trade.stopLoss;\n\n    // Auto-populate if:\n    // 1. No exit data entered yet, OR\n    // 2. Current exit price was auto-filled from previous status selection, OR\n    // 3. User is switching between win/loss and we have a previous auto-fill\n    if ((!formData.actualExit && !formData.manualPL) || isAutoFilled || lastAutoFilledStatus) {\n      if (status === 'win' && trade.takeProfit) {\n        setFormData(prev => ({\n          ...prev,\n          actualExit: trade.takeProfit,\n          exitType: 'price'\n        }));\n        setLastAutoFilledStatus('win');\n      } else if (status === 'loss' && trade.stopLoss) {\n        setFormData(prev => ({\n          ...prev,\n          actualExit: trade.stopLoss,\n          exitType: 'price'\n        }));\n        setLastAutoFilledStatus('loss');\n      }\n    }\n  };\n\n  // Calculated results\n  const [calculatedResults, setCalculatedResults] = useState({\n    actualPL: 0,\n    pips: 0,\n    riskRewardRatio: 0,\n    accountImpact: 0\n  });\n\n  // Preview metrics based on status selection\n  const [previewMetrics, setPreviewMetrics] = useState({\n    previewPL: 0,\n    previewPips: 0,\n    previewRiskReward: 0,\n    previewAccountImpact: 0\n  });\n\n  // Track the last auto-filled status to help with visual indicators\n  const [lastAutoFilledStatus, setLastAutoFilledStatus] = useState(null);\n\n  // Handle closing image upload\n  const handleClosingImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (file.size > 5 * 1024 * 1024) { // 5MB limit\n        alert('Image size should be less than 5MB');\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFormData(prev => ({\n          ...prev,\n          closingImage: e.target.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Remove closing image\n  const removeClosingImage = () => {\n    setFormData(prev => ({\n      ...prev,\n      closingImage: null\n    }));\n  };\n\n  // Get current account\n  const currentAccount = accounts.find(acc => acc.id === trade.accountId || acc._id === trade.accountId);\n\n  // Debug logging for account finding\n  console.log('Account finding debug:', {\n    tradeAccountId: trade.accountId,\n    availableAccounts: accounts.map(acc => ({ id: acc.id || acc._id, name: acc.name })),\n    foundAccount: currentAccount ? { id: currentAccount.id || currentAccount._id, name: currentAccount.name, balance: currentAccount.balance } : null\n  });\n\n  // Auto-calculate P&L and metrics\n  const calculateMetrics = (data) => {\n    const actualEntry = parseFloat(data.actualEntry) || 0;\n    const actualExit = parseFloat(data.actualExit) || 0;\n    const stopLoss = parseFloat(data.stopLoss) || 0;\n    const takeProfit = parseFloat(data.takeProfit) || 0;\n    const manualPL = parseFloat(data.manualPL) || 0;\n\n    // If using manual P&L entry (exitType is 'other')\n    if (data.exitType === 'other') {\n      const accountBalance = currentAccount?.balance || 10000;\n      const accountImpact = manualPL ? (manualPL / accountBalance) * 100 : 0;\n\n      return {\n        actualPL: manualPL,\n        pips: 0, // Can't calculate pips without exit price\n        riskRewardRatio: 0, // Can't calculate R:R without exit price\n        accountImpact: parseFloat(accountImpact.toFixed(2))\n      };\n    }\n\n    // Price-based calculation\n    if (!actualEntry || !actualExit) {\n      return {\n        actualPL: 0,\n        pips: 0,\n        riskRewardRatio: 0,\n        accountImpact: 0\n      };\n    }\n\n    // Calculate pips\n    const pips = Math.abs(actualExit - actualEntry) * 10000;\n\n    // Calculate P&L based on direction\n    let priceDifference;\n    if (trade.direction === 'long') {\n      priceDifference = actualExit - actualEntry;\n    } else {\n      priceDifference = actualEntry - actualExit;\n    }\n\n    // Use lot size from trade calculations or default\n    const lotSize = trade.calculatedResults?.lotSize || 0.1;\n    const pipValue = 10; // Simplified pip value\n    const actualPL = (priceDifference * 10000) * pipValue * lotSize;\n\n    // Calculate risk/reward ratio\n    let riskRewardRatio = 0;\n    if (stopLoss && takeProfit && actualEntry) {\n      const riskPips = Math.abs(actualEntry - stopLoss) * 10000;\n      const rewardPips = Math.abs(takeProfit - actualEntry) * 10000;\n      riskRewardRatio = rewardPips / riskPips;\n    }\n\n    // Calculate account impact percentage\n    const accountBalance = currentAccount?.balance || 10000;\n    const accountImpact = (actualPL / accountBalance) * 100;\n\n    return {\n      actualPL: parseFloat(actualPL.toFixed(2)),\n      pips: parseFloat(pips.toFixed(1)),\n      riskRewardRatio: parseFloat(riskRewardRatio.toFixed(2)),\n      accountImpact: parseFloat(accountImpact.toFixed(2))\n    };\n  };\n\n  // Update calculations when form data changes\n  useEffect(() => {\n    const results = calculateMetrics(formData);\n    setCalculatedResults(results);\n\n    // Auto-update actual profit field only for price-based calculations\n    if (formData.exitType === 'price' && results.actualPL !== parseFloat(formData.actualProfit || 0)) {\n      setFormData(prev => ({\n        ...prev,\n        actualProfit: results.actualPL.toString()\n      }));\n    } else if (formData.exitType === 'other' && formData.manualPL !== formData.actualProfit) {\n      setFormData(prev => ({\n        ...prev,\n        actualProfit: formData.manualPL\n      }));\n    }\n  }, [formData.actualEntry, formData.actualExit, formData.stopLoss, formData.takeProfit, formData.exitType, formData.manualPL]);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      const userData = localStorage.getItem('user');\n      const user = userData ? JSON.parse(userData) : null;\n      const userId = user?.id || user?._id;\n\n      // Prepare closing images array\n      const closingImages = [];\n      if (formData.closingImage) {\n        closingImages.push(formData.closingImage);\n      } else if (trade.closingImages && trade.closingImages.length > 0) {\n        closingImages.push(...trade.closingImages);\n      }\n\n      // Prepare update data\n      const updateData = {\n        status: selectedStatus,\n        actualEntry: formData.actualEntry ? parseFloat(formData.actualEntry) : null,\n        actualExit: formData.exitType === 'price' && formData.actualExit ? parseFloat(formData.actualExit) : null,\n        stopLoss: formData.stopLoss ? parseFloat(formData.stopLoss) : trade.stopLoss,\n        takeProfit: formData.takeProfit ? parseFloat(formData.takeProfit) : trade.takeProfit,\n        exitReason: formData.exitReason,\n        notes: formData.notes,\n        actualProfit: calculatedResults.actualPL,\n        exitType: formData.exitType,\n        exitDescription: formData.exitType === 'other' ? formData.exitDescription : null,\n        closingImages: closingImages,\n        whatWentWell: formData.whatWentWell,\n        improvements: formData.improvements,\n        lessons: formData.lessons,\n        calculatedResults: {\n          ...trade.calculatedResults,\n          actualPL: calculatedResults.actualPL,\n          pips: calculatedResults.pips,\n          riskRewardRatio: calculatedResults.riskRewardRatio,\n          accountImpact: calculatedResults.accountImpact\n        }\n      };\n\n      // Update trade\n      const response = await fetch('/api/am-trades', {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tradeId: trade._id,\n          userId: userId,\n          ...updateData\n        })\n      });\n\n      const result = await response.json();\n      if (response.ok && result.success) {\n        // Update account balance if there's a P&L impact\n        let updatedAccount = null;\n        if (calculatedResults.actualPL !== 0 && currentAccount) {\n          const newBalance = currentAccount.balance + calculatedResults.actualPL;\n\n          console.log('Updating account balance:', {\n            currentBalance: currentAccount.balance,\n            actualPL: calculatedResults.actualPL,\n            newBalance: newBalance,\n            accountId: currentAccount.id || currentAccount._id\n          });\n\n          const accountResponse = await fetch('/api/accounts', {\n            method: 'PUT',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              accountId: currentAccount.id || currentAccount._id,\n              userId: userId,\n              updates: { balance: newBalance }\n            })\n          });\n\n          if (accountResponse.ok) {\n            updatedAccount = { ...currentAccount, balance: newBalance };\n            console.log('Account balance updated successfully:', updatedAccount);\n          } else {\n            const errorData = await accountResponse.json();\n            console.error('Failed to update account balance:', errorData);\n          }\n        } else {\n          console.log('No balance update needed:', {\n            actualPL: calculatedResults.actualPL,\n            hasCurrentAccount: !!currentAccount\n          });\n        }\n\n        onStatusUpdated({ ...trade, ...updateData }, updatedAccount);\n      } else {\n        alert('Failed to update AM trade status: ' + (result.message || 'Unknown error'));\n      }\n    } catch (error) {\n      console.error('Error updating AM trade status:', error);\n      alert('Error updating AM trade status: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-md flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-3xl w-full max-w-6xl h-[90vh] flex flex-col shadow-2xl border border-gray-100\">\n        {/* Modern Header */}\n        <div className=\"relative p-8 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center shadow-lg\">\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900\">Update AM Trade Status</h2>\n                <div className=\"flex items-center space-x-4 mt-2\">\n                  <span className=\"text-gray-600 font-semibold\">{trade.tradingPair}</span>\n                  <span className=\"text-gray-400\">•</span>\n                  <div className=\"flex items-center space-x-1\">\n                    {trade.direction === 'long' ? (\n                      <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\n                      </svg>\n                    )}\n                    <span className=\"text-gray-600 font-medium\">{trade.direction?.toUpperCase()}</span>\n                  </div>\n                  <span className=\"text-gray-400\">•</span>\n                  <div className={`flex items-center space-x-1 px-3 py-1 rounded-full text-xs font-medium ${\n                    trade.status === 'win' ? 'bg-green-100 text-green-700' :\n                    trade.status === 'loss' ? 'bg-red-100 text-red-700' :\n                    trade.status === 'active' ? 'bg-blue-100 text-blue-700' :\n                    'bg-gray-100 text-gray-700'\n                  }`}>\n                    <span>Current: {trade.status?.charAt(0).toUpperCase() + trade.status?.slice(1) || 'Pending'}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-3 text-gray-400 hover:text-gray-600 hover:bg-white/80 rounded-2xl transition-all duration-200\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Progress indicator */}\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-green-500 to-emerald-600\"></div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"px-8 border-b border-gray-200\">\n          <div className=\"flex space-x-8\">\n            {[\n              { id: 'status', label: 'Trade Status', icon: '📊' },\n              { id: 'execution', label: 'Execution Details', icon: '⚡' },\n              { id: 'analysis', label: 'Post-Trade Analysis', icon: '📈' }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors duration-200 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <span className=\"mr-2\">{tab.icon}</span>\n                {tab.label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"flex-1 p-8 overflow-y-auto\">\n          {activeTab === 'status' && (\n            <div className=\"space-y-8\">\n              {/* Status Selection */}\n              <div className=\"bg-gradient-to-br from-slate-50 to-gray-100 rounded-2xl p-6 border border-gray-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  Select Trade Outcome\n                </h3>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Win Option */}\n                  <div\n                    onClick={() => {\n                      setSelectedStatus('win');\n                      updateExecutionPricesFromStatus('win');\n                    }}\n                    className={`relative p-6 rounded-2xl border-2 cursor-pointer transition-all duration-300 transform hover:scale-105 ${\n                      selectedStatus === 'win'\n                        ? 'border-green-500 bg-gradient-to-br from-green-50 to-emerald-50 shadow-lg'\n                        : 'border-gray-200 bg-white hover:border-green-300 hover:shadow-md'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\n                          selectedStatus === 'win' ? 'bg-green-500' : 'bg-gray-300'\n                        }`}>\n                          <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                          </svg>\n                        </div>\n                        <div>\n                          <h4 className=\"text-lg font-bold text-gray-900\">Winning Trade</h4>\n                          <p className=\"text-sm text-gray-600\">Trade closed in profit</p>\n                        </div>\n                      </div>\n                      {selectedStatus === 'win' && (\n                        <div className=\"w-6 h-6 bg-green-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n\n                    {trade.takeProfit && (\n                      <div className=\"bg-white/70 rounded-lg p-3 border border-green-200\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Target Price</p>\n                        <p className=\"text-lg font-bold text-green-600\">{trade.takeProfit}</p>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Loss Option */}\n                  <div\n                    onClick={() => {\n                      setSelectedStatus('loss');\n                      updateExecutionPricesFromStatus('loss');\n                    }}\n                    className={`relative p-6 rounded-2xl border-2 cursor-pointer transition-all duration-300 transform hover:scale-105 ${\n                      selectedStatus === 'loss'\n                        ? 'border-red-500 bg-gradient-to-br from-red-50 to-rose-50 shadow-lg'\n                        : 'border-gray-200 bg-white hover:border-red-300 hover:shadow-md'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\n                          selectedStatus === 'loss' ? 'bg-red-500' : 'bg-gray-300'\n                        }`}>\n                          <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\n                          </svg>\n                        </div>\n                        <div>\n                          <h4 className=\"text-lg font-bold text-gray-900\">Losing Trade</h4>\n                          <p className=\"text-sm text-gray-600\">Trade closed in loss</p>\n                        </div>\n                      </div>\n                      {selectedStatus === 'loss' && (\n                        <div className=\"w-6 h-6 bg-red-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n\n                    {trade.stopLoss && (\n                      <div className=\"bg-white/70 rounded-lg p-3 border border-red-200\">\n                        <p className=\"text-xs text-gray-600 mb-1\">Stop Loss</p>\n                        <p className=\"text-lg font-bold text-red-600\">{trade.stopLoss}</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Preview Metrics */}\n              <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  Expected Results Preview\n                </h3>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200 text-center\">\n                    <p className=\"text-xs text-gray-600 mb-2\">Expected P&L</p>\n                    <p className={`text-xl font-bold ${\n                      selectedStatus === 'win' ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {selectedStatus === 'win'\n                        ? formatCurrency(trade.calculatedResults?.potentialProfit || 0)\n                        : formatCurrency(-(trade.calculatedResults?.potentialLoss || 0))\n                      }\n                    </p>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200 text-center\">\n                    <p className=\"text-xs text-gray-600 mb-2\">Expected Pips</p>\n                    <p className={`text-xl font-bold ${\n                      selectedStatus === 'win' ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {selectedStatus === 'win'\n                        ? `+${trade.calculatedResults?.profitPips || 0}`\n                        : `-${trade.calculatedResults?.lossPips || 0}`\n                      }\n                    </p>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200 text-center\">\n                    <p className=\"text-xs text-gray-600 mb-2\">Risk:Reward</p>\n                    <p className=\"text-xl font-bold text-blue-600\">\n                      1:{trade.calculatedResults?.riskRewardRatio || 0}\n                    </p>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200 text-center\">\n                    <p className=\"text-xs text-gray-600 mb-2\">Account Impact</p>\n                    <p className={`text-xl font-bold ${\n                      selectedStatus === 'win' ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {selectedStatus === 'win' ? '+' : '-'}\n                      {((trade.calculatedResults?.potentialProfit || trade.calculatedResults?.potentialLoss || 0) / (currentAccount?.balance || 10000) * 100).toFixed(2)}%\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'execution' && (\n            <div className=\"space-y-8\">\n              {/* Execution Method Selection */}\n              <div className=\"bg-gradient-to-br from-slate-50 to-gray-100 rounded-2xl p-6 border border-gray-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                  How was the trade executed?\n                </h3>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Price-based execution */}\n                  <div\n                    onClick={() => setFormData(prev => ({ ...prev, exitType: 'price' }))}\n                    className={`p-6 rounded-2xl border-2 cursor-pointer transition-all duration-300 ${\n                      formData.exitType === 'price'\n                        ? 'border-purple-500 bg-gradient-to-br from-purple-50 to-indigo-50 shadow-lg'\n                        : 'border-gray-200 bg-white hover:border-purple-300 hover:shadow-md'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\n                        formData.exitType === 'price' ? 'bg-purple-500' : 'bg-gray-300'\n                      }`}>\n                        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\n                        </svg>\n                      </div>\n                      <div>\n                        <h4 className=\"text-lg font-bold text-gray-900\">Price-based Exit</h4>\n                        <p className=\"text-sm text-gray-600\">Specify exact exit price</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">Use this when you know the exact price at which the trade was closed.</p>\n                  </div>\n\n                  {/* Manual P&L entry */}\n                  <div\n                    onClick={() => setFormData(prev => ({ ...prev, exitType: 'other' }))}\n                    className={`p-6 rounded-2xl border-2 cursor-pointer transition-all duration-300 ${\n                      formData.exitType === 'other'\n                        ? 'border-orange-500 bg-gradient-to-br from-orange-50 to-yellow-50 shadow-lg'\n                        : 'border-gray-200 bg-white hover:border-orange-300 hover:shadow-md'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\n                        formData.exitType === 'other' ? 'bg-orange-500' : 'bg-gray-300'\n                      }`}>\n                        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div>\n                        <h4 className=\"text-lg font-bold text-gray-900\">Manual P&L Entry</h4>\n                        <p className=\"text-sm text-gray-600\">Enter profit/loss directly</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">Use this for complex exits, partial closes, or when you only know the final P&L.</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Execution Details Form */}\n              <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  Execution Details\n                </h3>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Actual Entry Price */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Actual Entry Price\n                      <span className=\"text-gray-500 ml-1\">(Optional)</span>\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"any\"\n                      value={formData.actualEntry}\n                      onChange={(e) => {\n                        const newFormData = { ...formData, actualEntry: e.target.value };\n                        setFormData(newFormData);\n                        setCalculatedResults(calculateMetrics(newFormData));\n                      }}\n                      placeholder={`Planned: ${trade.entryPrice || 'N/A'}`}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">Leave empty to use planned entry price</p>\n                  </div>\n\n                  {formData.exitType === 'price' ? (\n                    /* Exit Price Input */\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Actual Exit Price *\n                        {lastAutoFilledStatus && (\n                          <span className=\"text-blue-600 text-xs ml-2\">\n                            (Auto-filled from {lastAutoFilledStatus === 'win' ? 'Take Profit' : 'Stop Loss'})\n                          </span>\n                        )}\n                      </label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={formData.actualExit}\n                        onChange={(e) => {\n                          const newFormData = { ...formData, actualExit: e.target.value };\n                          setFormData(newFormData);\n                          setCalculatedResults(calculateMetrics(newFormData));\n                          setLastAutoFilledStatus(null); // Clear auto-fill indicator when manually changed\n                        }}\n                        placeholder={selectedStatus === 'win' ? `Target: ${trade.takeProfit || 'N/A'}` : `Stop: ${trade.stopLoss || 'N/A'}`}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                        required\n                      />\n                    </div>\n                  ) : (\n                    /* Manual P&L Input */\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Actual Profit/Loss *\n                      </label>\n                      <input\n                        type=\"number\"\n                        step=\"any\"\n                        value={formData.manualPL}\n                        onChange={(e) => {\n                          const newFormData = { ...formData, manualPL: e.target.value };\n                          setFormData(newFormData);\n                          setCalculatedResults(calculateMetrics(newFormData));\n                        }}\n                        placeholder=\"Enter final P&L amount\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                        required\n                      />\n                      <p className=\"text-xs text-gray-500 mt-1\">Positive for profit, negative for loss</p>\n                    </div>\n                  )}\n\n                  {/* Exit Reason */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Reason</label>\n                    <select\n                      value={formData.exitReason}\n                      onChange={(e) => setFormData(prev => ({ ...prev, exitReason: e.target.value }))}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                    >\n                      <option value=\"\">Select reason...</option>\n                      <option value=\"take-profit-hit\">Take Profit Hit</option>\n                      <option value=\"stop-loss-hit\">Stop Loss Hit</option>\n                      <option value=\"manual-close-profit\">Manual Close (Profit)</option>\n                      <option value=\"manual-close-loss\">Manual Close (Loss)</option>\n                      <option value=\"break-even\">Break Even Close</option>\n                      <option value=\"partial-close\">Partial Close</option>\n                      <option value=\"news-event\">News Event</option>\n                      <option value=\"time-based\">Time-Based Exit</option>\n                      <option value=\"technical-signal\">Technical Signal</option>\n                      <option value=\"risk-management\">Risk Management</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                  </div>\n\n                  {/* Exit Description */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Description</label>\n                    <textarea\n                      value={formData.exitDescription}\n                      onChange={(e) => setFormData(prev => ({ ...prev, exitDescription: e.target.value }))}\n                      placeholder=\"Describe what happened during the exit...\"\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    />\n                  </div>\n                </div>\n\n                {/* Live Calculation Results */}\n                <div className=\"mt-8 p-6 bg-white rounded-xl border border-blue-200\">\n                  <h4 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                    <svg className=\"w-5 h-5 mr-2 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                    </svg>\n                    Live Calculation Results\n                  </h4>\n\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"text-center\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Actual P&L</p>\n                      <p className={`text-xl font-bold ${\n                        calculatedResults.actualPL > 0 ? 'text-green-600' :\n                        calculatedResults.actualPL < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {formatCurrency(calculatedResults.actualPL)}\n                      </p>\n                    </div>\n\n                    <div className=\"text-center\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Pips</p>\n                      <p className={`text-xl font-bold ${\n                        calculatedResults.actualPL > 0 ? 'text-green-600' :\n                        calculatedResults.actualPL < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {calculatedResults.actualPL > 0 ? '+' : ''}\n                        {calculatedResults.pips}\n                      </p>\n                    </div>\n\n                    <div className=\"text-center\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Risk:Reward</p>\n                      <p className=\"text-xl font-bold text-blue-600\">\n                        1:{calculatedResults.riskRewardRatio}\n                      </p>\n                    </div>\n\n                    <div className=\"text-center\">\n                      <p className=\"text-xs text-gray-600 mb-1\">Account Impact</p>\n                      <p className={`text-xl font-bold ${\n                        calculatedResults.accountImpact > 0 ? 'text-green-600' :\n                        calculatedResults.accountImpact < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {calculatedResults.accountImpact > 0 ? '+' : ''}\n                        {calculatedResults.accountImpact}%\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Closing Screenshot Upload */}\n              <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  Closing Screenshot\n                  <span className=\"text-sm font-normal text-gray-600 ml-2\">(Optional)</span>\n                </h3>\n\n                {!formData.closingImage ? (\n                  <div className=\"border-2 border-dashed border-green-300 rounded-xl p-8 text-center\">\n                    <svg className=\"w-12 h-12 mx-auto mb-4 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                    </svg>\n                    <p className=\"text-gray-600 mb-4\">Upload a screenshot of your trade closure</p>\n                    <label className=\"inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-xl cursor-pointer hover:bg-green-700 transition-colors duration-200\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                      </svg>\n                      Choose Image\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleClosingImageUpload}\n                        className=\"hidden\"\n                      />\n                    </label>\n                    <p className=\"text-xs text-gray-500 mt-2\">PNG, JPG up to 5MB</p>\n                  </div>\n                ) : (\n                  <div className=\"relative\">\n                    <img\n                      src={formData.closingImage}\n                      alt=\"Closing screenshot\"\n                      className=\"w-full max-w-md mx-auto rounded-xl border border-green-200\"\n                    />\n                    <button\n                      onClick={removeClosingImage}\n                      className=\"absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors duration-200\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <div className=\"space-y-8\">\n              {/* Post-Trade Analysis */}\n              <div className=\"bg-gradient-to-br from-slate-50 to-gray-100 rounded-2xl p-6 border border-gray-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  Post-Trade Analysis & Notes\n                </h3>\n\n                <div className=\"space-y-6\">\n                  {/* Trade Notes */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Trade Notes & Observations\n                    </label>\n                    <textarea\n                      value={formData.notes}\n                      onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                      placeholder=\"What happened during this trade? Market conditions, emotions, key observations...\"\n                      rows={6}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    />\n                  </div>\n\n                  {/* What Went Well */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      What Went Well?\n                      <span className=\"text-green-600 ml-1\">✓</span>\n                    </label>\n                    <textarea\n                      value={formData.whatWentWell || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, whatWentWell: e.target.value }))}\n                      placeholder=\"What aspects of this trade were executed well? Good decisions, proper risk management, etc.\"\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    />\n                  </div>\n\n                  {/* What Could Be Improved */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      What Could Be Improved?\n                      <span className=\"text-orange-600 ml-1\">⚠</span>\n                    </label>\n                    <textarea\n                      value={formData.improvements || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, improvements: e.target.value }))}\n                      placeholder=\"What could have been done better? Entry timing, exit strategy, risk management, etc.\"\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    />\n                  </div>\n\n                  {/* Key Lessons */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Key Lessons Learned\n                      <span className=\"text-blue-600 ml-1\">💡</span>\n                    </label>\n                    <textarea\n                      value={formData.lessons || ''}\n                      onChange={(e) => setFormData(prev => ({ ...prev, lessons: e.target.value }))}\n                      placeholder=\"What are the key takeaways from this trade? How will this influence future trades?\"\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Performance Summary */}\n              <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-200\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  Final Performance Summary\n                </h3>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Planned vs Actual */}\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\n                    <h4 className=\"font-semibold text-gray-900 mb-4\">Planned vs Actual</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Planned P&L:</span>\n                        <span className=\"text-sm font-medium text-green-600\">\n                          {formatCurrency(trade.calculatedResults?.potentialProfit || 0)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Actual P&L:</span>\n                        <span className={`text-sm font-medium ${\n                          calculatedResults.actualPL > 0 ? 'text-green-600' :\n                          calculatedResults.actualPL < 0 ? 'text-red-600' : 'text-gray-600'\n                        }`}>\n                          {formatCurrency(calculatedResults.actualPL)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span className=\"text-sm text-gray-600\">Difference:</span>\n                        <span className={`text-sm font-bold ${\n                          (calculatedResults.actualPL - (trade.calculatedResults?.potentialProfit || 0)) > 0 ? 'text-green-600' :\n                          (calculatedResults.actualPL - (trade.calculatedResults?.potentialProfit || 0)) < 0 ? 'text-red-600' : 'text-gray-600'\n                        }`}>\n                          {formatCurrency(calculatedResults.actualPL - (trade.calculatedResults?.potentialProfit || 0))}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Account Impact */}\n                  <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\n                    <h4 className=\"font-semibold text-gray-900 mb-4\">Account Impact</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Previous Balance:</span>\n                        <span className=\"text-sm font-medium\">\n                          {formatCurrency(currentAccount?.balance || 0)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">P&L Impact:</span>\n                        <span className={`text-sm font-medium ${\n                          calculatedResults.actualPL > 0 ? 'text-green-600' :\n                          calculatedResults.actualPL < 0 ? 'text-red-600' : 'text-gray-600'\n                        }`}>\n                          {calculatedResults.actualPL > 0 ? '+' : ''}\n                          {formatCurrency(calculatedResults.actualPL)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span className=\"text-sm text-gray-600\">New Balance:</span>\n                        <span className=\"text-sm font-bold text-blue-600\">\n                          {formatCurrency((currentAccount?.balance || 0) + calculatedResults.actualPL)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer with Submit Button */}\n        <div className=\"px-8 py-6 border-t border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>Last updated: {new Date(trade.updatedAt || trade.createdAt).toLocaleDateString()}</span>\n              </div>\n            </div>\n\n            <div className=\"flex space-x-4\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-3 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200 font-medium\"\n                disabled={loading}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSubmit}\n                disabled={loading || !selectedStatus}\n                className=\"px-8 py-3 bg-gradient-to-r from-green-600 to-emerald-600 text-white rounded-xl hover:from-green-700 hover:to-emerald-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-medium shadow-lg hover:shadow-xl flex items-center space-x-2\"\n              >\n                {loading ? (\n                  <>\n                    <svg className=\"animate-spin w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    <span>Updating...</span>\n                  </>\n                ) : (\n                  <>\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span>Update AM Trade Status</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}