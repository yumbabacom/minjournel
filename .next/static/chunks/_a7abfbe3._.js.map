{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/components/Sidebar.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function Sidebar({\n  user,\n  currentAccountId,\n  accounts = [],\n  onAccountSwitch,\n  onAddAccount,\n  onEditAccount,\n  onDeleteAccount,\n  onLogout,\n  onUpdateUser\n}) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const [showAccountDropdown, setShowAccountDropdown] = useState(false);\n  const [editingAccountId, setEditingAccountId] = useState(null);\n  const [editingBalance, setEditingBalance] = useState('');\n  const [mounted, setMounted] = useState(false);\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [isAMTradeMode, setIsAMTradeMode] = useState(false);\n  const [userSettings, setUserSettings] = useState({\n    fullName: user?.fullName || user?.name || '',\n    email: user?.email || '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n    avatar: user?.avatar || null,\n    notifications: {\n      email: true,\n      push: true,\n      trades: true,\n      reports: false\n    },\n    preferences: {\n      theme: 'light',\n      currency: 'USD',\n      timezone: 'UTC',\n      language: 'en'\n    }\n  });\n\n  // Prevent hydration mismatch by only rendering client-specific content after mount\n  useEffect(() => {\n    setMounted(true);\n    // Only enable AM Trade mode if currently on an AM Trade page, not from localStorage\n    const isOnAMTradePage = pathname?.startsWith('/am-trade');\n\n    if (isOnAMTradePage) {\n      setIsAMTradeMode(true);\n      localStorage.setItem('isAMTradeMode', 'true');\n    } else {\n      // If not on AM Trade page, ensure AM Trade mode is disabled\n      setIsAMTradeMode(false);\n      localStorage.setItem('isAMTradeMode', 'false');\n    }\n  }, [pathname]);\n\n  // Update userSettings when user prop changes\n  useEffect(() => {\n    if (user) {\n      setUserSettings(prev => ({\n        ...prev,\n        fullName: user.fullName || user.name || '',\n        email: user.email || '',\n        avatar: user.avatar || null\n      }));\n    }\n  }, [user]);\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.dropdown-container')) {\n        setShowUserDropdown(false);\n        setShowAccountDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Get current active account\n  const currentAccount = accounts.find(acc =>\n    (acc.id === currentAccountId) || (acc._id === currentAccountId)\n  ) || accounts[0] || {\n    id: null,\n    name: 'No Account',\n    balance: 0,\n    tag: 'personal',\n    color: 'bg-gray-600',\n    isActive: false\n  };\n\n  // Ensure current account has color property\n  if (currentAccount && !currentAccount.color) {\n    currentAccount.color = getTagColor(currentAccount.tag);\n  }\n\n  const getTagColor = (tag) => {\n    const colors = {\n      'personal': 'bg-blue-600',\n      'funded': 'bg-green-600', \n      'demo': 'bg-purple-600',\n      'forex': 'bg-orange-600',\n      'crypto': 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      'personal': 'Personal',\n      'funded': 'Funded',\n      'demo': 'Demo', \n      'forex': 'Forex',\n      'crypto': 'Crypto'\n    };\n    return names[tag] || tag;\n  };\n\n  const handleSwitchAccount = (accountId) => {\n    if (!accountId) return;\n    onAccountSwitch?.(accountId);\n    setShowAccountDropdown(false);\n  };\n\n  const handleEditBalance = (accountId) => {\n    const account = accounts.find(acc => (acc.id === accountId) || (acc._id === accountId));\n    setEditingAccountId(accountId);\n    setEditingBalance(account?.balance?.toString() || '');\n  };\n\n  const handleSaveBalance = (accountId) => {\n    onEditAccount?.(accountId, { balance: parseFloat(editingBalance) || 0 });\n    setEditingAccountId(null);\n    setEditingBalance('');\n  };\n\n  const handleAMTradeToggle = () => {\n    const newMode = !isAMTradeMode;\n    setIsAMTradeMode(newMode);\n    localStorage.setItem('isAMTradeMode', newMode.toString());\n\n    // Navigate to appropriate page\n    if (newMode) {\n      router.push('/am-trade');\n    } else {\n      router.push('/dashboard');\n    }\n  };\n\n  const handleAvatarUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setUserSettings(prev => ({\n          ...prev,\n          avatar: e.target.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleOpenSettings = () => {\n    // Reset form with current user data when opening\n    setUserSettings(prev => ({\n      ...prev,\n      fullName: user?.fullName || user?.name || '',\n      email: user?.email || '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      avatar: user?.avatar || null\n    }));\n    setShowSettingsModal(true);\n    setShowUserDropdown(false);\n  };\n\n  const handleSaveSettings = async () => {\n    try {\n      // Get token from cookies or localStorage with better error handling\n      let token = null;\n\n      // Try to get from cookies first\n      try {\n        const cookies = document.cookie.split('; ');\n        const authCookie = cookies.find(row => row.startsWith('auth-token='));\n        if (authCookie) {\n          token = authCookie.split('=')[1];\n        }\n      } catch (cookieError) {\n        console.log('Error reading cookies:', cookieError);\n      }\n\n      // Fallback to localStorage\n      if (!token) {\n        try {\n          token = localStorage.getItem('auth-token');\n        } catch (storageError) {\n          console.log('Error reading localStorage:', storageError);\n        }\n      }\n\n      if (!token) {\n        alert('Authentication token not found. Please log in again.');\n        return;\n      }\n\n      console.log('Using token for profile update:', token ? 'Token found' : 'No token');\n\n      // Prepare data to send\n      const updateData = {\n        fullName: userSettings.fullName,\n        email: userSettings.email,\n        currentPassword: userSettings.currentPassword,\n        newPassword: userSettings.newPassword,\n        confirmPassword: userSettings.confirmPassword\n      };\n\n      // Make API call\n      const response = await fetch('/api/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updateData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert('Profile updated successfully!');\n        setShowSettingsModal(false);\n\n        // Update user data in parent component if callback provided\n        if (typeof onUpdateUser === 'function') {\n          onUpdateUser(data.user);\n        }\n\n        // Refresh page to update user data in UI\n        window.location.reload();\n      } else {\n        console.error('Profile update failed:', data);\n        alert(data.error || 'Failed to update profile');\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      alert('An error occurred while saving settings. Please try again.');\n    }\n  };\n\n  const getInitials = (name) => {\n    if (!name) return 'U';\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  // AM Trade menu items (removed Balance - it's shown in sidebar account section)\n  const amTradeMenuItems = [\n    {\n      id: 'overview',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-am-trade',\n      name: 'Add AM Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    }\n  ];\n\n  // Regular menu items\n  const menuItems = [\n    {\n      id: 'dashboard',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-trade',\n      name: 'Add Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    },\n    {\n      id: 'analytics',\n      name: 'Analytics',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'strategy',\n      name: 'Strategy',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n        </svg>\n      )\n    },\n    {\n      id: 'sessions',\n      name: 'Sessions',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'risk-analysis',\n      name: 'Risk',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'forex-news',\n      name: 'Forex News',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'calendar',\n      name: 'Calendar',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n      )\n    }\n  ];\n\n  const handleNavigation = (itemId) => {\n    if (isAMTradeMode) {\n      // AM Trade mode navigation\n      if (itemId === 'overview') {\n        router.push('/am-trade/overview');\n      } else if (itemId === 'add-am-trade') {\n        router.push('/am-trade/add-am-trade');\n      } else if (itemId === 'journal') {\n        router.push('/am-trade/journal');\n      } else {\n        router.push('/am-trade');\n      }\n    } else {\n      // Regular mode navigation\n      if (itemId === 'add-trade') {\n        router.push('/add-trade');\n      } else if (itemId === 'dashboard') {\n        router.push('/dashboard');\n      } else if (itemId === 'journal') {\n        router.push('/journal');\n      } else {\n        router.push(`/dashboard?section=${itemId}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-64 bg-gradient-to-b from-slate-50 via-white to-gray-50/50 border-r border-gray-200/60 flex flex-col fixed left-0 top-0 h-screen shadow-xl backdrop-blur-sm\">\n      {/* Compact User Profile */}\n      <div className=\"p-4 border-b border-gray-200/60\">\n        <div className=\"relative dropdown-container\">\n          <button\n            onClick={() => setShowUserDropdown(!showUserDropdown)}\n            className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-white/80 transition-all duration-200 group shadow-sm hover:shadow-md border border-transparent hover:border-gray-200/60\"\n          >\n            <div className=\"relative\">\n              {userSettings.avatar ? (\n                <img\n                  src={userSettings.avatar}\n                  alt=\"Profile\"\n                  className=\"w-10 h-10 rounded-xl object-cover border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-sm\"\n                />\n              ) : (\n                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 via-blue-600 to-indigo-600 rounded-xl flex items-center justify-center border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-lg\">\n                  <span className=\"text-white font-bold text-sm tracking-wide\">\n                    {getInitials(user?.fullName || user?.name)}\n                  </span>\n                </div>\n              )}\n              <div className=\"absolute -bottom-0.5 -right-0.5 w-3.5 h-3.5 bg-gradient-to-br from-green-400 to-green-500 border-2 border-white rounded-full shadow-sm\">\n                <div className=\"w-full h-full bg-green-500 rounded-full animate-pulse\"></div>\n              </div>\n            </div>\n            <div className=\"flex-1 text-left min-w-0\">\n              <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                {user?.fullName || user?.name || 'User'}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <div className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gradient-to-r from-green-100 to-emerald-100 text-green-700 border border-green-200/60\">\n                  <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-1.5 animate-pulse\"></div>\n                  Online\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <svg\n                className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showUserDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </button>\n\n          {/* Minimal User Dropdown Menu */}\n          {showUserDropdown && (\n            <div className=\"absolute top-full left-0 mt-3 w-full bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 overflow-hidden\">\n              <div className=\"p-3\">\n                {/* Profile Header */}\n                <div className=\"px-4 py-3 bg-gradient-to-r from-gray-50 to-slate-50 rounded-xl border border-gray-100/60 mb-3\">\n                  <p className=\"font-bold text-gray-900 text-sm tracking-tight\">{user?.fullName || user?.name}</p>\n                  <p className=\"text-xs text-gray-500 mt-0.5\">{user?.email}</p>\n                </div>\n\n                {/* Menu Items */}\n                <div className=\"space-y-1\">\n                  <button\n                    onClick={handleOpenSettings}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-gray-700 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-blue-100 to-blue-200 rounded-lg flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      </svg>\n                    </div>\n                    <span>Account Settings</span>\n                  </button>\n\n                  <div className=\"border-t border-gray-200/60 my-3\"></div>\n\n                  <button\n                    onClick={onLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-red-600 hover:bg-gradient-to-r hover:from-red-50 hover:to-rose-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-red-100 to-red-200 rounded-lg flex items-center justify-center group-hover:from-red-200 group-hover:to-red-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                      </svg>\n                    </div>\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact Account Balance Card */}\n        <div className=\"mt-4 relative dropdown-container\">\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              setShowAccountDropdown(!showAccountDropdown);\n            }}\n            className=\"w-full p-4 bg-gradient-to-br from-white via-gray-50/50 to-slate-50/30 border border-gray-200/60 rounded-xl hover:border-gray-300/60 hover:shadow-md transition-all duration-200 group backdrop-blur-sm\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-left flex-1\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className={`w-3 h-3 rounded-full ${currentAccount.color} shadow-sm`}></div>\n                    <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Balance</p>\n                  </div>\n                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium border ${\n                    currentAccount.tag === 'funded' ? 'bg-green-100 text-green-700 border-green-200' :\n                    currentAccount.tag === 'demo' ? 'bg-purple-100 text-purple-700 border-purple-200' :\n                    currentAccount.tag === 'forex' ? 'bg-orange-100 text-orange-700 border-orange-200' :\n                    currentAccount.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border-indigo-200' :\n                    'bg-blue-100 text-blue-700 border-blue-200'\n                  }`}>\n                    {getTagDisplayName(currentAccount.tag)}\n                  </span>\n                </div>\n                <p className=\"font-bold text-gray-900 text-lg tracking-tight mb-1\">${Number(currentAccount.balance || 0).toLocaleString()}</p>\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-xs text-gray-600 truncate font-medium\">{currentAccount.name}</p>\n                  <svg\n                    className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showAccountDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </button>\n\n          {/* Minimal Account Dropdown */}\n          {showAccountDropdown && (\n            <div\n              className=\"absolute top-full left-0 mt-3 w-80 bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 max-h-80 overflow-y-auto\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"p-4\">\n                {/* Add New Account Button */}\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (typeof onAddAccount === 'function') {\n                      onAddAccount();\n                      setShowAccountDropdown(false);\n                    }\n                  }}\n                  className=\"w-full flex items-center space-x-4 p-4 text-blue-600 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-2xl transition-all duration-300 border border-blue-200/60 bg-gradient-to-r from-blue-25 to-indigo-25 hover:border-blue-300/60 group shadow-sm hover:shadow-md\"\n                >\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-300 shadow-sm\">\n                    <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-left\">\n                    <span className=\"font-bold text-blue-700 text-sm\">Add New Account</span>\n                    <p className=\"text-xs text-blue-500 mt-0.5\">Create a new trading account</p>\n                  </div>\n                </button>\n\n                <div className=\"border-t border-gray-200 my-3\"></div>\n\n                {/* Existing Accounts */}\n                <div className=\"space-y-2\">\n                  {accounts.map((account, index) => {\n                    const accountId = account.id || account._id;\n                    const isCurrentAccount = String(accountId) === String(currentAccountId);\n\n                    if (!account.color) {\n                      account.color = getTagColor(account.tag);\n                    }\n\n                    return (\n                      <div\n                        key={`${accountId}-${currentAccountId}`}\n                        className={`flex items-center justify-between p-3 rounded-lg transition-all duration-200 border ${\n                          isCurrentAccount\n                            ? 'bg-blue-50 border-blue-200 shadow-sm'\n                            : 'hover:bg-gray-50 border-gray-100 hover:border-gray-200 hover:shadow-sm'\n                        }`}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          handleSwitchAccount(accountId);\n                        }}\n                      >\n                        <div className=\"flex items-center space-x-3 flex-1 cursor-pointer\">\n                          <div className=\"relative\">\n                            <div className={`w-3 h-3 rounded-full ${account.color} shadow-sm`}></div>\n                            {isCurrentAccount && (\n                              <div className=\"absolute -top-0.5 -right-0.5 w-1.5 h-1.5 bg-green-500 rounded-full border border-white\"></div>\n                            )}\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                              {account.name}\n                            </p>\n                            <div className=\"flex items-center space-x-2 mt-1\">\n                              {editingAccountId === accountId ? (\n                                <div className=\"flex items-center space-x-2\">\n                                  <input\n                                    type=\"number\"\n                                    value={editingBalance}\n                                    onChange={(e) => {\n                                      e.stopPropagation();\n                                      setEditingBalance(e.target.value);\n                                    }}\n                                    onClick={(e) => e.stopPropagation()}\n                                    className=\"w-24 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                    placeholder=\"Enter balance\"\n                                  />\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      handleSaveBalance(accountId);\n                                    }}\n                                    className=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                  </button>\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      setEditingAccountId(null);\n                                      setEditingBalance('');\n                                    }}\n                                    className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                  </button>\n                                </div>\n                              ) : (\n                                <>\n                                  <span className=\"text-sm font-bold text-gray-900\">${Number(account.balance || 0).toLocaleString()}</span>\n                                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium ${\n                                    account.tag === 'funded' ? 'bg-green-100 text-green-700 border border-green-200' :\n                                    account.tag === 'demo' ? 'bg-purple-100 text-purple-700 border border-purple-200' :\n                                    account.tag === 'forex' ? 'bg-orange-100 text-orange-700 border border-orange-200' :\n                                    account.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border border-indigo-200' :\n                                    'bg-blue-100 text-blue-700 border border-blue-200'\n                                  }`}>\n                                    {getTagDisplayName(account.tag)}\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Action Buttons */}\n                        <div className=\"flex items-center space-x-1 ml-2\">\n                          <button\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              handleEditBalance(accountId);\n                            }}\n                            className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-100 rounded transition-colors\"\n                            title=\"Edit Balance\"\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                          {accounts.length > 1 && (\n                            <button\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                if (typeof onDeleteAccount === 'function') {\n                                  onDeleteAccount(accountId);\n                                }\n                              }}\n                              className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-100 rounded transition-colors\"\n                              title=\"Delete Account\"\n                            >\n                              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Footer Info */}\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                  <p className=\"text-xs text-gray-500 text-center\">\n                    {accounts.length} {accounts.length === 1 ? 'Account' : 'Accounts'} • Click to switch\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact AM Trade Toggle */}\n        <div className=\"mt-4 p-3 bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 rounded-xl border border-orange-200/60 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"flex items-center space-x-2 mb-0.5\">\n                <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-orange-400 to-amber-500 rounded-full\"></div>\n                <p className=\"text-sm font-semibold text-gray-900\">AM Trade Mode</p>\n              </div>\n              <p className=\"text-xs text-gray-600\">Morning trading interface</p>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={isAMTradeMode}\n                onChange={handleAMTradeToggle}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-3 peer-focus:ring-orange-300/50 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all after:shadow-sm peer-checked:bg-gradient-to-r peer-checked:from-orange-500 peer-checked:to-amber-500\"></div>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Compact Navigation */}\n      <nav className=\"flex-1 p-4 overflow-y-auto\">\n        <div className=\"space-y-1\">\n          {(isAMTradeMode ? amTradeMenuItems : menuItems).map((item) => {\n            // Calculate active state only after component is mounted\n            const isActive = mounted && (\n              isAMTradeMode ? (\n                pathname === `/am-trade/${item.id}` ||\n                (pathname === '/am-trade' && item.id === 'overview') ||\n                (pathname === '/am-trade/add-am-trade' && item.id === 'add-am-trade') ||\n                (pathname === '/am-trade/journal' && item.id === 'journal')\n              ) : (\n                pathname === `/${item.id}` ||\n                (pathname === '/add-trade' && item.id === 'add-trade') ||\n                (pathname === '/journal' && item.id === 'journal')\n              )\n            );\n\n            return (\n              <button\n                key={item.id}\n                onClick={() => handleNavigation(item.id)}\n                className={`w-full flex items-center space-x-3 px-3 py-2.5 rounded-xl text-sm font-medium transition-all duration-200 group ${\n                  isActive\n                    ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-md'\n                    : item.highlight\n                    ? 'bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 hover:from-green-100 hover:to-emerald-100 border border-green-200/60'\n                    : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }`}\n              >\n                <div className={`w-7 h-7 rounded-lg flex items-center justify-center transition-all duration-200 ${\n                  isActive\n                    ? 'bg-white/20 text-white'\n                    : item.highlight\n                    ? 'bg-green-100 text-green-600'\n                    : 'bg-gray-100 text-gray-600 group-hover:bg-gray-200'\n                }`}>\n                  {item.icon}\n                </div>\n                <span className=\"flex-1 text-left\">{item.name}</span>\n                {isActive && (\n                  <div className=\"w-1.5 h-1.5 bg-white rounded-full\"></div>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </nav>\n\n      {/* Compact Footer */}\n      <div className=\"p-4 border-t border-gray-200/60\">\n        <button\n          onClick={onLogout}\n          className=\"w-full flex items-center space-x-3 px-3 py-2.5 text-gray-700 hover:bg-red-50 hover:text-red-600 rounded-xl text-sm font-medium transition-all duration-200 group\"\n        >\n          <div className=\"w-7 h-7 bg-gray-100 group-hover:bg-red-100 rounded-lg flex items-center justify-center transition-all duration-200\">\n            <svg className=\"w-4 h-4 text-gray-600 group-hover:text-red-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n            </svg>\n          </div>\n          <span className=\"flex-1 text-left\">Sign Out</span>\n        </button>\n      </div>\n\n      {/* Settings Modal - Portal to body */}\n      {showSettingsModal && typeof document !== 'undefined' && createPortal(\n        <div\n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-[9999] p-4\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowSettingsModal(false);\n            }\n          }}\n        >\n          <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-hidden relative z-[10000]\">\n            {/* Modal Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-blue-600 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900\">Account Settings</h2>\n                  <p className=\"text-sm text-gray-600\">Update your account information</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSettingsModal(false)}\n                className=\"p-2 hover:bg-gray-100 rounded-xl transition-colors\"\n              >\n                <svg className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Modal Content */}\n            <div className=\"p-6\">\n              <div className=\"space-y-6\">\n                {/* Form Fields */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Username</label>\n                  <input\n                    type=\"text\"\n                    value={userSettings.fullName}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, fullName: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your username\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={userSettings.email}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.currentPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, currentPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter current password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.newPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, newPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter new password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.confirmPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Confirm new password\"\n                  />\n                </div>\n              </div>\n\n              {/* Modal Footer */}\n              <div className=\"flex items-center justify-end pt-6 mt-8 border-t border-gray-200 space-x-3\">\n                <button\n                  onClick={() => setShowSettingsModal(false)}\n                  className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleSaveSettings}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-medium shadow-lg\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1953, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/app/am-trade/overview/page.js"],"sourcesContent":["'use client';\nimport { useState, useEffect, useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Cookies from 'js-cookie';\nimport Sidebar from '../../../components/Sidebar';\nimport { Line, Bar, Doughnut, Scatter } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport default function AMTradeOverview() {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [showAddAccountModal, setShowAddAccountModal] = useState(false);\n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: '',\n    tag: 'personal'\n  });\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n\n  // Real AM Trade data\n  const [amTrades, setAmTrades] = useState([]);\n  const [filteredTrades, setFilteredTrades] = useState([]);\n\n  // Filter states\n  const [timeFilter, setTimeFilter] = useState('all'); // all, 7d, 30d, 90d\n  const [statusFilter, setStatusFilter] = useState('all'); // all, win, loss, pending\n  const [pairFilter, setPairFilter] = useState('all'); // all, specific pairs\n  const [strategyFilter, setStrategyFilter] = useState('all'); // all, specific strategies\n\n  // Fetch AM Trades data\n  const fetchAMTrades = async () => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token || !user?.id && !user?._id) return;\n\n      const userId = user?.id || user?._id;\n      const response = await fetch(`/api/am-trades?userId=${userId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.trades && Array.isArray(data.trades)) {\n          setAmTrades(data.trades);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching AM trades:', error);\n    }\n  };\n\n  // Filter trades based on current account and filters\n  useEffect(() => {\n    if (!currentAccountId || !amTrades.length) {\n      setFilteredTrades([]);\n      return;\n    }\n\n    let filtered = amTrades.filter(trade => {\n      const tradeAccountId = String(trade.accountId || trade.account);\n      return tradeAccountId === String(currentAccountId);\n    });\n\n    // Apply time filter\n    if (timeFilter !== 'all') {\n      const now = new Date();\n      const days = timeFilter === '7d' ? 7 : timeFilter === '30d' ? 30 : 90;\n      const cutoffDate = new Date(now.getTime() - (days * 24 * 60 * 60 * 1000));\n\n      filtered = filtered.filter(trade => {\n        const tradeDate = new Date(trade.dateTime || trade.createdAt);\n        return tradeDate >= cutoffDate;\n      });\n    }\n\n    // Apply status filter\n    if (statusFilter !== 'all') {\n      filtered = filtered.filter(trade => {\n        if (statusFilter === 'pending') return !trade.status || trade.status === 'pending';\n        return trade.status === statusFilter;\n      });\n    }\n\n    // Apply pair filter\n    if (pairFilter !== 'all') {\n      filtered = filtered.filter(trade => trade.tradingPair === pairFilter);\n    }\n\n    // Apply strategy filter\n    if (strategyFilter !== 'all') {\n      filtered = filtered.filter(trade => trade.strategy === strategyFilter);\n    }\n\n    setFilteredTrades(filtered);\n  }, [amTrades, currentAccountId, timeFilter, statusFilter, pairFilter, strategyFilter]);\n\n  useEffect(() => {\n    const initializeUser = async () => {\n      try {\n        // First check if user is already in localStorage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n          setLoading(false);\n          return;\n        }\n\n        // If no user in localStorage, check for auth token and fetch user\n        const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n        if (!token) {\n          // No authentication, redirect to login\n          router.push('/login');\n          return;\n        }\n\n        // Fetch user with token using the same endpoint as dashboard\n        const response = await fetch('/api/user', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n          // Store user data in localStorage for future use\n          localStorage.setItem('user', JSON.stringify(userData));\n\n          // Fetch accounts for this user\n          await fetchAccounts(userData);\n        } else {\n          // Invalid token, redirect to login\n          router.push('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        router.push('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeUser();\n  }, [router]);\n\n  // Fetch accounts and trades when user is set\n  useEffect(() => {\n    if (user?.id || user?._id) {\n      fetchAccounts(user);\n      fetchAMTrades();\n    }\n  }, [user]);\n\n  // Fetch trades when account changes\n  useEffect(() => {\n    if (currentAccountId && user) {\n      fetchAMTrades();\n    }\n  }, [currentAccountId]);\n\n  // Close mobile sidebar on window resize (when switching to desktop)\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 1024) { // lg breakpoint\n        setIsMobileSidebarOpen(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calculate analytics from real data\n  const analytics = useMemo(() => {\n    if (!filteredTrades.length) {\n      return {\n        totalTrades: 0,\n        winRate: 0,\n        totalProfit: 0,\n        avgWin: 0,\n        avgLoss: 0,\n        bestTrade: 0,\n        worstTrade: 0,\n        activePositions: 0,\n        profitFactor: 0,\n        sharpeRatio: 0,\n        maxDrawdown: 0,\n        winStreak: 0,\n        lossStreak: 0\n      };\n    }\n\n    const completedTrades = filteredTrades.filter(trade => trade.status && trade.status !== 'pending');\n    const winningTrades = completedTrades.filter(trade => trade.status === 'win');\n    const losingTrades = completedTrades.filter(trade => trade.status === 'loss');\n    const activeTrades = filteredTrades.filter(trade => !trade.status || trade.status === 'pending');\n\n    const totalProfit = completedTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0);\n    const totalWins = winningTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0);\n    const totalLosses = Math.abs(losingTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0));\n\n    const winRate = completedTrades.length > 0 ? (winningTrades.length / completedTrades.length) * 100 : 0;\n    const avgWin = winningTrades.length > 0 ? totalWins / winningTrades.length : 0;\n    const avgLoss = losingTrades.length > 0 ? totalLosses / losingTrades.length : 0;\n    const profitFactor = totalLosses > 0 ? totalWins / totalLosses : totalWins > 0 ? Infinity : 0;\n\n    const profits = completedTrades.map(trade => trade.actualProfit || 0);\n    const bestTrade = profits.length > 0 ? Math.max(...profits) : 0;\n    const worstTrade = profits.length > 0 ? Math.min(...profits) : 0;\n\n    // Calculate streaks\n    let currentWinStreak = 0;\n    let currentLossStreak = 0;\n    let maxWinStreak = 0;\n    let maxLossStreak = 0;\n\n    completedTrades.forEach(trade => {\n      if (trade.status === 'win') {\n        currentWinStreak++;\n        currentLossStreak = 0;\n        maxWinStreak = Math.max(maxWinStreak, currentWinStreak);\n      } else if (trade.status === 'loss') {\n        currentLossStreak++;\n        currentWinStreak = 0;\n        maxLossStreak = Math.max(maxLossStreak, currentLossStreak);\n      }\n    });\n\n    return {\n      totalTrades: filteredTrades.length,\n      winRate: parseFloat(winRate.toFixed(1)),\n      totalProfit: parseFloat(totalProfit.toFixed(2)),\n      avgWin: parseFloat(avgWin.toFixed(2)),\n      avgLoss: parseFloat(avgLoss.toFixed(2)),\n      bestTrade: parseFloat(bestTrade.toFixed(2)),\n      worstTrade: parseFloat(worstTrade.toFixed(2)),\n      activePositions: activeTrades.length,\n      profitFactor: parseFloat(profitFactor.toFixed(2)),\n      winStreak: maxWinStreak,\n      lossStreak: maxLossStreak\n    };\n  }, [filteredTrades]);\n\n  // Helper function to get week start date (Monday)\n  const getWeekStart = (date) => {\n    const d = new Date(date);\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    return new Date(d.setDate(diff));\n  };\n\n  // Helper function to get week number\n  const getWeekNumber = (date) => {\n    const d = new Date(date);\n    const yearStart = new Date(d.getFullYear(), 0, 1);\n    const weekStart = getWeekStart(d);\n    const weekNumber = Math.ceil(((weekStart - yearStart) / 86400000 + 1) / 7);\n    return weekNumber;\n  };\n\n  // Calculate weekly results for the last 4 weeks\n  const weeklyResults = useMemo(() => {\n    if (!filteredTrades.length) {\n      // Return empty weeks with 0 values when no data\n      const weeks = [];\n      for (let i = 0; i < 4; i++) {\n        const weekStart = new Date();\n        weekStart.setDate(weekStart.getDate() - (i * 7) - weekStart.getDay() + 1);\n        const weekNumber = getWeekNumber(weekStart);\n        weeks.unshift({\n          week: `Week ${weekNumber}`,\n          trades: 0,\n          winRate: 0,\n          sumRR: 0,\n          sumProfitPercent: 0\n        });\n      }\n      return weeks;\n    }\n\n    const now = new Date();\n    const weeks = [];\n\n    // Generate last 4 weeks\n    for (let i = 0; i < 4; i++) {\n      const weekStart = new Date(now);\n      weekStart.setDate(now.getDate() - (i * 7) - now.getDay() + 1); // Start of week (Monday)\n      weekStart.setHours(0, 0, 0, 0);\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekStart.getDate() + 6); // End of week (Sunday)\n      weekEnd.setHours(23, 59, 59, 999);\n\n      const weekNumber = getWeekNumber(weekStart);\n\n      // Filter trades for this week\n      const weekTrades = filteredTrades.filter(trade => {\n        const tradeDate = new Date(trade.dateTime || trade.createdAt);\n        return tradeDate >= weekStart && tradeDate <= weekEnd;\n      });\n\n      const completedWeekTrades = weekTrades.filter(trade => trade.status && trade.status !== 'pending');\n      const winningWeekTrades = completedWeekTrades.filter(trade => trade.status === 'win');\n\n      const weekWinRate = completedWeekTrades.length > 0 ? (winningWeekTrades.length / completedWeekTrades.length) * 100 : 0;\n      const weekProfit = completedWeekTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0);\n\n      // Calculate Risk/Reward from planned RR or calculated RR\n      const weekRR = completedWeekTrades.reduce((sum, trade) => {\n        // Try to get RR from multiple possible sources\n        const rr = trade.calculatedResults?.riskRewardRatio ||\n                  parseFloat(trade.plannedRR) ||\n                  trade.riskReward ||\n                  0;\n        return sum + rr;\n      }, 0);\n\n      // Calculate profit percentage based on account size\n      const accountSize = weekTrades.length > 0 ? (weekTrades[0].accountSize || 10000) : 10000;\n      const weekProfitPercent = accountSize > 0 ? (weekProfit / accountSize) * 100 : 0;\n\n      weeks.unshift({\n        week: `Week ${weekNumber}`,\n        trades: weekTrades.length,\n        winRate: parseFloat(weekWinRate.toFixed(1)),\n        sumRR: parseFloat(weekRR.toFixed(1)),\n        sumProfitPercent: parseFloat(weekProfitPercent.toFixed(2))\n      });\n    }\n\n    return weeks;\n  }, [filteredTrades]);\n\n  // Calculate daily results for the last 5 weekdays\n  const dailyResults = useMemo(() => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    const results = [];\n\n    days.forEach(dayName => {\n      // Use all AM trades (not just filtered) for daily analysis to get historical patterns\n      const allDayTrades = amTrades.filter(trade => {\n        // Filter by current account\n        const tradeAccountId = String(trade.accountId || trade.account);\n        if (tradeAccountId !== String(currentAccountId)) return false;\n\n        // Filter by weekday\n        const tradeDate = new Date(trade.dateTime || trade.createdAt);\n        const tradeDayName = tradeDate.toLocaleDateString('en-US', { weekday: 'long' });\n        return tradeDayName === dayName;\n      });\n\n      const completedDayTrades = allDayTrades.filter(trade => trade.status && trade.status !== 'pending');\n      const winningDayTrades = completedDayTrades.filter(trade => trade.status === 'win');\n\n      const dayWinRate = completedDayTrades.length > 0 ? (winningDayTrades.length / completedDayTrades.length) * 100 : 0;\n      const dayProfit = completedDayTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0);\n\n      // Calculate Risk/Reward from planned RR or calculated RR\n      const dayRR = allDayTrades.reduce((sum, trade) => {\n        // Try to get RR from multiple possible sources\n        const rr = trade.calculatedResults?.riskRewardRatio ||\n                  parseFloat(trade.plannedRR) ||\n                  trade.riskReward ||\n                  0;\n        return sum + rr;\n      }, 0);\n\n      // Calculate profit percentage based on account size\n      const accountSize = allDayTrades.length > 0 ? (allDayTrades[0].accountSize || 10000) : 10000;\n      const dayProfitPercent = accountSize > 0 ? (dayProfit / accountSize) * 100 : 0;\n\n      const dayResult = {\n        weekday: dayName,\n        trades: allDayTrades.length,\n        winRate: parseFloat(dayWinRate.toFixed(1)),\n        sumRR: parseFloat(dayRR.toFixed(1)),\n        sumProfitPercent: parseFloat(dayProfitPercent.toFixed(2))\n      };\n\n      results.push(dayResult);\n    });\n    return results;\n  }, [amTrades, currentAccountId]);\n\n  // Get unique values for filters\n  const uniquePairs = useMemo(() => {\n    const pairs = [...new Set(amTrades.map(trade => trade.tradingPair).filter(Boolean))];\n    return pairs.sort();\n  }, [amTrades]);\n\n  const uniqueStrategies = useMemo(() => {\n    const strategies = [...new Set(amTrades.map(trade => trade.strategy).filter(Boolean))];\n    return strategies.sort();\n  }, [amTrades]);\n\n  // Helper functions\n  const formatCurrency = (amount) => {\n    if (amount === null || amount === undefined || isNaN(amount)) return '$0.00';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Helper functions for account tags\n  const getTagColor = (tag) => {\n    const colors = {\n      personal: 'bg-blue-600',\n      business: 'bg-green-600',\n      demo: 'bg-purple-600',\n      forex: 'bg-orange-600',\n      crypto: 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      personal: 'Personal',\n      business: 'Business',\n      demo: 'Demo',\n      forex: 'Forex',\n      crypto: 'Crypto'\n    };\n    return names[tag] || 'Personal';\n  };\n\n  const fetchAccounts = async (userData) => {\n    try {\n      const userId = userData?.id || userData?._id;\n      if (!userId) {\n        console.error('User ID not found');\n        return;\n      }\n\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        console.error('Authentication token is missing');\n        return;\n      }\n\n      const response = await fetch(`/api/accounts?userId=${userId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.accounts && Array.isArray(data.accounts)) {\n          setAccounts(data.accounts);\n\n          // Set current account from localStorage or use first account\n          const savedAccountId = localStorage.getItem('currentAccountId');\n          if (savedAccountId && data.accounts.find(acc => String(acc.id || acc._id) === savedAccountId)) {\n            setCurrentAccountId(savedAccountId);\n          } else if (data.accounts.length > 0) {\n            const firstAccountId = data.accounts[0].id || data.accounts[0]._id;\n            setCurrentAccountId(firstAccountId);\n            localStorage.setItem('currentAccountId', String(firstAccountId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  const handleAccountSwitch = (accountId) => {\n    setCurrentAccountId(accountId);\n    localStorage.setItem('currentAccountId', String(accountId));\n  };\n\n  const handleAddAccount = async () => {\n    if (!newAccount.name || !newAccount.balance) return;\n\n    const userId = user?.id || user?._id;\n    if (!userId) {\n      alert('User not found. Please login again.');\n      return;\n    }\n\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        alert('Authentication token is missing. Please login again.');\n        return;\n      }\n\n      const response = await fetch('/api/accounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: userId,\n          ...newAccount\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const accountData = {\n          id: data.accountId || data._id || Date.now().toString(),\n          ...newAccount,\n          balance: parseFloat(newAccount.balance),\n          color: getTagColor(newAccount.tag),\n          isActive: accounts.length === 0 // Make first account active\n        };\n\n        setAccounts([...accounts, accountData]);\n\n        // If this is the first account, make it current\n        if (accounts.length === 0) {\n          setCurrentAccountId(accountData.id);\n          localStorage.setItem('currentAccountId', accountData.id);\n        }\n\n        setNewAccount({ name: '', balance: '', tag: 'personal' });\n        setShowAddAccountModal(false);\n\n        // Refresh accounts to ensure we have the latest data\n        await fetchAccounts(user);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to create account:', errorData);\n        alert('Failed to create account. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error adding account:', error);\n      alert('Error adding account. Please try again.');\n    }\n  };\n\n  const handleEditAccount = async (accountId, updates) => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      const response = await fetch(`/api/accounts/${accountId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updates)\n      });\n\n      if (response.ok) {\n        const updatedAccount = await response.json();\n        setAccounts(prev => prev.map(acc =>\n          (acc.id === accountId || acc._id === accountId) ? updatedAccount : acc\n        ));\n      }\n    } catch (error) {\n      console.error('Error updating account:', error);\n    }\n  };\n\n  const handleDeleteAccount = async (accountId) => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      const response = await fetch(`/api/accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        setAccounts(prev => prev.filter(acc => acc.id !== accountId && acc._id !== accountId));\n\n        // If deleted account was current, switch to first available\n        if (String(currentAccountId) === String(accountId)) {\n          const remainingAccounts = accounts.filter(acc => acc.id !== accountId && acc._id !== accountId);\n          if (remainingAccounts.length > 0) {\n            const newCurrentId = remainingAccounts[0].id || remainingAccounts[0]._id;\n            setCurrentAccountId(newCurrentId);\n            localStorage.setItem('currentAccountId', String(newCurrentId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting account:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear all authentication data (same as dashboard)\n    Cookies.remove('auth-token');\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAMTradeMode');\n    router.push('/login');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-blue-600 border-t-transparent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Mobile Sidebar Overlay */}\n      {isMobileSidebarOpen && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n          onClick={() => setIsMobileSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`fixed inset-y-0 left-0 z-50 w-64 transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 ${\n        isMobileSidebarOpen ? 'translate-x-0' : '-translate-x-full'\n      }`}>\n        <Sidebar\n          user={user}\n          currentAccountId={currentAccountId}\n          accounts={accounts}\n          onAccountSwitch={handleAccountSwitch}\n          onAddAccount={() => setShowAddAccountModal(true)}\n          onEditAccount={handleEditAccount}\n          onDeleteAccount={handleDeleteAccount}\n          onLogout={handleLogout}\n          onUpdateUser={(updatedUser) => setUser(updatedUser)}\n        />\n      </div>\n\n      {/* Main Content */}\n      <main className=\"flex-1 lg:ml-64 p-4 sm:p-6 lg:p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-6 sm:mb-8\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                {/* Mobile Menu Button */}\n                <button\n                  onClick={() => setIsMobileSidebarOpen(true)}\n                  className=\"lg:hidden p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                  </svg>\n                </button>\n\n                <div>\n                  <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900\">AM Trade Overview</h1>\n                  <p className=\"text-gray-600 mt-1 sm:mt-2 text-sm sm:text-base\">Your morning trading session dashboard</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-2 sm:space-x-4\">\n                <div className=\"bg-green-100 text-green-800 px-2 sm:px-3 py-1 rounded-full text-xs sm:text-sm font-medium\">\n                  AM Session Active\n                </div>\n                <button\n                  onClick={() => router.push('/am-trade/add-am-trade')}\n                  className=\"bg-blue-600 text-white px-3 sm:px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm sm:text-base\"\n                >\n                  <span className=\"hidden sm:inline\">Add AM Trade</span>\n                  <span className=\"sm:hidden\">Add</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Filter Controls */}\n          <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 rounded-2xl sm:rounded-3xl border border-gray-200/60 p-4 sm:p-6 lg:p-8 shadow-lg hover:shadow-xl transition-all duration-300 mb-6 sm:mb-8\">\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 lg:space-x-6\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center space-y-4 sm:space-y-0 sm:space-x-4\">\n                {/* Time Filter */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Time Period</label>\n                  <select\n                    value={timeFilter}\n                    onChange={(e) => setTimeFilter(e.target.value)}\n                    className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                  >\n                    <option value=\"all\">All Time</option>\n                    <option value=\"7d\">Last 7 Days</option>\n                    <option value=\"30d\">Last 30 Days</option>\n                    <option value=\"90d\">Last 90 Days</option>\n                  </select>\n                </div>\n\n                {/* Status Filter */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n                  <select\n                    value={statusFilter}\n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                  >\n                    <option value=\"all\">All Status</option>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"win\">Wins</option>\n                    <option value=\"loss\">Losses</option>\n                  </select>\n                </div>\n\n                {/* Pair Filter */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trading Pair</label>\n                  <select\n                    value={pairFilter}\n                    onChange={(e) => setPairFilter(e.target.value)}\n                    className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                  >\n                    <option value=\"all\">All Pairs</option>\n                    {uniquePairs.map(pair => (\n                      <option key={pair} value={pair}>{pair}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Strategy Filter */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Strategy</label>\n                  <select\n                    value={strategyFilter}\n                    onChange={(e) => setStrategyFilter(e.target.value)}\n                    className=\"px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base min-w-[140px]\"\n                  >\n                    <option value=\"all\">All Strategies</option>\n                    {uniqueStrategies.map(strategy => (\n                      <option key={strategy} value={strategy}>{strategy}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {/* Reset Filters */}\n              <button\n                onClick={() => {\n                  setTimeFilter('all');\n                  setStatusFilter('all');\n                  setPairFilter('all');\n                  setStrategyFilter('all');\n                }}\n                className=\"px-4 py-2 text-gray-600 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200 text-sm font-medium\"\n              >\n                Reset Filters\n              </button>\n            </div>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-gradient-to-br from-white via-blue-50/30 to-indigo-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 font-medium\">Total AM Trades</p>\n                  <p className=\"text-3xl font-bold text-gray-900 mt-1\">{analytics.totalTrades}</p>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {analytics.activePositions} active\n                  </p>\n                </div>\n                <div className=\"p-3 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl shadow-lg\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-white via-green-50/30 to-emerald-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 font-medium\">Win Rate</p>\n                  <p className=\"text-3xl font-bold text-gray-900 mt-1\">{analytics.winRate}%</p>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Profit Factor: {analytics.profitFactor}\n                  </p>\n                </div>\n                <div className=\"p-3 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl shadow-lg\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-white via-purple-50/30 to-violet-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 font-medium\">Total P&L</p>\n                  <p className={`text-3xl font-bold mt-1 ${\n                    analytics.totalProfit > 0 ? 'text-green-600' :\n                    analytics.totalProfit < 0 ? 'text-red-600' : 'text-gray-900'\n                  }`}>\n                    {formatCurrency(analytics.totalProfit)}\n                  </p>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Best: {formatCurrency(analytics.bestTrade)}\n                  </p>\n                </div>\n                <div className={`p-3 rounded-xl shadow-lg ${\n                  analytics.totalProfit > 0\n                    ? 'bg-gradient-to-br from-green-500 to-emerald-600'\n                    : 'bg-gradient-to-br from-red-500 to-rose-600'\n                }`}>\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-white via-orange-50/30 to-amber-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 font-medium\">Avg Win/Loss</p>\n                  <div className=\"flex items-center space-x-2 mt-1\">\n                    <span className=\"text-lg font-bold text-green-600\">{formatCurrency(analytics.avgWin)}</span>\n                    <span className=\"text-gray-400\">/</span>\n                    <span className=\"text-lg font-bold text-red-600\">{formatCurrency(analytics.avgLoss)}</span>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Win Streak: {analytics.winStreak}\n                  </p>\n                </div>\n                <div className=\"p-3 bg-gradient-to-br from-orange-500 to-amber-600 rounded-xl shadow-lg\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Charts Section */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n            {/* P&L Performance Chart */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-xl font-bold text-gray-900\">P&L Performance</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-600\">Cumulative P&L</span>\n                </div>\n              </div>\n              <div className=\"h-80\">\n                {filteredTrades.length > 0 ? (\n                  <Line\n                    data={{\n                      labels: filteredTrades\n                        .filter(trade => trade.status && trade.status !== 'pending')\n                        .sort((a, b) => new Date(a.dateTime || a.createdAt) - new Date(b.dateTime || b.createdAt))\n                        .map((trade, index) => `Trade ${index + 1}`),\n                      datasets: [\n                        {\n                          label: 'Cumulative P&L',\n                          data: filteredTrades\n                            .filter(trade => trade.status && trade.status !== 'pending')\n                            .sort((a, b) => new Date(a.dateTime || a.createdAt) - new Date(b.dateTime || b.createdAt))\n                            .reduce((acc, trade, index) => {\n                              const cumulative = index === 0 ? (trade.actualProfit || 0) : acc[index - 1] + (trade.actualProfit || 0);\n                              acc.push(cumulative);\n                              return acc;\n                            }, []),\n                          borderColor: 'rgb(34, 197, 94)',\n                          backgroundColor: 'rgba(34, 197, 94, 0.1)',\n                          borderWidth: 3,\n                          fill: true,\n                          tension: 0.4,\n                          pointBackgroundColor: 'rgb(34, 197, 94)',\n                          pointBorderColor: 'white',\n                          pointBorderWidth: 2,\n                          pointRadius: 5,\n                          pointHoverRadius: 8\n                        }\n                      ]\n                    }}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false\n                        },\n                        tooltip: {\n                          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                          titleColor: 'white',\n                          bodyColor: 'white',\n                          borderColor: 'rgba(34, 197, 94, 0.5)',\n                          borderWidth: 1,\n                          cornerRadius: 8,\n                          displayColors: false,\n                          callbacks: {\n                            label: function(context) {\n                              return `P&L: ${formatCurrency(context.parsed.y)}`;\n                            }\n                          }\n                        }\n                      },\n                      scales: {\n                        x: {\n                          grid: {\n                            display: false\n                          },\n                          ticks: {\n                            color: '#6B7280',\n                            font: {\n                              size: 12\n                            }\n                          }\n                        },\n                        y: {\n                          grid: {\n                            color: 'rgba(0, 0, 0, 0.05)'\n                          },\n                          ticks: {\n                            color: '#6B7280',\n                            font: {\n                              size: 12\n                            },\n                            callback: function(value) {\n                              return formatCurrency(value);\n                            }\n                          }\n                        }\n                      },\n                      interaction: {\n                        intersect: false,\n                        mode: 'index'\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"h-full flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <svg className=\"w-16 h-16 mx-auto text-gray-300 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                      <p className=\"text-gray-500 font-medium\">No trade data available</p>\n                      <p className=\"text-gray-400 text-sm\">Add some AM trades to see performance charts</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Win/Loss Distribution */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-purple-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-xl font-bold text-gray-900\">Win/Loss Distribution</h3>\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                    <span className=\"text-sm text-gray-600\">Wins</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                    <span className=\"text-sm text-gray-600\">Losses</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"h-80\">\n                {filteredTrades.length > 0 ? (\n                  <Doughnut\n                    data={{\n                      labels: ['Wins', 'Losses', 'Pending'],\n                      datasets: [\n                        {\n                          data: [\n                            filteredTrades.filter(trade => trade.status === 'win').length,\n                            filteredTrades.filter(trade => trade.status === 'loss').length,\n                            filteredTrades.filter(trade => !trade.status || trade.status === 'pending').length\n                          ],\n                          backgroundColor: [\n                            'rgba(34, 197, 94, 0.8)',\n                            'rgba(239, 68, 68, 0.8)',\n                            'rgba(156, 163, 175, 0.8)'\n                          ],\n                          borderColor: [\n                            'rgb(34, 197, 94)',\n                            'rgb(239, 68, 68)',\n                            'rgb(156, 163, 175)'\n                          ],\n                          borderWidth: 3,\n                          hoverBackgroundColor: [\n                            'rgba(34, 197, 94, 0.9)',\n                            'rgba(239, 68, 68, 0.9)',\n                            'rgba(156, 163, 175, 0.9)'\n                          ]\n                        }\n                      ]\n                    }}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          position: 'bottom',\n                          labels: {\n                            padding: 20,\n                            usePointStyle: true,\n                            font: {\n                              size: 14,\n                              weight: '500'\n                            }\n                          }\n                        },\n                        tooltip: {\n                          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                          titleColor: 'white',\n                          bodyColor: 'white',\n                          borderColor: 'rgba(156, 163, 175, 0.5)',\n                          borderWidth: 1,\n                          cornerRadius: 8,\n                          callbacks: {\n                            label: function(context) {\n                              const total = context.dataset.data.reduce((a, b) => a + b, 0);\n                              const percentage = ((context.parsed / total) * 100).toFixed(1);\n                              return `${context.label}: ${context.parsed} (${percentage}%)`;\n                            }\n                          }\n                        }\n                      },\n                      cutout: '60%'\n                    }}\n                  />\n                ) : (\n                  <div className=\"h-full flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <svg className=\"w-16 h-16 mx-auto text-gray-300 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n                      </svg>\n                      <p className=\"text-gray-500 font-medium\">No trade data available</p>\n                      <p className=\"text-gray-400 text-sm\">Add some AM trades to see distribution</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Recent AM Trades */}\n          <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-indigo-50/30 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300 mb-8\">\n            <div className=\"p-6 border-b border-gray-200/60\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-bold text-gray-900\">Recent AM Trades</h3>\n                <button\n                  onClick={() => router.push('/am-trade/journal')}\n                  className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-200 text-sm font-medium shadow-lg hover:shadow-xl\"\n                >\n                  View All\n                </button>\n              </div>\n            </div>\n            <div className=\"p-6\">\n              {filteredTrades.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {filteredTrades\n                    .sort((a, b) => new Date(b.dateTime || b.createdAt) - new Date(a.dateTime || a.createdAt))\n                    .slice(0, 5)\n                    .map((trade) => (\n                      <div\n                        key={trade._id}\n                        className=\"flex items-center justify-between p-4 bg-white rounded-xl border border-gray-200/60 hover:shadow-md transition-all duration-200\"\n                      >\n                        <div className=\"flex items-center space-x-4\">\n                          <div className={`w-3 h-3 rounded-full ${\n                            trade.status === 'win' ? 'bg-green-500' :\n                            trade.status === 'loss' ? 'bg-red-500' :\n                            'bg-gray-400'\n                          }`}></div>\n                          <div>\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"font-semibold text-gray-900\">{trade.tradingPair}</span>\n                              <span className={`px-2 py-1 rounded-lg text-xs font-medium ${\n                                trade.direction === 'long'\n                                  ? 'bg-green-100 text-green-700'\n                                  : 'bg-red-100 text-red-700'\n                              }`}>\n                                {trade.direction?.toUpperCase()}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center space-x-4 mt-1\">\n                              <span className=\"text-sm text-gray-600\">\n                                {formatDate(trade.dateTime || trade.createdAt)}\n                              </span>\n                              {trade.strategy && (\n                                <span className=\"text-sm text-gray-500\">\n                                  {trade.strategy}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className={`text-lg font-bold ${\n                            trade.actualProfit > 0 ? 'text-green-600' :\n                            trade.actualProfit < 0 ? 'text-red-600' :\n                            'text-gray-600'\n                          }`}>\n                            {trade.actualProfit ? formatCurrency(trade.actualProfit) : 'Pending'}\n                          </div>\n                          {trade.status && (\n                            <div className={`text-xs font-medium mt-1 ${\n                              trade.status === 'win' ? 'text-green-600' :\n                              trade.status === 'loss' ? 'text-red-600' :\n                              'text-gray-600'\n                            }`}>\n                              {trade.status.charAt(0).toUpperCase() + trade.status.slice(1)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n\n                  {filteredTrades.length > 5 && (\n                    <div className=\"text-center pt-4\">\n                      <button\n                        onClick={() => router.push('/am-trade/journal')}\n                        className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n                      >\n                        View {filteredTrades.length - 5} more trades →\n                      </button>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <svg className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  <p className=\"text-gray-500 mb-2 font-medium\">No AM trades found</p>\n                  <p className=\"text-sm text-gray-400 mb-6\">Start your morning trading session to see analytics</p>\n                  <button\n                    onClick={() => router.push('/am-trade/add-am-trade')}\n                    className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    Add Your First AM Trade\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Trading Week Results & Trading Day Results */}\n          <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4 sm:gap-6 mb-6 sm:mb-8\">\n            {/* Trading Week Results */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-purple-50/30 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"p-6 border-b border-gray-200/60\">\n                <h3 className=\"text-xl font-bold text-gray-900 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  Trading Week Results\n                </h3>\n              </div>\n              <div className=\"p-4 sm:p-6\">\n                {/* Week Results Header */}\n                <div className=\"grid grid-cols-5 gap-2 sm:gap-4 mb-4 pb-3 border-b border-gray-200/60\">\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    <span className=\"text-xs sm:text-sm font-medium text-gray-600\">Week</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Trades</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Win Rate</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Sum RR</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Sum Profit %</span>\n                  </div>\n                </div>\n\n                {/* Week Results Data */}\n                <div className=\"space-y-3\">\n                  {weeklyResults.map((week, index) => (\n                    <div key={index} className=\"grid grid-cols-5 gap-4 p-3 bg-white rounded-xl border border-gray-200/60 hover:shadow-md transition-all duration-200\">\n                      <div className=\"font-medium text-gray-900\">{week.week}</div>\n                      <div className=\"font-semibold text-gray-700\">{week.trades}</div>\n                      <div className={`font-semibold ${\n                        week.winRate > 50 ? 'text-green-600' :\n                        week.winRate > 0 ? 'text-orange-600' : 'text-gray-600'\n                      }`}>\n                        {week.winRate}%\n                      </div>\n                      <div className={`font-semibold ${\n                        week.sumRR > 0 ? 'text-green-600' :\n                        week.sumRR < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {week.sumRR}\n                      </div>\n                      <div className={`font-semibold ${\n                        week.sumProfitPercent > 0 ? 'text-green-600' :\n                        week.sumProfitPercent < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {week.sumProfitPercent > 0 ? '+' : ''}{week.sumProfitPercent}%\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Trading Day Results */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-orange-50/30 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <div className=\"p-6 border-b border-gray-200/60\">\n                <h3 className=\"text-xl font-bold text-gray-900 flex items-center\">\n                  <svg className=\"w-6 h-6 mr-3 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                  Trading Day Results\n                </h3>\n              </div>\n              <div className=\"p-4 sm:p-6\">\n                {/* Day Results Header */}\n                <div className=\"grid grid-cols-5 gap-2 sm:gap-4 mb-4 pb-3 border-b border-gray-200/60\">\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Weekday</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Trades</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Win Rate</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Sum RR</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-gray-600\">Sum Profit %</span>\n                  </div>\n                </div>\n\n                {/* Day Results Data */}\n                <div className=\"space-y-3\">\n                  {dailyResults.map((day, index) => (\n                    <div key={index} className=\"grid grid-cols-5 gap-4 p-3 bg-white rounded-xl border border-gray-200/60 hover:shadow-md transition-all duration-200\">\n                      <div className=\"font-medium text-gray-900\">{day.weekday}</div>\n                      <div className=\"font-semibold text-gray-700\">{day.trades}</div>\n                      <div className={`font-semibold ${\n                        day.winRate > 50 ? 'text-green-600' :\n                        day.winRate > 0 ? 'text-orange-600' : 'text-gray-600'\n                      }`}>\n                        {day.winRate}%\n                      </div>\n                      <div className={`font-semibold ${\n                        day.sumRR > 0 ? 'text-green-600' :\n                        day.sumRR < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {day.sumRR}\n                      </div>\n                      <div className={`font-semibold ${\n                        day.sumProfitPercent > 0 ? 'text-green-600' :\n                        day.sumProfitPercent < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}>\n                        {day.sumProfitPercent > 0 ? '+' : ''}{day.sumProfitPercent}%\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Summary Row */}\n                <div className=\"mt-6 pt-4 border-t border-gray-200/60\">\n                  <div className=\"grid grid-cols-5 gap-4 p-3 bg-gradient-to-r from-gray-50 to-orange-50 rounded-xl border border-gray-200/60\">\n                    <div className=\"font-bold text-gray-900\">SUM</div>\n                    <div className=\"font-bold text-gray-900\">\n                      {dailyResults.reduce((sum, day) => sum + day.trades, 0)}\n                    </div>\n                    <div className=\"font-bold text-gray-900\">\n                      {dailyResults.length > 0 ?\n                        (dailyResults.reduce((sum, day) => sum + (day.winRate * day.trades), 0) /\n                         Math.max(dailyResults.reduce((sum, day) => sum + day.trades, 0), 1)).toFixed(1) : '0.0'}%\n                    </div>\n                    <div className={`font-bold ${\n                      dailyResults.reduce((sum, day) => sum + day.sumRR, 0) > 0 ? 'text-green-600' :\n                      dailyResults.reduce((sum, day) => sum + day.sumRR, 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                    }`}>\n                      {dailyResults.reduce((sum, day) => sum + day.sumRR, 0).toFixed(1)}\n                    </div>\n                    <div className={`font-bold ${\n                      dailyResults.reduce((sum, day) => sum + day.sumProfitPercent, 0) > 0 ? 'text-green-600' :\n                      dailyResults.reduce((sum, day) => sum + day.sumProfitPercent, 0) < 0 ? 'text-red-600' : 'text-gray-600'\n                    }`}>\n                      {dailyResults.reduce((sum, day) => sum + day.sumProfitPercent, 0) > 0 ? '+' : ''}\n                      {dailyResults.reduce((sum, day) => sum + day.sumProfitPercent, 0).toFixed(2)}%\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Performance Metrics & Quick Actions */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Detailed Performance Metrics */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-green-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                <svg className=\"w-6 h-6 mr-3 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                AM Session Performance\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Average Win</span>\n                  <span className=\"font-bold text-green-600\">{formatCurrency(analytics.avgWin)}</span>\n                </div>\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Average Loss</span>\n                  <span className=\"font-bold text-red-600\">{formatCurrency(analytics.avgLoss)}</span>\n                </div>\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Best Trade</span>\n                  <span className=\"font-bold text-green-600\">{formatCurrency(analytics.bestTrade)}</span>\n                </div>\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Worst Trade</span>\n                  <span className=\"font-bold text-red-600\">{formatCurrency(analytics.worstTrade)}</span>\n                </div>\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Profit Factor</span>\n                  <span className={`font-bold ${analytics.profitFactor > 1 ? 'text-green-600' : 'text-red-600'}`}>\n                    {analytics.profitFactor === Infinity ? '∞' : analytics.profitFactor}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center p-3 bg-white rounded-xl border border-gray-200/60\">\n                  <span className=\"text-sm font-medium text-gray-600\">Win Streak</span>\n                  <span className=\"font-bold text-blue-600\">{analytics.winStreak}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Quick Actions & Trading Pairs */}\n            <div className=\"bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 p-6 rounded-2xl border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300\">\n              <h3 className=\"text-xl font-bold text-gray-900 mb-6 flex items-center\">\n                <svg className=\"w-6 h-6 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n                Quick Actions\n              </h3>\n              <div className=\"space-y-4 mb-6\">\n                <button\n                  onClick={() => router.push('/am-trade/add-am-trade')}\n                  className=\"w-full flex items-center space-x-3 p-4 text-left bg-gradient-to-r from-blue-50 to-indigo-50 hover:from-blue-100 hover:to-indigo-100 rounded-xl transition-all duration-200 border border-blue-200/60 hover:border-blue-300/60\"\n                >\n                  <div className=\"p-2 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg\">\n                    <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n                    </svg>\n                  </div>\n                  <span className=\"font-semibold text-blue-700\">Add New AM Trade</span>\n                </button>\n                <button\n                  onClick={() => router.push('/am-trade/journal')}\n                  className=\"w-full flex items-center space-x-3 p-4 text-left bg-gradient-to-r from-gray-50 to-slate-50 hover:from-gray-100 hover:to-slate-100 rounded-xl transition-all duration-200 border border-gray-200/60 hover:border-gray-300/60\"\n                >\n                  <div className=\"p-2 bg-gradient-to-r from-gray-600 to-slate-600 rounded-lg\">\n                    <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                    </svg>\n                  </div>\n                  <span className=\"font-semibold text-gray-700\">View AM Journal</span>\n                </button>\n              </div>\n\n              {/* Top Trading Pairs */}\n              {uniquePairs.length > 0 && (\n                <div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Trading Pairs</h4>\n                  <div className=\"space-y-2\">\n                    {uniquePairs.slice(0, 5).map(pair => {\n                      const pairTrades = filteredTrades.filter(trade => trade.tradingPair === pair);\n                      const pairProfit = pairTrades.reduce((sum, trade) => sum + (trade.actualProfit || 0), 0);\n                      const pairWinRate = pairTrades.filter(trade => trade.status === 'win').length / pairTrades.length * 100;\n\n                      return (\n                        <div key={pair} className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-gray-200/60\">\n                          <div>\n                            <span className=\"font-medium text-gray-900\">{pair}</span>\n                            <div className=\"text-xs text-gray-500\">\n                              {pairTrades.length} trades • {pairWinRate.toFixed(0)}% win rate\n                            </div>\n                          </div>\n                          <span className={`font-bold text-sm ${\n                            pairProfit > 0 ? 'text-green-600' :\n                            pairProfit < 0 ? 'text-red-600' : 'text-gray-600'\n                          }`}>\n                            {formatCurrency(pairProfit)}\n                          </span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Add New Account Modal */}\n      {showAddAccountModal && (\n        <div className=\"fixed inset-0 backdrop-blur-sm bg-gray-900/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-md transform transition-all\">\n            {/* Modal Header */}\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Add New Account</h3>\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"px-6 py-4 space-y-4\">\n              {/* Account Name */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Account Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={newAccount.name}\n                  onChange={(e) => setNewAccount({ ...newAccount, name: e.target.value })}\n                  placeholder=\"e.g., My AM Trading Account\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                />\n              </div>\n\n              {/* Initial Balance */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Initial Balance\n                </label>\n                <div className=\"relative\">\n                  <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\n                  <input\n                    type=\"number\"\n                    value={newAccount.balance}\n                    onChange={(e) => setNewAccount({ ...newAccount, balance: e.target.value })}\n                    placeholder=\"0.00\"\n                    className=\"w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                  />\n                </div>\n              </div>\n\n              {/* Account Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Account Type\n                </label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {[\n                    { value: 'personal', label: 'Personal', color: 'bg-blue-600' },\n                    { value: 'business', label: 'Business', color: 'bg-green-600' },\n                    { value: 'demo', label: 'Demo', color: 'bg-purple-600' },\n                    { value: 'forex', label: 'Forex', color: 'bg-orange-600' },\n                    { value: 'crypto', label: 'Crypto', color: 'bg-indigo-600' }\n                  ].map((tag) => (\n                    <button\n                      key={tag.value}\n                      onClick={() => setNewAccount({ ...newAccount, tag: tag.value })}\n                      className={`flex items-center space-x-3 p-3 rounded-lg border-2 transition-all ${\n                        newAccount.tag === tag.value\n                          ? 'border-blue-500 bg-blue-50'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className={`w-4 h-4 rounded-full ${tag.color}`}></div>\n                      <span className=\"font-medium text-gray-900\">{tag.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <p className=\"text-sm font-medium text-gray-700 mb-2\">Preview</p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${getTagColor(newAccount.tag)}`}></div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {newAccount.name || 'Account Name'}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      ${newAccount.balance ? parseFloat(newAccount.balance).toLocaleString() : '0.00'} • {getTagDisplayName(newAccount.tag)}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-xl\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleAddAccount}\n                  disabled={!newAccount.name || !newAccount.balance}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span>Add Account</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}