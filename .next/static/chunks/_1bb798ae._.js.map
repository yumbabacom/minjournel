{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/components/Sidebar.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function Sidebar({\n  user,\n  currentAccountId,\n  accounts = [],\n  onAccountSwitch,\n  onAddAccount,\n  onEditAccount,\n  onDeleteAccount,\n  onLogout,\n  onUpdateUser\n}) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const [showAccountDropdown, setShowAccountDropdown] = useState(false);\n  const [editingAccountId, setEditingAccountId] = useState(null);\n  const [editingBalance, setEditingBalance] = useState('');\n  const [mounted, setMounted] = useState(false);\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [isAMTradeMode, setIsAMTradeMode] = useState(false);\n  const [userSettings, setUserSettings] = useState({\n    fullName: user?.fullName || user?.name || '',\n    email: user?.email || '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n    avatar: user?.avatar || null,\n    notifications: {\n      email: true,\n      push: true,\n      trades: true,\n      reports: false\n    },\n    preferences: {\n      theme: 'light',\n      currency: 'USD',\n      timezone: 'UTC',\n      language: 'en'\n    }\n  });\n\n  // Prevent hydration mismatch by only rendering client-specific content after mount\n  useEffect(() => {\n    setMounted(true);\n    // Only enable AM Trade mode if currently on an AM Trade page, not from localStorage\n    const isOnAMTradePage = pathname?.startsWith('/am-trade');\n\n    if (isOnAMTradePage) {\n      setIsAMTradeMode(true);\n      localStorage.setItem('isAMTradeMode', 'true');\n    } else {\n      // If not on AM Trade page, ensure AM Trade mode is disabled\n      setIsAMTradeMode(false);\n      localStorage.setItem('isAMTradeMode', 'false');\n    }\n  }, [pathname]);\n\n  // Update userSettings when user prop changes\n  useEffect(() => {\n    if (user) {\n      setUserSettings(prev => ({\n        ...prev,\n        fullName: user.fullName || user.name || '',\n        email: user.email || '',\n        avatar: user.avatar || null\n      }));\n    }\n  }, [user]);\n\n  // Close dropdowns when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.dropdown-container')) {\n        setShowUserDropdown(false);\n        setShowAccountDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Get current active account\n  const currentAccount = accounts.find(acc =>\n    (acc.id === currentAccountId) || (acc._id === currentAccountId)\n  ) || accounts[0] || {\n    id: null,\n    name: 'No Account',\n    balance: 0,\n    tag: 'personal',\n    color: 'bg-gray-600',\n    isActive: false\n  };\n\n  // Ensure current account has color property\n  if (currentAccount && !currentAccount.color) {\n    currentAccount.color = getTagColor(currentAccount.tag);\n  }\n\n  const getTagColor = (tag) => {\n    const colors = {\n      'personal': 'bg-blue-600',\n      'funded': 'bg-green-600', \n      'demo': 'bg-purple-600',\n      'forex': 'bg-orange-600',\n      'crypto': 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      'personal': 'Personal',\n      'funded': 'Funded',\n      'demo': 'Demo', \n      'forex': 'Forex',\n      'crypto': 'Crypto'\n    };\n    return names[tag] || tag;\n  };\n\n  const handleSwitchAccount = (accountId) => {\n    if (!accountId) return;\n    onAccountSwitch?.(accountId);\n    setShowAccountDropdown(false);\n  };\n\n  const handleEditBalance = (accountId) => {\n    const account = accounts.find(acc => (acc.id === accountId) || (acc._id === accountId));\n    setEditingAccountId(accountId);\n    setEditingBalance(account?.balance?.toString() || '');\n  };\n\n  const handleSaveBalance = (accountId) => {\n    onEditAccount?.(accountId, { balance: parseFloat(editingBalance) || 0 });\n    setEditingAccountId(null);\n    setEditingBalance('');\n  };\n\n  const handleAMTradeToggle = () => {\n    const newMode = !isAMTradeMode;\n    setIsAMTradeMode(newMode);\n    localStorage.setItem('isAMTradeMode', newMode.toString());\n\n    // Navigate to appropriate page\n    if (newMode) {\n      router.push('/am-trade');\n    } else {\n      router.push('/dashboard');\n    }\n  };\n\n  const handleAvatarUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setUserSettings(prev => ({\n          ...prev,\n          avatar: e.target.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleOpenSettings = () => {\n    // Reset form with current user data when opening\n    setUserSettings(prev => ({\n      ...prev,\n      fullName: user?.fullName || user?.name || '',\n      email: user?.email || '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      avatar: user?.avatar || null\n    }));\n    setShowSettingsModal(true);\n    setShowUserDropdown(false);\n  };\n\n  const handleSaveSettings = async () => {\n    try {\n      // Get token from cookies or localStorage with better error handling\n      let token = null;\n\n      // Try to get from cookies first\n      try {\n        const cookies = document.cookie.split('; ');\n        const authCookie = cookies.find(row => row.startsWith('auth-token='));\n        if (authCookie) {\n          token = authCookie.split('=')[1];\n        }\n      } catch (cookieError) {\n        console.log('Error reading cookies:', cookieError);\n      }\n\n      // Fallback to localStorage\n      if (!token) {\n        try {\n          token = localStorage.getItem('auth-token');\n        } catch (storageError) {\n          console.log('Error reading localStorage:', storageError);\n        }\n      }\n\n      if (!token) {\n        alert('Authentication token not found. Please log in again.');\n        return;\n      }\n\n      console.log('Using token for profile update:', token ? 'Token found' : 'No token');\n\n      // Prepare data to send\n      const updateData = {\n        fullName: userSettings.fullName,\n        email: userSettings.email,\n        currentPassword: userSettings.currentPassword,\n        newPassword: userSettings.newPassword,\n        confirmPassword: userSettings.confirmPassword\n      };\n\n      // Make API call\n      const response = await fetch('/api/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updateData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert('Profile updated successfully!');\n        setShowSettingsModal(false);\n\n        // Update user data in parent component if callback provided\n        if (typeof onUpdateUser === 'function') {\n          onUpdateUser(data.user);\n        }\n\n        // Refresh page to update user data in UI\n        window.location.reload();\n      } else {\n        console.error('Profile update failed:', data);\n        alert(data.error || 'Failed to update profile');\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      alert('An error occurred while saving settings. Please try again.');\n    }\n  };\n\n  const getInitials = (name) => {\n    if (!name) return 'U';\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\n  };\n\n  // AM Trade menu items (removed Balance - it's shown in sidebar account section)\n  const amTradeMenuItems = [\n    {\n      id: 'overview',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-am-trade',\n      name: 'Add AM Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    }\n  ];\n\n  // Regular menu items\n  const menuItems = [\n    {\n      id: 'dashboard',\n      name: 'Overview',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'add-trade',\n      name: 'Add Trade',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      ),\n      highlight: true\n    },\n    {\n      id: 'journal',\n      name: 'Journal',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      )\n    },\n    {\n      id: 'analytics',\n      name: 'Analytics',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'strategy',\n      name: 'Strategy',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n        </svg>\n      )\n    },\n    {\n      id: 'sessions',\n      name: 'Sessions',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'risk-analysis',\n      name: 'Risk',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'forex-news',\n      name: 'Forex News',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n        </svg>\n      )\n    },\n    {\n      id: 'calendar',\n      name: 'Calendar',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n      )\n    }\n  ];\n\n  const handleNavigation = (itemId) => {\n    if (isAMTradeMode) {\n      // AM Trade mode navigation\n      if (itemId === 'overview') {\n        router.push('/am-trade/overview');\n      } else if (itemId === 'add-am-trade') {\n        router.push('/am-trade/add-am-trade');\n      } else if (itemId === 'journal') {\n        router.push('/am-trade/journal');\n      } else {\n        router.push('/am-trade');\n      }\n    } else {\n      // Regular mode navigation\n      if (itemId === 'add-trade') {\n        router.push('/add-trade');\n      } else if (itemId === 'dashboard') {\n        router.push('/dashboard');\n      } else if (itemId === 'journal') {\n        router.push('/journal');\n      } else {\n        router.push(`/dashboard?section=${itemId}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-64 bg-gradient-to-b from-slate-50 via-white to-gray-50/50 border-r border-gray-200/60 flex flex-col fixed left-0 top-0 h-screen shadow-xl backdrop-blur-sm\">\n      {/* Compact User Profile */}\n      <div className=\"p-4 border-b border-gray-200/60\">\n        <div className=\"relative dropdown-container\">\n          <button\n            onClick={() => setShowUserDropdown(!showUserDropdown)}\n            className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-white/80 transition-all duration-200 group shadow-sm hover:shadow-md border border-transparent hover:border-gray-200/60\"\n          >\n            <div className=\"relative\">\n              {userSettings.avatar ? (\n                <img\n                  src={userSettings.avatar}\n                  alt=\"Profile\"\n                  className=\"w-10 h-10 rounded-xl object-cover border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-sm\"\n                />\n              ) : (\n                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 via-blue-600 to-indigo-600 rounded-xl flex items-center justify-center border-2 border-gray-200/60 group-hover:border-blue-300/60 transition-all duration-200 shadow-lg\">\n                  <span className=\"text-white font-bold text-sm tracking-wide\">\n                    {getInitials(user?.fullName || user?.name)}\n                  </span>\n                </div>\n              )}\n              <div className=\"absolute -bottom-0.5 -right-0.5 w-3.5 h-3.5 bg-gradient-to-br from-green-400 to-green-500 border-2 border-white rounded-full shadow-sm\">\n                <div className=\"w-full h-full bg-green-500 rounded-full animate-pulse\"></div>\n              </div>\n            </div>\n            <div className=\"flex-1 text-left min-w-0\">\n              <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                {user?.fullName || user?.name || 'User'}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <div className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gradient-to-r from-green-100 to-emerald-100 text-green-700 border border-green-200/60\">\n                  <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-1.5 animate-pulse\"></div>\n                  Online\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <svg\n                className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showUserDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </div>\n          </button>\n\n          {/* Minimal User Dropdown Menu */}\n          {showUserDropdown && (\n            <div className=\"absolute top-full left-0 mt-3 w-full bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 overflow-hidden\">\n              <div className=\"p-3\">\n                {/* Profile Header */}\n                <div className=\"px-4 py-3 bg-gradient-to-r from-gray-50 to-slate-50 rounded-xl border border-gray-100/60 mb-3\">\n                  <p className=\"font-bold text-gray-900 text-sm tracking-tight\">{user?.fullName || user?.name}</p>\n                  <p className=\"text-xs text-gray-500 mt-0.5\">{user?.email}</p>\n                </div>\n\n                {/* Menu Items */}\n                <div className=\"space-y-1\">\n                  <button\n                    onClick={handleOpenSettings}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-gray-700 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-blue-100 to-blue-200 rounded-lg flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      </svg>\n                    </div>\n                    <span>Account Settings</span>\n                  </button>\n\n                  <div className=\"border-t border-gray-200/60 my-3\"></div>\n\n                  <button\n                    onClick={onLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-3 text-red-600 hover:bg-gradient-to-r hover:from-red-50 hover:to-rose-50 rounded-xl transition-all duration-200 text-sm font-medium group\"\n                  >\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-red-100 to-red-200 rounded-lg flex items-center justify-center group-hover:from-red-200 group-hover:to-red-300 transition-all duration-200\">\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                      </svg>\n                    </div>\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact Account Balance Card */}\n        <div className=\"mt-4 relative dropdown-container\">\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              setShowAccountDropdown(!showAccountDropdown);\n            }}\n            className=\"w-full p-4 bg-gradient-to-br from-white via-gray-50/50 to-slate-50/30 border border-gray-200/60 rounded-xl hover:border-gray-300/60 hover:shadow-md transition-all duration-200 group backdrop-blur-sm\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-left flex-1\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className={`w-3 h-3 rounded-full ${currentAccount.color} shadow-sm`}></div>\n                    <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Balance</p>\n                  </div>\n                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium border ${\n                    currentAccount.tag === 'funded' ? 'bg-green-100 text-green-700 border-green-200' :\n                    currentAccount.tag === 'demo' ? 'bg-purple-100 text-purple-700 border-purple-200' :\n                    currentAccount.tag === 'forex' ? 'bg-orange-100 text-orange-700 border-orange-200' :\n                    currentAccount.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border-indigo-200' :\n                    'bg-blue-100 text-blue-700 border-blue-200'\n                  }`}>\n                    {getTagDisplayName(currentAccount.tag)}\n                  </span>\n                </div>\n                <p className=\"font-bold text-gray-900 text-lg tracking-tight mb-1\">${Number(currentAccount.balance || 0).toLocaleString()}</p>\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-xs text-gray-600 truncate font-medium\">{currentAccount.name}</p>\n                  <svg\n                    className={`w-4 h-4 text-gray-400 transition-all duration-200 ${showAccountDropdown ? 'rotate-180 text-blue-500' : 'group-hover:text-gray-600'}`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </button>\n\n          {/* Minimal Account Dropdown */}\n          {showAccountDropdown && (\n            <div\n              className=\"absolute top-full left-0 mt-3 w-80 bg-white/95 backdrop-blur-xl border border-gray-200/60 rounded-2xl shadow-2xl z-50 max-h-80 overflow-y-auto\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"p-4\">\n                {/* Add New Account Button */}\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (typeof onAddAccount === 'function') {\n                      onAddAccount();\n                      setShowAccountDropdown(false);\n                    }\n                  }}\n                  className=\"w-full flex items-center space-x-4 p-4 text-blue-600 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 rounded-2xl transition-all duration-300 border border-blue-200/60 bg-gradient-to-r from-blue-25 to-indigo-25 hover:border-blue-300/60 group shadow-sm hover:shadow-md\"\n                >\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-300 shadow-sm\">\n                    <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-left\">\n                    <span className=\"font-bold text-blue-700 text-sm\">Add New Account</span>\n                    <p className=\"text-xs text-blue-500 mt-0.5\">Create a new trading account</p>\n                  </div>\n                </button>\n\n                <div className=\"border-t border-gray-200 my-3\"></div>\n\n                {/* Existing Accounts */}\n                <div className=\"space-y-2\">\n                  {accounts.map((account, index) => {\n                    const accountId = account.id || account._id;\n                    const isCurrentAccount = String(accountId) === String(currentAccountId);\n\n                    if (!account.color) {\n                      account.color = getTagColor(account.tag);\n                    }\n\n                    return (\n                      <div\n                        key={`${accountId}-${currentAccountId}`}\n                        className={`flex items-center justify-between p-3 rounded-lg transition-all duration-200 border ${\n                          isCurrentAccount\n                            ? 'bg-blue-50 border-blue-200 shadow-sm'\n                            : 'hover:bg-gray-50 border-gray-100 hover:border-gray-200 hover:shadow-sm'\n                        }`}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          handleSwitchAccount(accountId);\n                        }}\n                      >\n                        <div className=\"flex items-center space-x-3 flex-1 cursor-pointer\">\n                          <div className=\"relative\">\n                            <div className={`w-3 h-3 rounded-full ${account.color} shadow-sm`}></div>\n                            {isCurrentAccount && (\n                              <div className=\"absolute -top-0.5 -right-0.5 w-1.5 h-1.5 bg-green-500 rounded-full border border-white\"></div>\n                            )}\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-semibold text-gray-900 text-sm truncate\">\n                              {account.name}\n                            </p>\n                            <div className=\"flex items-center space-x-2 mt-1\">\n                              {editingAccountId === accountId ? (\n                                <div className=\"flex items-center space-x-2\">\n                                  <input\n                                    type=\"number\"\n                                    value={editingBalance}\n                                    onChange={(e) => {\n                                      e.stopPropagation();\n                                      setEditingBalance(e.target.value);\n                                    }}\n                                    onClick={(e) => e.stopPropagation()}\n                                    className=\"w-24 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                    placeholder=\"Enter balance\"\n                                  />\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      handleSaveBalance(accountId);\n                                    }}\n                                    className=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                  </button>\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      setEditingAccountId(null);\n                                      setEditingBalance('');\n                                    }}\n                                    className=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded transition-colors\"\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                  </button>\n                                </div>\n                              ) : (\n                                <>\n                                  <span className=\"text-sm font-bold text-gray-900\">${Number(account.balance || 0).toLocaleString()}</span>\n                                  <span className={`inline-flex px-2 py-0.5 rounded-full text-xs font-medium ${\n                                    account.tag === 'funded' ? 'bg-green-100 text-green-700 border border-green-200' :\n                                    account.tag === 'demo' ? 'bg-purple-100 text-purple-700 border border-purple-200' :\n                                    account.tag === 'forex' ? 'bg-orange-100 text-orange-700 border border-orange-200' :\n                                    account.tag === 'crypto' ? 'bg-indigo-100 text-indigo-700 border border-indigo-200' :\n                                    'bg-blue-100 text-blue-700 border border-blue-200'\n                                  }`}>\n                                    {getTagDisplayName(account.tag)}\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Action Buttons */}\n                        <div className=\"flex items-center space-x-1 ml-2\">\n                          <button\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              handleEditBalance(accountId);\n                            }}\n                            className=\"p-1.5 text-gray-400 hover:text-blue-600 hover:bg-blue-100 rounded transition-colors\"\n                            title=\"Edit Balance\"\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                          {accounts.length > 1 && (\n                            <button\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                if (typeof onDeleteAccount === 'function') {\n                                  onDeleteAccount(accountId);\n                                }\n                              }}\n                              className=\"p-1.5 text-gray-400 hover:text-red-600 hover:bg-red-100 rounded transition-colors\"\n                              title=\"Delete Account\"\n                            >\n                              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Footer Info */}\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                  <p className=\"text-xs text-gray-500 text-center\">\n                    {accounts.length} {accounts.length === 1 ? 'Account' : 'Accounts'} • Click to switch\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Compact AM Trade Toggle */}\n        <div className=\"mt-4 p-3 bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 rounded-xl border border-orange-200/60 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"flex items-center space-x-2 mb-0.5\">\n                <div className=\"w-1.5 h-1.5 bg-gradient-to-r from-orange-400 to-amber-500 rounded-full\"></div>\n                <p className=\"text-sm font-semibold text-gray-900\">AM Trade Mode</p>\n              </div>\n              <p className=\"text-xs text-gray-600\">Morning trading interface</p>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={isAMTradeMode}\n                onChange={handleAMTradeToggle}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-3 peer-focus:ring-orange-300/50 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all after:shadow-sm peer-checked:bg-gradient-to-r peer-checked:from-orange-500 peer-checked:to-amber-500\"></div>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Compact Navigation */}\n      <nav className=\"flex-1 p-4 overflow-y-auto\">\n        <div className=\"space-y-1\">\n          {(isAMTradeMode ? amTradeMenuItems : menuItems).map((item) => {\n            // Calculate active state only after component is mounted\n            const isActive = mounted && (\n              isAMTradeMode ? (\n                pathname === `/am-trade/${item.id}` ||\n                (pathname === '/am-trade' && item.id === 'overview') ||\n                (pathname === '/am-trade/add-am-trade' && item.id === 'add-am-trade') ||\n                (pathname === '/am-trade/journal' && item.id === 'journal')\n              ) : (\n                pathname === `/${item.id}` ||\n                (pathname === '/add-trade' && item.id === 'add-trade') ||\n                (pathname === '/journal' && item.id === 'journal')\n              )\n            );\n\n            return (\n              <button\n                key={item.id}\n                onClick={() => handleNavigation(item.id)}\n                className={`w-full flex items-center space-x-3 px-3 py-2.5 rounded-xl text-sm font-medium transition-all duration-200 group ${\n                  isActive\n                    ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-md'\n                    : item.highlight\n                    ? 'bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 hover:from-green-100 hover:to-emerald-100 border border-green-200/60'\n                    : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }`}\n              >\n                <div className={`w-7 h-7 rounded-lg flex items-center justify-center transition-all duration-200 ${\n                  isActive\n                    ? 'bg-white/20 text-white'\n                    : item.highlight\n                    ? 'bg-green-100 text-green-600'\n                    : 'bg-gray-100 text-gray-600 group-hover:bg-gray-200'\n                }`}>\n                  {item.icon}\n                </div>\n                <span className=\"flex-1 text-left\">{item.name}</span>\n                {isActive && (\n                  <div className=\"w-1.5 h-1.5 bg-white rounded-full\"></div>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </nav>\n\n      {/* Compact Footer */}\n      <div className=\"p-4 border-t border-gray-200/60\">\n        <button\n          onClick={onLogout}\n          className=\"w-full flex items-center space-x-3 px-3 py-2.5 text-gray-700 hover:bg-red-50 hover:text-red-600 rounded-xl text-sm font-medium transition-all duration-200 group\"\n        >\n          <div className=\"w-7 h-7 bg-gray-100 group-hover:bg-red-100 rounded-lg flex items-center justify-center transition-all duration-200\">\n            <svg className=\"w-4 h-4 text-gray-600 group-hover:text-red-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n            </svg>\n          </div>\n          <span className=\"flex-1 text-left\">Sign Out</span>\n        </button>\n      </div>\n\n      {/* Settings Modal - Portal to body */}\n      {showSettingsModal && typeof document !== 'undefined' && createPortal(\n        <div\n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-[9999] p-4\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowSettingsModal(false);\n            }\n          }}\n        >\n          <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-hidden relative z-[10000]\">\n            {/* Modal Header */}\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-blue-600 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900\">Account Settings</h2>\n                  <p className=\"text-sm text-gray-600\">Update your account information</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSettingsModal(false)}\n                className=\"p-2 hover:bg-gray-100 rounded-xl transition-colors\"\n              >\n                <svg className=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Modal Content */}\n            <div className=\"p-6\">\n              <div className=\"space-y-6\">\n                {/* Form Fields */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Username</label>\n                  <input\n                    type=\"text\"\n                    value={userSettings.fullName}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, fullName: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your username\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={userSettings.email}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.currentPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, currentPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter current password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.newPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, newPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Enter new password\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={userSettings.confirmPassword}\n                    onChange={(e) => setUserSettings(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    placeholder=\"Confirm new password\"\n                  />\n                </div>\n              </div>\n\n              {/* Modal Footer */}\n              <div className=\"flex items-center justify-end pt-6 mt-8 border-t border-gray-200 space-x-3\">\n                <button\n                  onClick={() => setShowSettingsModal(false)}\n                  className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleSaveSettings}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-medium shadow-lg\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1953, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/app/am-trade/add-am-trade/page.js"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Cookies from 'js-cookie';\nimport Sidebar from '../../../components/Sidebar';\n\nexport default function AddAMTrade() {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccountId, setCurrentAccountId] = useState(1);\n  const [submitting, setSubmitting] = useState(false);\n  const [showAddAccountModal, setShowAddAccountModal] = useState(false);\n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: '',\n    tag: 'personal'\n  });\n\n  const [tradeData, setTradeData] = useState({\n    // Date & Time\n    dateTime: new Date().toISOString().slice(0, 16),\n    manualDateTime: false,\n\n    // Basic Trade Info\n    accountSize: 0, // Will be auto-populated from selected account\n    direction: '', // Will be auto-detected: 'long' or 'short'\n    tradingPair: '', // Selected trading pair\n    strategy: '', // Trading strategy\n    entryPrice: '',\n    takeProfit: '', // Take profit level\n    stopLoss: '',\n\n    // Time & Market Info\n    weekday: '',\n    month: new Date().toLocaleDateString('en-US', { month: 'long', year: 'numeric' }),\n    quarter: `Q${Math.ceil((new Date().getMonth() + 1) / 3)} ${new Date().getFullYear()}`,\n\n    // Setup & Framework (AM Trade specific)\n    setup: '',\n    htfFramework: '',\n    dailyProfile: '',\n    entryCandle: '',\n    entryTime: '',\n    entryTimeFrame: '',\n    entryConfluence: '',\n\n    // Trade Metrics\n    duration: '',\n    riskPercent: '2', // Default 2%\n    plannedRR: '',\n\n    // Additional fields from main add-trade page\n    analysis: '', // Trade analysis\n    notes: '', // Trade notes\n    riskManagementLessons: '', // Risk management lessons\n    tags: '', // Trade tags\n    screenshot: null // Opening trade image\n  });\n\n  // Calculated results state\n  const [calculatedResults, setCalculatedResults] = useState({\n    riskAmount: 0,\n    lotSize: 0,\n    potentialProfit: 0,\n    potentialLoss: 0,\n    profitPips: 0,\n    lossPips: 0,\n    riskRewardRatio: 0\n  });\n\n  useEffect(() => {\n    const initializeUser = async () => {\n      try {\n        // First check if user is already in localStorage\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n          setLoading(false);\n          return;\n        }\n\n        // If no user in localStorage, check for auth token and fetch user\n        const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n        if (!token) {\n          // No authentication, redirect to login\n          router.push('/login');\n          return;\n        }\n\n        // Fetch user with token using the same endpoint as dashboard\n        const response = await fetch('/api/user', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n          // Store user data in localStorage for future use\n          localStorage.setItem('user', JSON.stringify(userData));\n\n          // Fetch accounts for this user\n          await fetchAccounts(userData);\n        } else {\n          // Invalid token, redirect to login\n          router.push('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        router.push('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeUser();\n  }, [router]);\n\n  // Fetch accounts when user is set (similar to dashboard)\n  useEffect(() => {\n    if (user?.id || user?._id) {\n      fetchAccounts(user);\n    }\n  }, [user]);\n\n  // Update account size when current account changes\n  useEffect(() => {\n    const currentAccount = accounts.find(acc =>\n      (acc.id === currentAccountId) || (acc._id === currentAccountId)\n    );\n    if (currentAccount) {\n      setTradeData(prev => ({\n        ...prev,\n        accountSize: currentAccount.balance || 0\n      }));\n    }\n  }, [currentAccountId, accounts]);\n\n  // Trading pairs data with comprehensive selection (same as main add-trade page)\n  const tradingPairs = {\n    forex: [\n      {\n        pair: 'EUR/USD',\n        name: 'Euro/US Dollar',\n        flag1: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#003399\"/><circle cx=\"15\" cy=\"10\" r=\"6\" fill=\"none\" stroke=\"#FFCC00\" strokeWidth=\"1\"/><g fill=\"#FFCC00\">{[...Array(12)].map((_, i) => <circle key={i} cx={15 + 4.5 * Math.cos(i * Math.PI / 6)} cy={10 + 4.5 * Math.sin(i * Math.PI / 6)} r=\"0.5\"/>)}</g></svg>,\n        flag2: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#B22234\"/>{[...Array(7)].map((_, i) => <rect key={i} y={i*20/13} width=\"30\" height=\"20/13\" fill={i % 2 ? \"#B22234\" : \"white\"}/>)}<rect width=\"12\" height=\"20*7/13\" fill=\"#3C3B6E\"/></svg>,\n        volume: 'Very High',\n        spread: '0.8 pips'\n      },\n      {\n        pair: 'GBP/USD',\n        name: 'British Pound/US Dollar',\n        flag1: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#012169\"/><path d=\"M0,0 L30,20 M30,0 L0,20\" stroke=\"white\" strokeWidth=\"2\"/><path d=\"M0,0 L30,20 M30,0 L0,20\" stroke=\"#C8102E\" strokeWidth=\"1\"/><path d=\"M15,0 L15,20 M0,10 L30,10\" stroke=\"white\" strokeWidth=\"3\"/><path d=\"M15,0 L15,20 M0,10 L30,10\" stroke=\"#C8102E\" strokeWidth=\"2\"/></svg>,\n        flag2: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#B22234\"/>{[...Array(7)].map((_, i) => <rect key={i} y={i*20/13} width=\"30\" height=\"20/13\" fill={i % 2 ? \"#B22234\" : \"white\"}/>)}<rect width=\"12\" height=\"20*7/13\" fill=\"#3C3B6E\"/></svg>,\n        volume: 'Very High',\n        spread: '1.2 pips'\n      },\n      {\n        pair: 'USD/JPY',\n        name: 'US Dollar/Japanese Yen',\n        flag1: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#B22234\"/>{[...Array(7)].map((_, i) => <rect key={i} y={i*20/13} width=\"30\" height=\"20/13\" fill={i % 2 ? \"#B22234\" : \"white\"}/>)}<rect width=\"12\" height=\"20*7/13\" fill=\"#3C3B6E\"/></svg>,\n        flag2: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"white\"/><circle cx=\"15\" cy=\"10\" r=\"6\" fill=\"#BC002D\"/></svg>,\n        volume: 'Very High',\n        spread: '0.9 pips'\n      },\n      {\n        pair: 'USD/CHF',\n        name: 'US Dollar/Swiss Franc',\n        flag1: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#B22234\"/>{[...Array(7)].map((_, i) => <rect key={i} y={i*20/13} width=\"30\" height=\"20/13\" fill={i % 2 ? \"#B22234\" : \"white\"}/>)}<rect width=\"12\" height=\"20*7/13\" fill=\"#3C3B6E\"/></svg>,\n        flag2: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#FF0000\"/><path d=\"M12,6 L18,6 L18,8 L22,8 L22,12 L18,12 L18,14 L12,14 L12,12 L8,12 L8,8 L12,8 Z\" fill=\"white\"/></svg>,\n        volume: 'High',\n        spread: '1.4 pips'\n      },\n      {\n        pair: 'AUD/USD',\n        name: 'Australian Dollar/US Dollar',\n        flag1: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#012169\"/><path d=\"M0,0 L30,20 M30,0 L0,20\" stroke=\"white\" strokeWidth=\"1\"/><rect width=\"15\" height=\"10\" fill=\"#012169\"/><path d=\"M0,0 L15,10 M15,0 L0,10\" stroke=\"white\" strokeWidth=\"1\"/><g fill=\"white\">{[...Array(6)].map((_, i) => <circle key={i} cx={20 + 2*Math.cos(i*Math.PI/3)} cy={4 + 2*Math.sin(i*Math.PI/3)} r=\"0.3\"/>)}</g></svg>,\n        flag2: <svg className=\"w-5 h-3\" viewBox=\"0 0 30 20\"><rect width=\"30\" height=\"20\" fill=\"#B22234\"/>{[...Array(7)].map((_, i) => <rect key={i} y={i*20/13} width=\"30\" height=\"20/13\" fill={i % 2 ? \"#B22234\" : \"white\"}/>)}<rect width=\"12\" height=\"20*7/13\" fill=\"#3C3B6E\"/></svg>,\n        volume: 'High',\n        spread: '1.1 pips'\n      }\n    ],\n    commodities: [\n      {\n        pair: 'XAUUSD',\n        name: 'Gold/US Dollar',\n        icon: <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#FFD700\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\"/></svg>,\n        volume: 'Very High',\n        spread: '$0.5'\n      },\n      {\n        pair: 'XBRUSD',\n        name: 'Brent Oil/US Dollar',\n        icon: <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#2C3E50\"><path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-2 .89-2 2v1h20V8c0-1.11-.89-2-2-2zM2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2v-8H2v8z\"/></svg>,\n        volume: 'Very High',\n        spread: '$0.08'\n      }\n    ],\n    crypto: [\n      {\n        pair: 'BTC/USD',\n        name: 'Bitcoin/US Dollar',\n        icon: <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"#F7931A\"><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.868 8.914c.264-1.76-.922-2.706-2.494-3.339l.51-2.042-1.245-.31-.496 1.988c-.327-.082-.663-.158-1.001-.234l.5-2.003-1.245-.31-.51 2.042c-.271-.061-.537-.123-.796-.187l.002-.006-1.717-.428-.331 1.326s.922.211.902.225c.503.126.594.458.579.722l-.58 2.325c.035.009.08.022.13.042l-.132-.033-.812 3.258c-.062.153-.218.383-.57.296.013.018-.902-.225-.902-.225l-.618 1.421 1.62.404c.302.076.597.154.887.229l-.515 2.067 1.245.31.51-2.043c.338.091.666.175.987.254l-.509 2.035 1.245.31.515-2.066c2.123.402 3.716.24 4.386-1.683.54-1.548-.027-2.44-1.144-3.022.814-.188 1.427-.722 1.59-1.826z\"/></svg>,\n        volume: 'Very High',\n        spread: '$45'\n      }\n    ]\n  };\n\n  // Modal states\n  const [showTradingPairModal, setShowTradingPairModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Auto-population functions\n  const getWeekdayFromDate = (dateString) => {\n    const date = new Date(dateString);\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return weekdays[date.getDay()];\n  };\n\n  const getMonthFromDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n  };\n\n  const getQuarterFromDate = (dateString) => {\n    const date = new Date(dateString);\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    return `Q${quarter} ${date.getFullYear()}`;\n  };\n\n  // Auto-populate date-related fields when dateTime changes\n  useEffect(() => {\n    if (tradeData.dateTime) {\n      const weekday = getWeekdayFromDate(tradeData.dateTime);\n      const month = getMonthFromDate(tradeData.dateTime);\n      const quarter = getQuarterFromDate(tradeData.dateTime);\n\n      setTradeData(prev => ({\n        ...prev,\n        weekday,\n        month,\n        quarter\n      }));\n    }\n  }, [tradeData.dateTime]);\n\n  // Get trading pair details and type (from main add-trade page)\n  const getTradingPairDetails = (pairSymbol) => {\n    for (const [category, pairs] of Object.entries(tradingPairs)) {\n      const pair = pairs.find(p => p.pair === pairSymbol);\n      if (pair) {\n        return { ...pair, category };\n      }\n    }\n    return null;\n  };\n\n  // Calculate pip value based on pair type (from main add-trade page)\n  const calculatePipValue = (pairDetails) => {\n    if (!pairDetails) return 0;\n\n    const { category, pair } = pairDetails;\n\n    switch (category) {\n      case 'forex':\n        if (pair.includes('JPY')) {\n          return 1000; // JPY pairs: 1 pip = 0.01, so 100,000 * 0.01 = $1000 per lot\n        } else {\n          return 10; // Most forex pairs: 1 pip = 0.0001, so 100,000 * 0.0001 = $10 per lot\n        }\n\n      case 'crypto':\n        return 1; // Crypto: varies by exchange, but typically $1 per pip per unit\n\n      case 'stocks':\n        return 1; // Stocks: $1 per share per pip (1 cent movement)\n\n      case 'commodities':\n        if (pair.includes('XAU')) return 100; // Gold: 100 oz contract, $1 per oz per pip\n        if (pair.includes('XAG')) return 50; // Silver: 5000 oz contract, $0.01 per oz per pip = $50\n        if (pair.includes('XTI') || pair.includes('XBR')) return 100; // Oil: 1000 barrels, $0.01 per barrel = $10\n        if (pair.includes('XPT')) return 50; // Platinum: 50 oz contract\n        if (pair.includes('XPD')) return 100; // Palladium: 100 oz contract\n        return 10; // Default\n\n      default:\n        return 10; // Default forex-like calculation\n    }\n  };\n\n  // Calculate pips based on pair type (from main add-trade page)\n  const calculatePips = (pairDetails, price1, price2) => {\n    if (!pairDetails || !price1 || !price2) return 0;\n\n    const { category, pair } = pairDetails;\n    const priceDiff = Math.abs(price1 - price2);\n\n    switch (category) {\n      case 'forex':\n        if (pair.includes('JPY')) {\n          return priceDiff * 100; // JPY pairs: 1 pip = 0.01, so multiply by 100\n        } else {\n          return priceDiff * 10000; // Most forex: 1 pip = 0.0001, so multiply by 10000\n        }\n\n      case 'crypto':\n        return priceDiff; // Crypto: typically 1 pip = $1 price movement for major coins\n\n      case 'stocks':\n        return priceDiff * 100; // Stocks: 1 pip = $0.01, so multiply by 100\n\n      case 'commodities':\n        if (pair.includes('XAU')) return priceDiff * 10; // Gold: 1 pip = $0.10\n        if (pair.includes('XAG')) return priceDiff * 100; // Silver: 1 pip = $0.01\n        if (pair.includes('XTI') || pair.includes('XBR')) return priceDiff * 100; // Oil: 1 pip = $0.01\n        return priceDiff * 100; // Others: 1 pip = $0.01\n\n      default:\n        return priceDiff * 10000; // Default\n    }\n  };\n\n  // Main calculation function (updated for entry, take profit, stop loss)\n  const calculateResults = (data) => {\n    const entryPrice = parseFloat(data.entryPrice) || 0;\n    const takeProfit = parseFloat(data.takeProfit) || 0;\n    const stopLoss = parseFloat(data.stopLoss) || 0;\n    const accountSize = parseFloat(data.accountSize) || 0;\n    const riskPercent = parseFloat(data.riskPercent) || 2;\n\n    if (!accountSize || !entryPrice || !stopLoss || !takeProfit || !data.tradingPair) {\n      return {\n        riskAmount: 0,\n        lotSize: 0,\n        potentialProfit: 0,\n        potentialLoss: 0,\n        profitPips: 0,\n        lossPips: 0,\n        riskRewardRatio: 0\n      };\n    }\n\n    // Get trading pair details\n    const pairDetails = getTradingPairDetails(data.tradingPair);\n    if (!pairDetails) {\n      return {\n        riskAmount: 0,\n        lotSize: 0,\n        potentialProfit: 0,\n        potentialLoss: 0,\n        profitPips: 0,\n        lossPips: 0,\n        riskRewardRatio: 0\n      };\n    }\n\n    const riskAmount = (accountSize * riskPercent) / 100;\n\n    // Calculate pips\n    const lossPips = calculatePips(pairDetails, entryPrice, stopLoss);\n    const profitPips = takeProfit ? calculatePips(pairDetails, entryPrice, takeProfit) : 0;\n\n    // Get pip value per standard lot/contract\n    const pipValuePerLot = calculatePipValue(pairDetails);\n\n    // Calculate lot size: Risk Amount ÷ (Stop Loss Pips × Pip Value per Lot)\n    const lotSize = lossPips > 0 ? riskAmount / (lossPips * pipValuePerLot) : 0;\n\n    // Calculate potential profit/loss\n    const potentialLoss = riskAmount; // This should equal our risk amount\n    const potentialProfit = profitPips * pipValuePerLot * lotSize;\n\n    const riskRewardRatio = potentialProfit > 0 ? potentialProfit / potentialLoss : 0;\n\n    return {\n      riskAmount: parseFloat(riskAmount.toFixed(2)),\n      lotSize: parseFloat(Math.max(0, lotSize).toFixed(4)),\n      potentialProfit: parseFloat(Math.max(0, potentialProfit).toFixed(2)),\n      potentialLoss: parseFloat(potentialLoss.toFixed(2)),\n      profitPips: parseFloat(profitPips.toFixed(1)),\n      lossPips: parseFloat(lossPips.toFixed(1)),\n      riskRewardRatio: parseFloat(riskRewardRatio.toFixed(2))\n    };\n  };\n\n  // Helper functions for generating options\n  const generateMonthOptions = () => {\n    const months = [];\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = currentDate.getMonth();\n\n    // Start from January 2024\n    for (let year = 2024; year <= currentYear; year++) {\n      const endMonth = year === currentYear ? currentMonth : 11;\n      for (let month = 0; month <= endMonth; month++) {\n        const date = new Date(year, month);\n        months.push(date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' }));\n      }\n    }\n    return months;\n  };\n\n  const generateQuarterOptions = () => {\n    const quarters = [];\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentQuarter = Math.ceil((currentDate.getMonth() + 1) / 3);\n\n    for (let year = 2024; year <= currentYear; year++) {\n      const endQuarter = year === currentYear ? currentQuarter : 4;\n      for (let quarter = 1; quarter <= endQuarter; quarter++) {\n        quarters.push(`Q${quarter} ${year}`);\n      }\n    }\n    return quarters;\n  };\n\n  // Helper functions for account tags\n  const getTagColor = (tag) => {\n    const colors = {\n      personal: 'bg-blue-600',\n      business: 'bg-green-600',\n      demo: 'bg-purple-600',\n      forex: 'bg-orange-600',\n      crypto: 'bg-indigo-600'\n    };\n    return colors[tag] || 'bg-gray-600';\n  };\n\n  const getTagDisplayName = (tag) => {\n    const names = {\n      personal: 'Personal',\n      business: 'Business',\n      demo: 'Demo',\n      forex: 'Forex',\n      crypto: 'Crypto'\n    };\n    return names[tag] || 'Personal';\n  };\n\n  const fetchAccounts = async (userData) => {\n    try {\n      const userId = userData?.id || userData?._id;\n      if (!userId) {\n        console.error('User ID not found');\n        return;\n      }\n\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        console.error('Authentication token is missing');\n        return;\n      }\n\n      const response = await fetch(`/api/accounts?userId=${userId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.accounts && Array.isArray(data.accounts)) {\n          setAccounts(data.accounts);\n\n          // Set current account from localStorage or use first account\n          const savedAccountId = localStorage.getItem('currentAccountId');\n          if (savedAccountId && data.accounts.find(acc => String(acc.id || acc._id) === savedAccountId)) {\n            setCurrentAccountId(savedAccountId);\n          } else if (data.accounts.length > 0) {\n            const firstAccountId = data.accounts[0].id || data.accounts[0]._id;\n            setCurrentAccountId(firstAccountId);\n            localStorage.setItem('currentAccountId', String(firstAccountId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  // Form validation\n  const validateField = (name, value) => {\n    const newErrors = { ...errors };\n\n    switch (name) {\n      case 'entryPrice':\n      case 'stopLoss':\n      case 'takeProfit':\n        if (!value) {\n          newErrors[name] = 'This field is required';\n        } else if (isNaN(value) || parseFloat(value) <= 0) {\n          newErrors[name] = 'Must be a positive number';\n        } else {\n          delete newErrors[name];\n        }\n        break;\n      case 'tradingPair':\n        if (!value) {\n          newErrors[name] = 'Trading pair is required';\n        } else {\n          delete newErrors[name];\n        }\n        break;\n      case 'setup':\n      case 'htfFramework':\n        if (!value) {\n          newErrors[name] = 'This field is required';\n        } else {\n          delete newErrors[name];\n        }\n        break;\n      default:\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n\n    if (type === 'checkbox') {\n      setTradeData(prev => ({\n        ...prev,\n        [name]: checked\n      }));\n    } else {\n      // Validate field\n      validateField(name, value);\n\n      setTradeData(prev => {\n        const newData = {\n          ...prev,\n          [name]: value\n        };\n\n        // Auto-detect trading direction based on entry and take profit prices\n        if ((name === 'entryPrice' || name === 'takeProfit') && newData.entryPrice && newData.takeProfit) {\n          const entry = parseFloat(newData.entryPrice);\n          const takeProfit = parseFloat(newData.takeProfit);\n\n          if (entry && takeProfit) {\n            newData.direction = takeProfit > entry ? 'long' : 'short';\n          }\n        }\n\n        // Recalculate results when relevant fields change\n        const results = calculateResults(newData);\n        setCalculatedResults(results);\n\n        return newData;\n      });\n    }\n  };\n\n  // Function to select trading pair\n  const selectTradingPair = (pair) => {\n    const updatedData = { ...tradeData, tradingPair: pair };\n    setTradeData(updatedData);\n    setShowTradingPairModal(false);\n\n    // Recalculate results when trading pair changes\n    const results = calculateResults(updatedData);\n    setCalculatedResults(results);\n  };\n\n  const handleManualDateTimeToggle = (checked) => {\n    setTradeData(prev => ({\n      ...prev,\n      manualDateTime: checked,\n      dateTime: checked ? prev.dateTime : new Date().toISOString().slice(0, 16)\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n\n      // Prepare trade data with calculated metrics for AM trades API\n      const tradePayload = {\n        userId: user?.id || user?._id,\n        accountId: currentAccountId,\n        // Date & Time\n        dateTime: tradeData.dateTime,\n        manualDateTime: tradeData.manualDateTime,\n        weekday: tradeData.weekday,\n        month: tradeData.month,\n        quarter: tradeData.quarter,\n        // Basic Trade Info\n        accountSize: tradeData.accountSize,\n        direction: tradeData.direction,\n        tradingPair: tradeData.tradingPair,\n        strategy: tradeData.strategy,\n        entryPrice: tradeData.entryPrice,\n        takeProfit: tradeData.takeProfit,\n        stopLoss: tradeData.stopLoss,\n        // AM Trade Specific Fields\n        setup: tradeData.setup,\n        htfFramework: tradeData.htfFramework,\n        dailyProfile: tradeData.dailyProfile,\n        entryCandle: tradeData.entryCandle,\n        entryTime: tradeData.entryTime,\n        entryTimeFrame: tradeData.entryTimeFrame,\n        entryConfluence: tradeData.entryConfluence,\n        duration: tradeData.duration,\n        riskPercent: tradeData.riskPercent,\n        plannedRR: tradeData.plannedRR,\n        // Additional fields\n        analysis: tradeData.analysis,\n        notes: tradeData.notes,\n        riskManagementLessons: tradeData.riskManagementLessons,\n        tags: tradeData.tags,\n        screenshot: tradeData.screenshot,\n        // Calculated results\n        calculatedResults: calculatedResults\n      };\n\n      const response = await fetch('/api/am-trades', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(tradePayload)\n      });\n\n      if (response.ok) {\n        // Show success message\n        alert('AM Trade saved successfully!');\n        router.push('/am-trade/journal');\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to create trade:', errorData);\n        alert('Failed to save trade. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error creating trade:', error);\n      alert('Error saving trade. Please check your connection and try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleAccountSwitch = (accountId) => {\n    setCurrentAccountId(accountId);\n    localStorage.setItem('currentAccountId', String(accountId));\n  };\n\n  const handleAddAccount = async () => {\n    if (!newAccount.name || !newAccount.balance) return;\n\n    const userId = user?.id || user?._id;\n    if (!userId) {\n      alert('User not found. Please login again.');\n      return;\n    }\n\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      if (!token) {\n        alert('Authentication token is missing. Please login again.');\n        return;\n      }\n\n      const response = await fetch('/api/accounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: userId,\n          ...newAccount\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const accountData = {\n          id: data.accountId || data._id || Date.now().toString(),\n          ...newAccount,\n          balance: parseFloat(newAccount.balance),\n          color: getTagColor(newAccount.tag),\n          isActive: accounts.length === 0\n        };\n\n        setAccounts([...accounts, accountData]);\n\n        if (accounts.length === 0) {\n          setCurrentAccountId(accountData.id);\n          localStorage.setItem('currentAccountId', accountData.id);\n        }\n\n        setNewAccount({ name: '', balance: '', tag: 'personal' });\n        setShowAddAccountModal(false);\n\n        await fetchAccounts(user);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to create account:', errorData);\n        alert('Failed to create account. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error adding account:', error);\n      alert('Error adding account. Please try again.');\n    }\n  };\n\n  const handleEditAccount = async (accountId, updates) => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      const response = await fetch(`/api/accounts/${accountId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updates)\n      });\n\n      if (response.ok) {\n        const updatedAccount = await response.json();\n        setAccounts(prev => prev.map(acc =>\n          (acc.id === accountId || acc._id === accountId) ? updatedAccount : acc\n        ));\n      }\n    } catch (error) {\n      console.error('Error updating account:', error);\n    }\n  };\n\n  const handleDeleteAccount = async (accountId) => {\n    try {\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\n      const response = await fetch(`/api/accounts/${accountId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        setAccounts(prev => prev.filter(acc => acc.id !== accountId && acc._id !== accountId));\n\n        // If deleted account was current, switch to first available\n        if (String(currentAccountId) === String(accountId)) {\n          const remainingAccounts = accounts.filter(acc => acc.id !== accountId && acc._id !== accountId);\n          if (remainingAccounts.length > 0) {\n            const newCurrentId = remainingAccounts[0].id || remainingAccounts[0]._id;\n            setCurrentAccountId(newCurrentId);\n            localStorage.setItem('currentAccountId', String(newCurrentId));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting account:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear all authentication data (same as dashboard)\n    Cookies.remove('auth-token');\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAMTradeMode');\n    router.push('/login');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-blue-600 border-t-transparent\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 flex\">\n      <Sidebar\n        user={user}\n        currentAccountId={currentAccountId}\n        accounts={accounts}\n        onAccountSwitch={handleAccountSwitch}\n        onAddAccount={() => setShowAddAccountModal(true)}\n        onEditAccount={handleEditAccount}\n        onDeleteAccount={handleDeleteAccount}\n        onLogout={handleLogout}\n        onUpdateUser={(updatedUser) => setUser(updatedUser)}\n      />\n\n      {/* Main Content */}\n      <main className=\"flex-1 lg:ml-64 p-3 sm:p-6 lg:p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-6 sm:mb-8\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-purple-800 bg-clip-text text-transparent\">\n                  Add AM Trade\n                </h1>\n                <p className=\"text-gray-600 mt-1 sm:mt-2 text-sm sm:text-base\">Record your morning trading session</p>\n              </div>\n              <button\n                onClick={() => router.push('/am-trade/overview')}\n                className=\"text-gray-600 hover:text-gray-800 flex items-center space-x-2 px-4 py-2 rounded-xl hover:bg-white/50 transition-all duration-200 self-start sm:self-auto\"\n              >\n                <svg className=\"w-4 h-4 sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                </svg>\n                <span className=\"text-sm sm:text-base\">Back to Overview</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Trade Form */}\n          <div className=\"space-y-6 sm:space-y-8\">\n            <form onSubmit={handleSubmit} className=\"space-y-6 sm:space-y-8\">\n\n              {/* Date & Time Section */}\n              <div className=\"bg-gradient-to-br from-white via-blue-50/50 to-blue-100/30 rounded-2xl sm:rounded-3xl border border-blue-200/60 p-4 sm:p-6 lg:p-8 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-[1.01]\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4 mb-6 sm:mb-8\">\n                  <div className=\"p-2.5 sm:p-3 bg-gradient-to-br from-blue-500 via-blue-600 to-indigo-600 rounded-xl sm:rounded-2xl shadow-lg transform hover:scale-105 transition-transform duration-200\">\n                    <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Date & Time</h3>\n                    <p className=\"text-xs sm:text-sm text-gray-600\">Configure your trading session timing</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6\">\n                  <div>\n                    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-3 gap-2\">\n                      <label className=\"block text-sm font-medium text-gray-700\">\n                        Date & Time\n                      </label>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs sm:text-sm text-gray-500\">Auto-populate</span>\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={tradeData.manualDateTime}\n                            onChange={(e) => handleManualDateTimeToggle(e.target.checked)}\n                            className=\"sr-only peer\"\n                          />\n                          <div className=\"w-10 h-5 sm:w-11 sm:h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 sm:after:h-5 sm:after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                        </label>\n                        <span className=\"text-xs sm:text-sm text-gray-500\">Manual</span>\n                      </div>\n                    </div>\n                    <input\n                      type=\"datetime-local\"\n                      name=\"dateTime\"\n                      value={tradeData.dateTime}\n                      onChange={handleInputChange}\n                      disabled={!tradeData.manualDateTime}\n                      className=\"w-full px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-50 disabled:text-gray-500 transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base\"\n                    />\n                    {!tradeData.manualDateTime && (\n                      <p className=\"text-xs text-blue-600 mt-2 flex items-center\">\n                        <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        Auto-populates weekday, month, and quarter\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Weekday\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"weekday\"\n                        value={tradeData.weekday}\n                        onChange={handleInputChange}\n                        className=\"w-full px-3 py-2.5 sm:px-4 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base\"\n                      >\n                        <option value=\"\">Select weekday</option>\n                        <option value=\"Monday\">Monday</option>\n                        <option value=\"Tuesday\">Tuesday</option>\n                        <option value=\"Wednesday\">Wednesday</option>\n                        <option value=\"Thursday\">Thursday</option>\n                        <option value=\"Friday\">Friday</option>\n                      </select>\n                      <div className=\"absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                    {tradeData.weekday && (\n                      <p className=\"text-xs text-blue-600 mt-2 flex items-center\">\n                        <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        {tradeData.manualDateTime ? 'Manually selected' : 'Auto-populated from date'}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Account & Trade Info Section */}\n              <div className=\"bg-gradient-to-br from-white via-green-50/50 to-emerald-100/30 rounded-2xl sm:rounded-3xl border border-green-200/60 p-4 sm:p-6 lg:p-8 shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-[1.01]\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4 mb-6 sm:mb-8\">\n                  <div className=\"p-2.5 sm:p-3 bg-gradient-to-br from-green-500 via-emerald-600 to-green-600 rounded-xl sm:rounded-2xl shadow-lg transform hover:scale-105 transition-transform duration-200\">\n                    <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Account & Trade Info</h3>\n                    <p className=\"text-xs sm:text-sm text-gray-600\">Set your trade parameters and pricing</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4 sm:gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Account Size\n                    </label>\n                    <div className=\"relative\">\n                      <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-green-500 font-semibold\">$</span>\n                      <input\n                        type=\"number\"\n                        name=\"accountSize\"\n                        value={tradeData.accountSize}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-transparent bg-green-50 transition-all duration-200 shadow-sm\"\n                        readOnly\n                      />\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                        <svg className=\"w-5 h-5 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-green-600 mt-2 flex items-center\">\n                      <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Auto-populated from selected account\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Direction\n                    </label>\n                    <div className=\"relative\">\n                      <div className={`w-full px-4 py-3 border-2 rounded-xl transition-all duration-200 shadow-sm ${\n                        tradeData.direction === 'long'\n                          ? 'border-green-400 bg-green-50'\n                          : tradeData.direction === 'short'\n                          ? 'border-red-400 bg-red-50'\n                          : 'border-gray-300 bg-gray-50'\n                      }`}>\n                        <div className=\"flex items-center justify-center space-x-2\">\n                          {tradeData.direction === 'long' && (\n                            <>\n                              <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\n                              </svg>\n                              <span className=\"font-semibold text-green-700\">LONG</span>\n                            </>\n                          )}\n                          {tradeData.direction === 'short' && (\n                            <>\n                              <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\n                              </svg>\n                              <span className=\"font-semibold text-red-700\">SHORT</span>\n                            </>\n                          )}\n                          {!tradeData.direction && (\n                            <>\n                              <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                              <span className=\"text-gray-500\">Auto-detected</span>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-600 mt-2 flex items-center\">\n                      <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Based on entry vs take profit price\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Entry Price *\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"number\"\n                        step=\"0.00001\"\n                        name=\"entryPrice\"\n                        value={tradeData.entryPrice}\n                        onChange={handleInputChange}\n                        placeholder=\"0.00000\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-blue-300\"\n                        required\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-blue-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                        </svg>\n                      </div>\n                    </div>\n                    {errors.entryPrice && (\n                      <p className=\"text-xs text-red-600 mt-1\">{errors.entryPrice}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Take Profit *\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"number\"\n                        step=\"0.00001\"\n                        name=\"takeProfit\"\n                        value={tradeData.takeProfit}\n                        onChange={handleInputChange}\n                        placeholder=\"0.00000\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-green-300\"\n                        required\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-green-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                    </div>\n                    {errors.takeProfit && (\n                      <p className=\"text-xs text-red-600 mt-1\">{errors.takeProfit}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Stop Loss *\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"number\"\n                        step=\"0.00001\"\n                        name=\"stopLoss\"\n                        value={tradeData.stopLoss}\n                        onChange={handleInputChange}\n                        placeholder=\"0.00000\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-red-300\"\n                        required\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-red-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                        </svg>\n                      </div>\n                    </div>\n                    {errors.stopLoss && (\n                      <p className=\"text-xs text-red-600 mt-1\">{errors.stopLoss}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Market & Time Info Section */}\n              <div className=\"bg-gradient-to-br from-white to-purple-50 rounded-2xl border border-purple-100 p-8 shadow-lg hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className=\"p-3 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl shadow-lg\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">Market & Time Info</h3>\n                    <p className=\"text-sm text-gray-600\">Select your trading market and timeframe</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Month\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"month\"\n                        value={tradeData.month}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-purple-300\"\n                      >\n                        {generateMonthOptions().map(month => (\n                          <option key={month} value={month}>{month}</option>\n                        ))}\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-purple-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Quarter\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"quarter\"\n                        value={tradeData.quarter}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-purple-300\"\n                      >\n                        {generateQuarterOptions().map(quarter => (\n                          <option key={quarter} value={quarter}>{quarter}</option>\n                        ))}\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-purple-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"md:col-span-2 lg:col-span-3\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Trading Pair *\n                    </label>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowTradingPairModal(true)}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white hover:bg-gray-50 transition-all duration-200 shadow-sm hover:shadow-md text-left\"\n                    >\n                      {tradeData.tradingPair ? (\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            {(() => {\n                              const pairDetails = getTradingPairDetails(tradeData.tradingPair);\n                              if (pairDetails) {\n                                if (pairDetails.flag1 && pairDetails.flag2) {\n                                  return (\n                                    <div className=\"flex items-center space-x-1\">\n                                      {pairDetails.flag1}\n                                      {pairDetails.flag2}\n                                    </div>\n                                  );\n                                } else if (pairDetails.icon) {\n                                  return pairDetails.icon;\n                                }\n                              }\n                              return (\n                                <svg className=\"w-6 h-6 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                                </svg>\n                              );\n                            })()}\n                            <div>\n                              <p className=\"font-semibold text-gray-900\">{tradeData.tradingPair}</p>\n                              <p className=\"text-sm text-gray-600\">\n                                {getTradingPairDetails(tradeData.tradingPair)?.name || 'Trading Pair'}\n                              </p>\n                            </div>\n                          </div>\n                          <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                          </svg>\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                            </svg>\n                            <span className=\"text-gray-500\">Select trading pair</span>\n                          </div>\n                          <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                          </svg>\n                        </div>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Trading Setup & Framework Section */}\n              <div className=\"bg-gradient-to-br from-white to-orange-50 rounded-2xl border border-orange-100 p-8 shadow-lg hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className=\"p-3 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl shadow-lg\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">Trading Setup & Framework</h3>\n                    <p className=\"text-sm text-gray-600\">Define your trading strategy and entry criteria</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Setup *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"setup\"\n                        value={tradeData.setup}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select setup</option>\n                        <option value=\"Continuation Day\">Continuation Day</option>\n                        <option value=\"Reversal Day\">Reversal Day</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      HTF Framework *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"htfFramework\"\n                        value={tradeData.htfFramework}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select HTF framework</option>\n                        <option value=\"Manipulation\">Manipulation</option>\n                        <option value=\"Divergence\">Divergence</option>\n                        <option value=\"Opposing Candle\">Opposing Candle</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Daily Profile *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"dailyProfile\"\n                        value={tradeData.dailyProfile}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select daily profile</option>\n                        <option value=\"18:00 Reversal\">18:00 Reversal</option>\n                        <option value=\"01:00 Reversal\">01:00 Reversal</option>\n                        <option value=\"08:00 Reversal\">08:00 Reversal</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364-6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Entry Candle *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"entryCandle\"\n                        value={tradeData.entryCandle}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select entry candle</option>\n                        <option value=\"08:00 Candle\">08:00 Candle</option>\n                        <option value=\"01:00 Candle\">01:00 Candle</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Entry Time *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"entryTime\"\n                        value={tradeData.entryTime}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select entry time</option>\n                        <option value=\"9:30-9:59\">9:30-9:59</option>\n                        <option value=\"7:00-7:59\">7:00-7:59</option>\n                        <option value=\"4:00-4:59\">4:00-4:59</option>\n                        <option value=\"2:00-2:59\">2:00-2:59</option>\n                        <option value=\"8:00-8:29\">8:00-8:29</option>\n                        <option value=\"12:00-12:59\">12:00-12:59</option>\n                        <option value=\"3:00-3:59\">3:00-3:59</option>\n                        <option value=\"6:00-6:59\">6:00-6:59</option>\n                        <option value=\"11:00-11:59\">11:00-11:59</option>\n                        <option value=\"10:00-10:59\">10:00-10:59</option>\n                        <option value=\"5:00-5:59\">5:00-5:59</option>\n                        <option value=\"9:00-9:29\">9:00-9:29</option>\n                        <option value=\"1:00-1:59\">1:00-1:59</option>\n                        <option value=\"14:00-14:59\">14:00-14:59</option>\n                        <option value=\"13:00-13:59\">13:00-13:59</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Entry Time Frame *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"entryTimeFrame\"\n                        value={tradeData.entryTimeFrame}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select time frame</option>\n                        <option value=\"1 minute\">1 minute</option>\n                        <option value=\"< 5 minutes\">&lt; 5 minutes</option>\n                        <option value=\"5 minutes\">5 minutes</option>\n                        <option value=\"15 minutes\">15 minutes</option>\n                        <option value=\"1 hour\">1 hour</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Entry Confluence *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"entryConfluence\"\n                        value={tradeData.entryConfluence}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-orange-300\"\n                        required\n                      >\n                        <option value=\"\">Select confluence</option>\n                        <option value=\"Short-term Swing\">Short-term Swing</option>\n                        <option value=\"Opposing Candle\">Opposing Candle</option>\n                        <option value=\"Volatility Driver\">Volatility Driver</option>\n                        <option value=\"Divergence\">Divergence</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-orange-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Trade Metrics Section */}\n              <div className=\"bg-gradient-to-br from-white to-red-50 rounded-2xl border border-red-100 p-8 shadow-lg hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className=\"p-3 bg-gradient-to-br from-red-500 to-red-600 rounded-xl shadow-lg\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">Trade Metrics</h3>\n                    <p className=\"text-sm text-gray-600\">Configure risk parameters and targets</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Duration\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        name=\"duration\"\n                        value={tradeData.duration}\n                        onChange={handleInputChange}\n                        placeholder=\"e.g. 45 minutes\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-red-300\"\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-red-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Risk % *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"riskPercent\"\n                        value={tradeData.riskPercent}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-red-300\"\n                        required\n                      >\n                        <option value=\"\">Select risk %</option>\n                        <option value=\"0.25%\">0.25% - Conservative</option>\n                        <option value=\"0.5%\">0.5% - Moderate</option>\n                        <option value=\"1%\">1% - Standard</option>\n                        <option value=\"2%\">2% - Aggressive</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-red-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Planned RR *\n                    </label>\n                    <div className=\"relative\">\n                      <select\n                        name=\"plannedRR\"\n                        value={tradeData.plannedRR}\n                        onChange={handleInputChange}\n                        className=\"w-full pl-12 pr-10 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none bg-white transition-all duration-200 shadow-sm hover:shadow-md hover:border-red-300\"\n                        required\n                      >\n                        <option value=\"\">Select RR</option>\n                        <option value=\"2R\">2R - Conservative</option>\n                        <option value=\"3R\">3R - Balanced</option>\n                        <option value=\"4R\">4R - Aggressive</option>\n                        <option value=\"5R\">5R - High Risk</option>\n                      </select>\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-red-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                        </svg>\n                      </div>\n                      <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Strategy & Analysis Section */}\n              <div className=\"bg-gradient-to-br from-white to-indigo-50 rounded-2xl border border-indigo-100 p-8 shadow-lg hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className=\"p-3 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl shadow-lg\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">Strategy & Analysis</h3>\n                    <p className=\"text-sm text-gray-600\">Document your trading strategy and analysis</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Trading Strategy\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        name=\"strategy\"\n                        value={tradeData.strategy}\n                        onChange={handleInputChange}\n                        placeholder=\"e.g., Breakout, Support/Resistance, Trend Following\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-indigo-300\"\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-indigo-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Trade Tags\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"text\"\n                        name=\"tags\"\n                        value={tradeData.tags}\n                        onChange={handleInputChange}\n                        placeholder=\"e.g., scalp, swing, news, breakout\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-indigo-300\"\n                      />\n                      <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-indigo-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Trade Analysis\n                    </label>\n                    <div className=\"relative\">\n                      <textarea\n                        name=\"analysis\"\n                        value={tradeData.analysis}\n                        onChange={handleInputChange}\n                        rows={4}\n                        placeholder=\"Describe your market analysis, key levels, and reasoning for this trade...\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-indigo-300 resize-none\"\n                      />\n                      <div className=\"absolute left-3 top-4 text-indigo-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Auto-Calculated Fields */}\n              <div className=\"bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900 rounded-2xl sm:rounded-3xl border border-blue-200/30 p-4 sm:p-6 lg:p-8 shadow-2xl hover:shadow-3xl transition-all duration-300 transform hover:scale-[1.01]\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4 mb-6 sm:mb-8\">\n                  <div className=\"p-2.5 sm:p-3 bg-gradient-to-br from-yellow-400 via-orange-500 to-red-500 rounded-xl sm:rounded-2xl shadow-lg transform hover:scale-105 transition-transform duration-200\">\n                    <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01m3 0h.01M9 11h.01m3 0h.01m3 0h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-white\">Auto-Calculated Results</h3>\n                    <p className=\"text-xs sm:text-sm text-blue-200\">Real-time calculations based on your inputs</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-7 gap-3 sm:gap-4\">\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-red-200 uppercase tracking-wide mb-1 sm:mb-2\">Risk Amount</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-red-400\">${calculatedResults.riskAmount}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-blue-200 uppercase tracking-wide mb-1 sm:mb-2\">Lot Size</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-white\">{calculatedResults.lotSize}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-green-200 uppercase tracking-wide mb-1 sm:mb-2\">Potential Profit</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400\">${calculatedResults.potentialProfit}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-red-200 uppercase tracking-wide mb-1 sm:mb-2\">Potential Loss</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-red-400\">${calculatedResults.potentialLoss}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-green-200 uppercase tracking-wide mb-1 sm:mb-2\">Profit Pips</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400\">{calculatedResults.profitPips}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-red-200 uppercase tracking-wide mb-1 sm:mb-2\">Loss Pips</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-red-400\">{calculatedResults.lossPips}</p>\n                  </div>\n\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-white/20 hover:bg-white/20 transition-all duration-300 transform hover:scale-105\">\n                    <p className=\"text-xs font-medium text-yellow-200 uppercase tracking-wide mb-1 sm:mb-2\">Risk:Reward</p>\n                    <p className=\"text-lg sm:text-xl lg:text-2xl font-bold text-yellow-400\">1:{calculatedResults.riskRewardRatio}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Notes & Screenshot Section */}\n              <div className=\"bg-gradient-to-br from-white to-gray-50 rounded-2xl border border-gray-200 p-8 shadow-lg hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className=\"p-3 bg-gradient-to-br from-gray-500 to-gray-600 rounded-xl shadow-lg\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-900\">Notes & Screenshot</h3>\n                    <p className=\"text-sm text-gray-600\">Add trade notes and upload opening trade image</p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Trade Notes\n                    </label>\n                    <div className=\"relative\">\n                      <textarea\n                        name=\"notes\"\n                        value={tradeData.notes}\n                        onChange={handleInputChange}\n                        rows={6}\n                        placeholder=\"Add any additional notes about this trade, market conditions, emotions, or lessons learned...\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-gray-400 resize-none\"\n                      />\n                      <div className=\"absolute left-3 top-4 text-gray-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Risk Management Lessons\n                    </label>\n                    <div className=\"relative\">\n                      <textarea\n                        name=\"riskManagementLessons\"\n                        value={tradeData.riskManagementLessons}\n                        onChange={handleInputChange}\n                        rows={6}\n                        placeholder=\"What did you learn about risk management from this trade? Any improvements for next time?\"\n                        className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-all duration-200 shadow-sm hover:shadow-md hover:border-gray-400 resize-none\"\n                      />\n                      <div className=\"absolute left-3 top-4 text-gray-500\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      Opening Trade Image\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type=\"file\"\n                        name=\"screenshot\"\n                        onChange={(e) => {\n                          const file = e.target.files[0];\n                          setTradeData(prev => ({ ...prev, screenshot: file }));\n                        }}\n                        accept=\"image/*\"\n                        className=\"hidden\"\n                        id=\"screenshot-upload\"\n                      />\n                      <label\n                        htmlFor=\"screenshot-upload\"\n                        className=\"w-full flex flex-col items-center justify-center px-6 py-8 border-2 border-gray-300 border-dashed rounded-xl cursor-pointer bg-gray-50 hover:bg-gray-100 transition-all duration-200\"\n                      >\n                        <div className=\"flex flex-col items-center justify-center\">\n                          <svg className=\"w-10 h-10 mb-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                          </svg>\n                          <p className=\"mb-2 text-sm text-gray-500\">\n                            <span className=\"font-semibold\">Click to upload</span> opening trade screenshot\n                          </p>\n                          <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n                          {tradeData.screenshot && (\n                            <p className=\"mt-2 text-sm text-green-600 font-medium\">\n                              ✓ {tradeData.screenshot.name}\n                            </p>\n                          )}\n                        </div>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center justify-end space-y-3 sm:space-y-0 sm:space-x-4 pt-6 sm:pt-8\">\n                <button\n                  type=\"button\"\n                  onClick={() => router.push('/am-trade/overview')}\n                  className=\"px-4 sm:px-6 py-2.5 sm:py-3 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200 font-medium text-sm sm:text-base transform hover:scale-105 active:scale-95\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={submitting || Object.keys(errors).length > 0}\n                  className=\"px-6 sm:px-8 py-2.5 sm:py-3 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:via-purple-700 hover:to-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-medium text-sm sm:text-base shadow-lg hover:shadow-xl transform hover:scale-105 active:scale-95 flex items-center justify-center space-x-2\"\n                >\n                  {submitting ? (\n                    <>\n                      <svg className=\"animate-spin w-4 h-4 sm:w-5 sm:h-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      <span>Saving Trade...</span>\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-4 h-4 sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>Save AM Trade</span>\n                    </>\n                  )}\n                </button>\n                {Object.keys(errors).length > 0 && (\n                  <div className=\"text-xs sm:text-sm text-red-600 mt-2 sm:mt-0 sm:ml-4\">\n                    Please fix {Object.keys(errors).length} error{Object.keys(errors).length > 1 ? 's' : ''} before saving\n                  </div>\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </main>\n\n      {/* Add New Account Modal */}\n      {showAddAccountModal && (\n        <div className=\"fixed inset-0 backdrop-blur-sm bg-gray-900/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-md transform transition-all\">\n            {/* Modal Header */}\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Add New Account</h3>\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"px-6 py-4 space-y-4\">\n              {/* Account Name */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Account Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={newAccount.name}\n                  onChange={(e) => setNewAccount({ ...newAccount, name: e.target.value })}\n                  placeholder=\"e.g., My AM Trading Account\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                />\n              </div>\n\n              {/* Initial Balance */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Initial Balance\n                </label>\n                <div className=\"relative\">\n                  <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\n                  <input\n                    type=\"number\"\n                    value={newAccount.balance}\n                    onChange={(e) => setNewAccount({ ...newAccount, balance: e.target.value })}\n                    placeholder=\"0.00\"\n                    className=\"w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                  />\n                </div>\n              </div>\n\n              {/* Account Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                  Account Type\n                </label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {[\n                    { value: 'personal', label: 'Personal', color: 'bg-blue-600' },\n                    { value: 'business', label: 'Business', color: 'bg-green-600' },\n                    { value: 'demo', label: 'Demo', color: 'bg-purple-600' },\n                    { value: 'forex', label: 'Forex', color: 'bg-orange-600' },\n                    { value: 'crypto', label: 'Crypto', color: 'bg-indigo-600' }\n                  ].map((tag) => (\n                    <button\n                      key={tag.value}\n                      onClick={() => setNewAccount({ ...newAccount, tag: tag.value })}\n                      className={`flex items-center space-x-3 p-3 rounded-lg border-2 transition-all ${\n                        newAccount.tag === tag.value\n                          ? 'border-blue-500 bg-blue-50'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className={`w-4 h-4 rounded-full ${tag.color}`}></div>\n                      <span className=\"font-medium text-gray-900\">{tag.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <p className=\"text-sm font-medium text-gray-700 mb-2\">Preview</p>\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${getTagColor(newAccount.tag)}`}></div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {newAccount.name || 'Account Name'}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      ${newAccount.balance ? parseFloat(newAccount.balance).toLocaleString() : '0.00'} • {getTagDisplayName(newAccount.tag)}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Modal Footer */}\n            <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-xl\">\n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => {\n                    setShowAddAccountModal(false);\n                    setNewAccount({ name: '', balance: '', tag: 'personal' });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleAddAccount}\n                  disabled={!newAccount.name || !newAccount.balance}\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span>Add Account</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Trading Pair Selection Modal */}\n      {showTradingPairModal && (\n        <div className=\"fixed inset-0 backdrop-blur-md bg-gray-900/60 flex items-center justify-center z-50 p-2 sm:p-4\">\n          <div className=\"bg-white rounded-2xl sm:rounded-3xl shadow-2xl w-full max-w-5xl max-h-[95vh] sm:max-h-[90vh] overflow-hidden transform transition-all duration-300 scale-100\">\n            {/* Modal Header */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-gray-200 bg-gradient-to-r from-purple-50 via-blue-50 to-indigo-50\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                <div>\n                  <h3 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Select Trading Pair</h3>\n                  <p className=\"text-xs sm:text-sm text-gray-600\">Choose from forex, commodities, or crypto pairs</p>\n                </div>\n                <button\n                  onClick={() => setShowTradingPairModal(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-white/50 transition-all duration-200 self-end sm:self-auto transform hover:scale-110\"\n                >\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Search Bar */}\n            <div className=\"px-4 sm:px-6 py-3 sm:py-4 border-b border-gray-200 bg-gray-50/50\">\n              <div className=\"relative\">\n                <svg className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 sm:w-5 sm:h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search trading pairs...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-9 sm:pl-10 pr-4 py-2.5 sm:py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 text-sm sm:text-base\"\n                />\n                {searchTerm && (\n                  <button\n                    onClick={() => setSearchTerm('')}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                )}\n              </div>\n            </div>\n\n            {/* Modal Body */}\n            <div className=\"p-3 sm:p-6 overflow-y-auto max-h-[70vh] sm:max-h-[60vh]\">\n              {Object.entries(tradingPairs).map(([category, pairs]) => {\n                const filteredPairs = pairs.filter(pair =>\n                  pair.pair.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                  pair.name.toLowerCase().includes(searchTerm.toLowerCase())\n                );\n\n                if (filteredPairs.length === 0) return null;\n\n                return (\n                  <div key={category} className=\"mb-6 sm:mb-8\">\n                    <h4 className=\"text-base sm:text-lg font-semibold text-gray-900 mb-3 sm:mb-4 capitalize flex items-center\">\n                      <div className=\"w-2 h-2 rounded-full bg-purple-500 mr-2 sm:mr-3\"></div>\n                      {category}\n                    </h4>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2 sm:gap-3\">\n                      {filteredPairs.map((pair) => (\n                        <button\n                          key={pair.pair}\n                          onClick={() => selectTradingPair(pair.pair)}\n                          className=\"p-3 sm:p-4 border border-gray-200 rounded-xl hover:border-purple-300 hover:bg-purple-50 transition-all duration-200 text-left group transform hover:scale-105 active:scale-95\"\n                        >\n                          <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                            {pair.flag1 && pair.flag2 ? (\n                              <div className=\"flex items-center space-x-1\">\n                                <span className=\"text-lg sm:text-xl\">{pair.flag1}</span>\n                                <span className=\"text-lg sm:text-xl\">{pair.flag2}</span>\n                              </div>\n                            ) : pair.icon ? (\n                              <div className=\"w-6 h-6 sm:w-8 sm:h-8 flex-shrink-0\">\n                                {pair.icon}\n                              </div>\n                            ) : (\n                              <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0\">\n                                <svg className=\"w-3 h-3 sm:w-4 sm:h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                                </svg>\n                              </div>\n                            )}\n                            <div className=\"flex-1 min-w-0\">\n                              <p className=\"font-semibold text-sm sm:text-base text-gray-900 group-hover:text-purple-700 truncate\">\n                                {pair.pair}\n                              </p>\n                              <p className=\"text-xs sm:text-sm text-gray-600 truncate\">{pair.name}</p>\n                              {pair.volume && (\n                                <p className=\"text-xs text-gray-500 mt-1 truncate\">\n                                  Volume: {pair.volume}\n                                  {pair.spread && ` • Spread: ${pair.spread}`}\n                                </p>\n                              )}\n                            </div>\n                            <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-400 group-hover:text-purple-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5l7 7-7 7\" />\n                            </svg>\n                          </div>\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}