{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/trading-journal-app/app/journal/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Cookies from 'js-cookie';\r\nimport Sidebar from '../../components/Sidebar';\r\n\r\nexport default function Journal() {\r\n  const router = useRouter();\r\n  const [user, setUser] = useState(null);\r\n  const [trades, setTrades] = useState([]);\r\n  const [filteredTrades, setFilteredTrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('newest');\r\n  const [viewMode, setViewMode] = useState('cards'); // 'cards' or 'list'\r\n  const [selectedTrade, setSelectedTrade] = useState(null);\r\n  const [showTradeModal, setShowTradeModal] = useState(false);\r\n  const [showAddAccountModal, setShowAddAccountModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showStatusModal, setShowStatusModal] = useState(false);\r\n  const [editingTrade, setEditingTrade] = useState(null);\r\n  const [statusTrade, setStatusTrade] = useState(null);\r\n  const [userStrategies, setUserStrategies] = useState([]);\r\n  const [loadingStrategies, setLoadingStrategies] = useState(false);\r\n\r\n  // Sidebar states\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n\r\n  // Authentication\r\n  useEffect(() => {\r\n    const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n    const userData = localStorage.getItem('user');\r\n\r\n    if (!token || !userData) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const parsedUser = JSON.parse(userData);\r\n      setUser(parsedUser);\r\n      // Don't fetch trades here - wait for account to be set\r\n    } catch (error) {\r\n      console.error('Error parsing user data:', error);\r\n      router.push('/login');\r\n    }\r\n  }, [router]);\r\n\r\n  // Fetch accounts and trades when user is set\r\n  useEffect(() => {\r\n    if (user?.id || user?._id) {\r\n      console.log('User loaded, fetching accounts and trades...');\r\n      fetchAccountsAndTrades();\r\n    }\r\n  }, [user]);\r\n\r\n  // Fetch trades when current account changes (but not on initial load)\r\n  useEffect(() => {\r\n    if (user && currentAccountId && accounts.length > 0) {\r\n      console.log('Account changed, fetching trades for account:', currentAccountId);\r\n      setLoading(true);\r\n      fetchTrades(user.id || user._id, currentAccountId);\r\n    }\r\n  }, [currentAccountId]);\r\n\r\n  useEffect(() => {\r\n    filterAndSortTrades();\r\n  }, [trades, filter, searchTerm, sortBy]);\r\n\r\n  // Combined function to fetch accounts and trades\r\n  const fetchAccountsAndTrades = async () => {\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userId = user?.id || user?._id;\r\n\r\n      console.log('Fetching accounts for userId:', userId);\r\n      // First, try to fetch accounts\r\n      const accountsResponse = await fetch(`/api/accounts?userId=${userId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (accountsResponse.ok) {\r\n        const accountsData = await accountsResponse.json();\r\n        console.log('Accounts response:', accountsData);\r\n\r\n        if (accountsData.accounts && accountsData.accounts.length > 0) {\r\n          setAccounts(accountsData.accounts);\r\n          const firstAccountId = accountsData.accounts[0].id || accountsData.accounts[0]._id;\r\n          setCurrentAccountId(firstAccountId);\r\n          console.log('Setting default account:', firstAccountId);\r\n\r\n          // Fetch trades for the first account\r\n          await fetchTrades(userId, firstAccountId);\r\n        } else {\r\n          console.log('No accounts found in response, creating default account and fetching all trades');\r\n          // Create a default account if none exist\r\n          await createDefaultAccount();\r\n          // Fetch all trades without account filter for now\r\n          await fetchTrades(userId, null);\r\n        }\r\n      } else {\r\n        console.log('Failed to fetch accounts (status:', accountsResponse.status, '), creating default and fetching all trades');\r\n        // If accounts API fails, create default account and fetch all trades\r\n        await createDefaultAccount();\r\n        await fetchTrades(userId, null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchAccountsAndTrades:', error);\r\n      // Fallback: fetch all trades without account filter\r\n      const userId = user?.id || user?._id;\r\n      await fetchTrades(userId, null);\r\n    }\r\n  };\r\n\r\n  // Create default account if none exist\r\n  const createDefaultAccount = async () => {\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userId = user?.id || user?._id;\r\n      const response = await fetch('/api/accounts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userId: userId,\r\n          name: 'Main Trading Account',\r\n          balance: 10000,\r\n          tag: 'personal'\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok && result.success) {\r\n        const newAccount = result.account;\r\n        setAccounts([newAccount]);\r\n        setCurrentAccountId(newAccount.id || newAccount._id);\r\n        console.log('Created default account:', newAccount);\r\n      } else {\r\n        console.error('Failed to create default account:', result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating default account:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTrades = async (userId, accountId = null) => {\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      let url = `/api/trades?userId=${userId}`;\r\n      if (accountId) {\r\n        url += `&accountId=${accountId}`;\r\n      }\r\n\r\n      console.log('Fetching trades from:', url);\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Trades response:', data);\r\n\r\n      if (data.trades) {\r\n        setTrades(data.trades);\r\n        console.log('Set trades:', data.trades.length, 'trades');\r\n      } else {\r\n        console.log('No trades in response');\r\n        setTrades([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching trades:', error);\r\n      setTrades([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filterAndSortTrades = () => {\r\n    let filtered = trades;\r\n\r\n    // Apply status filter\r\n    if (filter !== 'all') {\r\n      filtered = filtered.filter(trade => trade.status === filter);\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(trade =>\r\n        trade.tradingPair?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        trade.tags?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        trade.analysis?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply sorting\r\n    filtered = filtered.sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'newest':\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        case 'oldest':\r\n          return new Date(a.createdAt) - new Date(b.createdAt);\r\n        case 'profit':\r\n          return (b.calculations?.potentialProfit || 0) - (a.calculations?.potentialProfit || 0);\r\n        case 'risk':\r\n          return (b.calculations?.riskAmount || 0) - (a.calculations?.riskAmount || 0);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    setFilteredTrades(filtered);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'planning':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'open':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'closed':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getDirectionColor = (direction) => {\r\n    return direction === 'LONG' ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  const getTradeStats = () => {\r\n    // Debug logging\r\n    console.log('=== TRADE STATS DEBUG ===');\r\n    console.log('Current Account ID:', currentAccountId);\r\n    console.log('Total trades in state:', trades.length);\r\n    console.log('All trades:', trades.map(t => ({ id: t._id, pair: t.tradingPair, accountId: t.accountId, status: t.status })));\r\n\r\n    // Filter trades by current account\r\n    const accountTrades = trades.filter(trade => {\r\n      const matches = trade.accountId === currentAccountId ||\r\n                     trade.accountId === currentAccountId?.toString();\r\n      console.log(`Trade ${trade._id} (${trade.tradingPair}): accountId=${trade.accountId}, currentAccountId=${currentAccountId}, matches=${matches}`);\r\n      return matches;\r\n    });\r\n\r\n    console.log('Filtered account trades:', accountTrades.length);\r\n    console.log('Account trades:', accountTrades.map(t => ({ id: t._id, pair: t.tradingPair, status: t.status, actualProfit: t.actualProfit })));\r\n\r\n    // Basic counts\r\n    const total = accountTrades.length;\r\n    const planning = accountTrades.filter(t => t.status === 'planning').length;\r\n    const active = accountTrades.filter(t => t.status === 'active').length;\r\n    const wins = accountTrades.filter(t => t.status === 'win').length;\r\n    const losses = accountTrades.filter(t => t.status === 'loss').length;\r\n    const closed = wins + losses;\r\n\r\n    // Financial calculations\r\n    const totalRisk = accountTrades.reduce((sum, trade) => sum + (trade.calculations?.riskAmount || 0), 0);\r\n    const totalPotentialProfit = accountTrades.reduce((sum, trade) => sum + (trade.calculations?.potentialProfit || 0), 0);\r\n\r\n    // Actual P&L from closed trades\r\n    const actualPL = accountTrades\r\n      .filter(t => t.status === 'win' || t.status === 'loss')\r\n      .reduce((sum, trade) => sum + (trade.actualProfit || trade.calculations?.actualPL || 0), 0);\r\n\r\n    // Win rate calculation\r\n    const winRate = closed > 0 ? (wins / closed) * 100 : 0;\r\n\r\n    // Average win/loss\r\n    const totalWinAmount = accountTrades\r\n      .filter(t => t.status === 'win')\r\n      .reduce((sum, trade) => sum + (trade.actualProfit || trade.calculations?.actualPL || 0), 0);\r\n\r\n    const totalLossAmount = accountTrades\r\n      .filter(t => t.status === 'loss')\r\n      .reduce((sum, trade) => sum + Math.abs(trade.actualProfit || trade.calculations?.actualPL || 0), 0);\r\n\r\n    const avgWin = wins > 0 ? totalWinAmount / wins : 0;\r\n    const avgLoss = losses > 0 ? totalLossAmount / losses : 0;\r\n\r\n    // Profit factor\r\n    const profitFactor = totalLossAmount > 0 ? totalWinAmount / totalLossAmount : totalWinAmount > 0 ? 999 : 0;\r\n\r\n    // Current account info\r\n    const currentAccount = accounts.find(acc => (acc.id || acc._id) === currentAccountId);\r\n    console.log('Current account found:', currentAccount);\r\n    console.log('All accounts:', accounts.map(a => ({ id: a.id || a._id, name: a.name, balance: a.balance })));\r\n\r\n    const accountBalance = currentAccount?.balance || 0;\r\n    const initialBalance = currentAccount?.initialBalance || currentAccount?.balance || 10000;\r\n\r\n    console.log('Account balance:', accountBalance);\r\n    console.log('Initial balance:', initialBalance);\r\n\r\n    // Account growth\r\n    const accountGrowth = initialBalance > 0 ? ((accountBalance - initialBalance) / initialBalance) * 100 : 0;\r\n\r\n    console.log('Calculated stats:', {\r\n      total, planning, active, wins, losses, closed,\r\n      actualPL, winRate: winRate.toFixed(1),\r\n      profitFactor: profitFactor === 999 ? '∞' : profitFactor.toFixed(2),\r\n      accountBalance, accountGrowth: accountGrowth.toFixed(2)\r\n    });\r\n    console.log('=== END TRADE STATS DEBUG ===');\r\n\r\n    return {\r\n      total,\r\n      planning,\r\n      active,\r\n      wins,\r\n      losses,\r\n      closed,\r\n      totalRisk,\r\n      totalPotentialProfit,\r\n      actualPL,\r\n      winRate,\r\n      avgWin,\r\n      avgLoss,\r\n      profitFactor,\r\n      accountBalance,\r\n      accountGrowth,\r\n      accountName: currentAccount?.name || 'Unknown Account'\r\n    };\r\n  };\r\n\r\n  // Sidebar functions\r\n  const handleAccountSwitch = (accountId) => {\r\n    console.log('Switching to account:', accountId);\r\n    setCurrentAccountId(accountId);\r\n  };\r\n\r\n  const handleShowAddAccount = () => {\r\n    setShowAddAccountModal(true);\r\n  };\r\n\r\n  const handleEditAccount = (accountId, updates) => {\r\n    setAccounts(prev => prev.map(acc =>\r\n      (acc.id || acc._id) === accountId ? { ...acc, ...updates } : acc\r\n    ));\r\n  };\r\n\r\n  const handleDeleteAccount = async (accountId) => {\r\n    if (accounts.length <= 1) {\r\n      alert('Cannot delete the last account');\r\n      return;\r\n    }\r\n\r\n    if (!confirm('Are you sure you want to delete this account?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const response = await fetch(`/api/accounts?id=${accountId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        setAccounts(prev => prev.filter(acc => (acc.id || acc._id) !== accountId));\r\n\r\n        // If we deleted the current account, switch to the first remaining account\r\n        if (currentAccountId === accountId) {\r\n          const remainingAccounts = accounts.filter(acc => (acc.id || acc._id) !== accountId);\r\n          if (remainingAccounts.length > 0) {\r\n            setCurrentAccountId(remainingAccounts[0].id || remainingAccounts[0]._id);\r\n          }\r\n        }\r\n      } else {\r\n        alert('Failed to delete account');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting account:', error);\r\n      alert('Error deleting account');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    Cookies.remove('auth-token');\r\n    localStorage.removeItem('auth-token');\r\n    localStorage.removeItem('user');\r\n    router.push('/login');\r\n  };\r\n\r\n  // View trade details\r\n  const viewTradeDetails = (trade) => {\r\n    setSelectedTrade(trade);\r\n    setShowTradeModal(true);\r\n  };\r\n\r\n  // Delete trade\r\n  const deleteTrade = async (tradeId) => {\r\n    if (!confirm('Are you sure you want to delete this trade?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const response = await fetch(`/api/trades?id=${tradeId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok && result.success) {\r\n        // Remove trade from local state\r\n        setTrades(prev => prev.filter(trade => trade._id !== tradeId));\r\n        console.log('Trade deleted successfully');\r\n      } else {\r\n        console.error('Failed to delete trade:', result.message);\r\n        alert('Failed to delete trade: ' + result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting trade:', error);\r\n      alert('Error deleting trade: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Edit trade\r\n  const editTrade = (trade) => {\r\n    setEditingTrade(trade);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // Update trade status\r\n  const updateTradeStatus = (trade) => {\r\n    setStatusTrade(trade);\r\n    setShowStatusModal(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading trades...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const stats = getTradeStats();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex\">\r\n      {/* Shared Sidebar */}\r\n      <Sidebar\r\n        user={user}\r\n        currentAccountId={currentAccountId}\r\n        accounts={accounts}\r\n        onAccountSwitch={handleAccountSwitch}\r\n        onAddAccount={handleShowAddAccount}\r\n        onEditAccount={handleEditAccount}\r\n        onDeleteAccount={handleDeleteAccount}\r\n        onLogout={handleLogout}\r\n        onUpdateUser={(updatedUser) => setUser(updatedUser)}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 flex flex-col ml-64\">\r\n        {/* Modern Professional Header */}\r\n        <header className=\"relative overflow-hidden bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 border-b border-white/20 backdrop-blur-sm px-8 py-8 sticky top-0 z-40\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600/5 to-indigo-600/5\"></div>\r\n          <div className=\"relative flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent\">\r\n                  Trading Journal\r\n                </h1>\r\n                <div className=\"flex items-center space-x-4 mt-2\">\r\n                  <p className=\"text-gray-600 text-base font-medium\">\r\n                    Track and analyze your trading performance\r\n                  </p>\r\n                  {currentAccountId && accounts.length > 0 && (\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"flex items-center space-x-2 px-3 py-1.5 bg-white/70 backdrop-blur-sm rounded-xl border border-white/20 shadow-sm\">\r\n                        <div className=\"w-2.5 h-2.5 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full animate-pulse shadow-sm\"></div>\r\n                        <span className=\"text-sm text-green-700 font-semibold\">\r\n                          {accounts.find(acc => (acc.id || acc._id) === currentAccountId)?.name || 'Unknown Account'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"px-3 py-1.5 bg-white/70 backdrop-blur-sm rounded-xl border border-white/20 shadow-sm\">\r\n                        <span className=\"text-sm text-gray-700 font-semibold\">\r\n                          ${accounts.find(acc => (acc.id || acc._id) === currentAccountId)?.balance?.toFixed(2) || '0.00'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              {/* Modern View Mode Toggle */}\r\n              <div className=\"flex items-center bg-white/70 backdrop-blur-sm rounded-2xl p-1 border border-white/20 shadow-sm\">\r\n                <button\r\n                  onClick={() => setViewMode('cards')}\r\n                  className={`px-4 py-2.5 rounded-xl text-sm font-semibold transition-all duration-200 flex items-center space-x-2 ${\r\n                    viewMode === 'cards'\r\n                      ? 'bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg'\r\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-white/50'\r\n                  }`}\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n                  </svg>\r\n                  <span>Cards</span>\r\n                </button>\r\n                <button\r\n                  onClick={() => setViewMode('list')}\r\n                  className={`px-4 py-2.5 rounded-xl text-sm font-semibold transition-all duration-200 flex items-center space-x-2 ${\r\n                    viewMode === 'list'\r\n                      ? 'bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg'\r\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-white/50'\r\n                  }`}\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 10h16M4 14h16M4 18h16\" />\r\n                  </svg>\r\n                  <span>List</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Enhanced Add Trade Button */}\r\n              <button\r\n                onClick={() => router.push('/add-trade')}\r\n                className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-2xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-200 shadow-lg hover:shadow-xl font-semibold flex items-center space-x-2 transform hover:scale-105\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n                <span>Add Trade</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Main Content Area */}\r\n        <main className=\"flex-1 p-8 overflow-y-auto bg-gray-50\">\r\n          <div className=\"max-w-7xl mx-auto space-y-8\">\r\n            {/* Modern Stats Overview */}\r\n            <div className=\"relative bg-white/80 backdrop-blur-xl rounded-3xl border border-white/20 shadow-xl shadow-blue-500/5 overflow-hidden\">\r\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/50 via-transparent to-indigo-50/30 pointer-events-none\"></div>\r\n              <div className=\"relative p-8 border-b border-gray-100/50 bg-gradient-to-r from-blue-50/50 to-indigo-50/50\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"w-14 h-14 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                    <svg className=\"w-7 h-7 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent\">\r\n                      Performance Overview\r\n                    </h3>\r\n                    <p className=\"text-gray-600 font-medium\">Your trading statistics and analytics at a glance</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"relative p-8\">\r\n                {/* Enhanced Account Summary */}\r\n                <div className=\"mb-8 p-6 bg-gradient-to-br from-blue-50/80 via-indigo-50/60 to-purple-50/40 rounded-2xl border border-blue-200/30 shadow-lg backdrop-blur-sm\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"w-12 h-12 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg\">\r\n                        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16l-3-9m3 9l3-9\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xl font-bold text-gray-900\">{stats.accountName}</h4>\r\n                        <p className=\"text-sm text-gray-600 font-medium\">\r\n                          Current Balance: <span className=\"font-bold text-gray-900\">${stats.accountBalance.toFixed(2)}</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className={`text-3xl font-bold ${stats.accountGrowth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {stats.accountGrowth >= 0 ? '+' : ''}{stats.accountGrowth.toFixed(2)}%\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-500 font-medium\">Account Growth</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Modern Trading Statistics Grid */}\r\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8\">\r\n                  <div className=\"bg-gradient-to-br from-blue-50 to-blue-100/50 rounded-2xl p-5 text-center border border-blue-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Total Trades</h3>\r\n                    <p className=\"text-2xl font-bold text-blue-600\">{stats.total}</p>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-br from-yellow-50 to-yellow-100/50 rounded-2xl p-5 text-center border border-yellow-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m0 0h2a2 2 0 002-2V7a2 2 0 00-2-2H9m0 0V3m0 2v2\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Planning</h3>\r\n                    <p className=\"text-2xl font-bold text-yellow-600\">{stats.planning}</p>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-br from-indigo-50 to-indigo-100/50 rounded-2xl p-5 text-center border border-indigo-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Active</h3>\r\n                    <p className=\"text-2xl font-bold text-indigo-600\">{stats.active}</p>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-br from-green-50 to-green-100/50 rounded-2xl p-5 text-center border border-green-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Wins</h3>\r\n                    <p className=\"text-2xl font-bold text-green-600\">{stats.wins}</p>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-br from-red-50 to-red-100/50 rounded-2xl p-5 text-center border border-red-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Losses</h3>\r\n                    <p className=\"text-2xl font-bold text-red-600\">{stats.losses}</p>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-br from-gray-50 to-gray-100/50 rounded-2xl p-5 text-center border border-gray-200/30 shadow-sm hover:shadow-md transition-all duration-200 group\">\r\n                    <div className=\"w-10 h-10 bg-gradient-to-br from-gray-500 to-gray-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-200\">\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <h3 className=\"text-xs font-bold text-gray-600 uppercase tracking-wide mb-2\">Closed</h3>\r\n                    <p className=\"text-2xl font-bold text-gray-600\">{stats.closed}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Enhanced Performance Metrics */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                  <div className=\"bg-gradient-to-br from-white via-green-50/30 to-emerald-50/20 rounded-2xl p-6 border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300 group\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold text-gray-600 mb-1\">Actual P&L</h3>\r\n                        <p className={`text-3xl font-bold ${stats.actualPL >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                          ${stats.actualPL >= 0 ? '+' : ''}{stats.actualPL.toFixed(2)}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">Realized profit/loss</p>\r\n                      </div>\r\n                      <div className={`w-14 h-14 bg-gradient-to-br from-${stats.actualPL >= 0 ? 'green' : 'red'}-500 to-${stats.actualPL >= 0 ? 'emerald' : 'rose'}-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}>\r\n                        <svg className=\"w-7 h-7 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-gradient-to-br from-white via-blue-50/30 to-indigo-50/20 rounded-2xl p-6 border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300 group\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold text-gray-600 mb-1\">Win Rate</h3>\r\n                        <p className=\"text-3xl font-bold text-blue-600\">{stats.winRate.toFixed(1)}%</p>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">Success percentage</p>\r\n                      </div>\r\n                      <div className=\"w-14 h-14 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n                        <svg className=\"w-7 h-7 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-gradient-to-br from-white via-purple-50/30 to-pink-50/20 rounded-2xl p-6 border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300 group\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold text-gray-600 mb-1\">Profit Factor</h3>\r\n                        <p className=\"text-3xl font-bold text-purple-600\">\r\n                          {stats.profitFactor === 999 ? '∞' : stats.profitFactor.toFixed(2)}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">Profit/loss ratio</p>\r\n                      </div>\r\n                      <div className=\"w-14 h-14 bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n                        <svg className=\"w-7 h-7 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-gradient-to-br from-white via-orange-50/30 to-amber-50/20 rounded-2xl p-6 border border-gray-200/60 shadow-lg hover:shadow-xl transition-all duration-300 group\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold text-gray-600 mb-1\">Total Risk</h3>\r\n                        <p className=\"text-3xl font-bold text-orange-600\">${stats.totalRisk.toFixed(0)}</p>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">Risk exposure</p>\r\n                      </div>\r\n                      <div className=\"w-14 h-14 bg-gradient-to-br from-orange-500 to-amber-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n                        <svg className=\"w-7 h-7 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Additional Metrics */}\r\n                {stats.closed > 0 && (\r\n                  <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"bg-white border border-gray-200 rounded-xl p-4\">\r\n                      <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Average Performance</h4>\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm text-gray-500\">Avg Win:</span>\r\n                          <span className=\"text-sm font-semibold text-green-600\">${stats.avgWin.toFixed(2)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm text-gray-500\">Avg Loss:</span>\r\n                          <span className=\"text-sm font-semibold text-red-600\">${stats.avgLoss.toFixed(2)}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-white border border-gray-200 rounded-xl p-4\">\r\n                      <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Risk Management</h4>\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm text-gray-500\">Potential Profit:</span>\r\n                          <span className=\"text-sm font-semibold text-green-600\">${stats.totalPotentialProfit.toFixed(0)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-sm text-gray-500\">Risk/Reward:</span>\r\n                          <span className=\"text-sm font-semibold text-blue-600\">\r\n                            {stats.totalRisk > 0 ? (stats.totalPotentialProfit / stats.totalRisk).toFixed(2) : '0.00'}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modern Filters and Search */}\r\n            <div className=\"relative bg-white/80 backdrop-blur-xl rounded-3xl border border-white/20 shadow-xl shadow-blue-500/5 overflow-hidden p-6\">\r\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/30 via-transparent to-indigo-50/20 pointer-events-none\"></div>\r\n              <div className=\"relative flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0 md:space-x-6\">\r\n\r\n                {/* Enhanced Search */}\r\n                <div className=\"flex-1 max-w-md\">\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute left-4 top-1/2 transform -translate-y-1/2\">\r\n                      <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      placeholder=\"Search trades by pair, strategy, or notes...\"\r\n                      className=\"w-full pl-12 pr-4 py-4 border border-gray-200/50 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white/70 backdrop-blur-sm shadow-sm placeholder-gray-400 text-gray-900 font-medium\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Enhanced Filters */}\r\n                <div className=\"flex space-x-3\">\r\n                  <div className=\"relative\">\r\n                    <select\r\n                      value={filter}\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                      className=\"px-5 py-4 border border-gray-200/50 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white/70 backdrop-blur-sm transition-all duration-200 shadow-sm font-medium text-gray-900 appearance-none pr-10\"\r\n                    >\r\n                      <option value=\"all\">All Status</option>\r\n                      <option value=\"planning\">Planning</option>\r\n                      <option value=\"open\">Open</option>\r\n                      <option value=\"closed\">Closed</option>\r\n                    </select>\r\n                    <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n                      <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"relative\">\r\n                    <select\r\n                      value={sortBy}\r\n                      onChange={(e) => setSortBy(e.target.value)}\r\n                      className=\"px-5 py-4 border border-gray-200/50 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white/70 backdrop-blur-sm transition-all duration-200 shadow-sm font-medium text-gray-900 appearance-none pr-10\"\r\n                    >\r\n                      <option value=\"newest\">Newest First</option>\r\n                      <option value=\"oldest\">Oldest First</option>\r\n                      <option value=\"profit\">Highest Profit</option>\r\n                      <option value=\"risk\">Highest Risk</option>\r\n                    </select>\r\n                    <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n                      <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            {/* Trades Display */}\r\n            {filteredTrades.length === 0 ? (\r\n              <div className=\"bg-white rounded-2xl border border-gray-100 shadow-sm p-16 text-center\">\r\n                <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                </svg>\r\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No trades found</h3>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  {trades.length === 0\r\n                    ? \"Start building your trading journal by adding your first trade.\"\r\n                    : `${trades.length} trades available, but none match your current filters.`\r\n                  }\r\n                </p>\r\n                <button\r\n                  onClick={() => router.push('/add-trade')}\r\n                  className=\"px-6 py-3 bg-gradient-to-r from-purple-600 to-purple-700 text-white rounded-xl hover:from-purple-700 hover:to-purple-800 transition-all duration-200 shadow-sm font-medium\"\r\n                >\r\n                  Add Your First Trade\r\n                </button>\r\n              </div>\r\n            ) : viewMode === 'cards' ? (\r\n              // Modern Cards View\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {filteredTrades.map((trade) => (\r\n                  <div key={trade._id} className=\"relative bg-white/80 backdrop-blur-xl rounded-3xl border border-white/20 shadow-xl shadow-blue-500/5 overflow-hidden hover:shadow-2xl hover:shadow-blue-500/10 transition-all duration-300 group\">\r\n                    <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/30 via-transparent to-indigo-50/20 pointer-events-none\"></div>\r\n\r\n                    {/* Enhanced Trade Header */}\r\n                    <div className=\"relative p-6 bg-gradient-to-br from-blue-50/50 via-indigo-50/30 to-purple-50/20 border-b border-gray-100/50\">\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className={`w-4 h-4 rounded-full shadow-lg ${trade.direction === 'long' ? 'bg-gradient-to-r from-green-400 to-emerald-500' : 'bg-gradient-to-r from-red-400 to-rose-500'}`}></div>\r\n                          <h3 className=\"text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent\">{trade.tradingPair}</h3>\r\n                        </div>\r\n                        <span className={`px-3 py-1.5 rounded-xl text-sm font-semibold shadow-sm ${getStatusColor(trade.status)}`}>\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <div className={`w-2 h-2 rounded-full ${\r\n                              trade.status === 'planning' ? 'bg-yellow-400' :\r\n                              trade.status === 'open' ? 'bg-blue-400' : 'bg-green-400'\r\n                            }`}></div>\r\n                            <span>{trade.status.charAt(0).toUpperCase() + trade.status.slice(1)}</span>\r\n                          </div>\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className={`w-10 h-10 rounded-xl flex items-center justify-center shadow-lg ${\r\n                            trade.direction === 'long' ? 'bg-gradient-to-br from-green-500 to-emerald-600' : 'bg-gradient-to-br from-red-500 to-rose-600'\r\n                          }`}>\r\n                            <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\r\n                                trade.direction === 'long' ? \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" : \"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"\r\n                              } />\r\n                            </svg>\r\n                          </div>\r\n                          <div>\r\n                            <p className=\"text-sm text-gray-600 font-medium\">Direction</p>\r\n                            <p className={`font-bold text-lg ${getDirectionColor(trade.direction)}`}>\r\n                              {trade.direction?.toUpperCase()}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <p className=\"text-sm text-gray-600 font-medium\">Entry Price</p>\r\n                          <p className=\"font-bold text-lg text-gray-900 font-mono\">{parseFloat(trade.entryPrice).toFixed(5)}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                {/* Trade Details */}\r\n                <div className=\"p-6\">\r\n                  <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Take Profit</p>\r\n                      <p className=\"font-semibold text-green-600\">{parseFloat(trade.takeProfit).toFixed(5)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Stop Loss</p>\r\n                      <p className=\"font-semibold text-red-600\">{parseFloat(trade.stopLoss).toFixed(5)}</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Calculations */}\r\n                  {trade.calculations && (\r\n                    <div className=\"bg-gray-50 rounded-xl p-4 mb-4\">\r\n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\r\n                        <div>\r\n                          <p className=\"text-gray-600\">Risk Amount</p>\r\n                          <p className=\"font-bold text-red-600\">${trade.calculations.riskAmount?.toFixed(2)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-gray-600\">Potential Profit</p>\r\n                          <p className=\"font-bold text-green-600\">${trade.calculations.potentialProfit?.toFixed(2)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-gray-600\">Lot Size</p>\r\n                          <p className=\"font-bold text-blue-600\">{trade.calculations.lotSize?.toFixed(3)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-gray-600\">Risk:Reward</p>\r\n                          <p className=\"font-bold text-purple-600\">1:{trade.calculations.riskRewardRatio?.toFixed(2)}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Tags */}\r\n                  {trade.tags && (\r\n                    <div className=\"mb-4\">\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {trade.tags.split(',').slice(0, 3).map((tag, index) => (\r\n                          <span key={index} className=\"px-2 py-1 bg-purple-100 text-purple-700 text-xs rounded-full\">\r\n                            {tag.trim()}\r\n                          </span>\r\n                        ))}\r\n                        {trade.tags.split(',').length > 3 && (\r\n                          <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\">\r\n                            +{trade.tags.split(',').length - 3} more\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Analysis Preview */}\r\n                  {trade.analysis && (\r\n                    <div className=\"mb-4\">\r\n                      <p className=\"text-sm text-gray-600 mb-2\">Analysis</p>\r\n                      <p className=\"text-sm text-gray-800 line-clamp-3\">\r\n                        {trade.analysis.length > 100 ? trade.analysis.substring(0, 100) + '...' : trade.analysis}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Date */}\r\n                  <div className=\"flex items-center justify-between text-sm text-gray-500 mb-4\">\r\n                    <span>Created: {new Date(trade.createdAt).toLocaleDateString()}</span>\r\n                    <span>{new Date(trade.createdAt).toLocaleTimeString()}</span>\r\n                  </div>\r\n\r\n                    {/* Actions */}\r\n                    <div className=\"flex justify-center space-x-3\">\r\n                      {/* View Icon */}\r\n                      <button\r\n                        onClick={() => viewTradeDetails(trade)}\r\n                        className=\"p-2 text-purple-600 hover:bg-purple-100 rounded-lg transition-colors\"\r\n                        title=\"View Details\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                        </svg>\r\n                      </button>\r\n\r\n                      {/* Edit Icon */}\r\n                      <button\r\n                        onClick={() => editTrade(trade)}\r\n                        className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\r\n                        title=\"Edit Trade\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                        </svg>\r\n                      </button>\r\n\r\n                      {/* Update Status Icon */}\r\n                      <button\r\n                        onClick={() => updateTradeStatus(trade)}\r\n                        className=\"p-2 text-green-600 hover:bg-green-100 rounded-lg transition-colors\"\r\n                        title=\"Update Status\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                        </svg>\r\n                      </button>\r\n\r\n                      {/* Delete Icon */}\r\n                      <button\r\n                        onClick={() => deleteTrade(trade._id)}\r\n                        className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg transition-colors\"\r\n                        title=\"Delete Trade\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          // List View\r\n          <div className=\"bg-white rounded-2xl border border-gray-100 shadow-sm overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50 border-b border-gray-100\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Pair</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Direction</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Entry</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">TP/SL</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Risk</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Profit</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Status</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Date</th>\r\n                    <th className=\"px-6 py-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-100\">\r\n                  {filteredTrades.map((trade) => (\r\n                    <tr key={trade._id} className=\"hover:bg-gray-50 transition-colors\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <div className={`w-2 h-2 rounded-full ${trade.direction === 'long' ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                          <span className=\"font-semibold text-gray-900\">{trade.tradingPair}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`font-medium ${getDirectionColor(trade.direction)}`}>\r\n                          {trade.direction?.toUpperCase()}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-mono\">\r\n                        {parseFloat(trade.entryPrice).toFixed(5)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <div className=\"space-y-1\">\r\n                          <div className=\"text-green-600 font-mono\">{parseFloat(trade.takeProfit).toFixed(5)}</div>\r\n                          <div className=\"text-red-600 font-mono\">{parseFloat(trade.stopLoss).toFixed(5)}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-red-600\">\r\n                        ${trade.calculations?.riskAmount?.toFixed(2) || '0.00'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-green-600\">\r\n                        ${trade.calculations?.potentialProfit?.toFixed(2) || '0.00'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(trade.status)}`}>\r\n                          {trade.status.charAt(0).toUpperCase() + trade.status.slice(1)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {new Date(trade.createdAt).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex space-x-2\">\r\n                          {/* View Icon */}\r\n                          <button\r\n                            onClick={() => viewTradeDetails(trade)}\r\n                            className=\"p-2 text-purple-600 hover:bg-purple-100 rounded-lg transition-colors\"\r\n                            title=\"View Details\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                            </svg>\r\n                          </button>\r\n\r\n                          {/* Edit Icon */}\r\n                          <button\r\n                            onClick={() => editTrade(trade)}\r\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\r\n                            title=\"Edit Trade\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                            </svg>\r\n                          </button>\r\n\r\n                          {/* Update Status Icon */}\r\n                          <button\r\n                            onClick={() => updateTradeStatus(trade)}\r\n                            className=\"p-2 text-green-600 hover:bg-green-100 rounded-lg transition-colors\"\r\n                            title=\"Update Status\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                            </svg>\r\n                          </button>\r\n\r\n                          {/* Delete Icon */}\r\n                          <button\r\n                            onClick={() => deleteTrade(trade._id)}\r\n                            className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg transition-colors\"\r\n                            title=\"Delete Trade\"\r\n                          >\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  </div>\r\n\r\n  {/* Trade Details Modal */}\r\n  {showTradeModal && selectedTrade && (\r\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden shadow-xl\">\r\n        {/* Modal Header */}\r\n        <div className=\"p-6 border-b border-gray-100 bg-gradient-to-r from-purple-50 to-indigo-50\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-purple-600 to-purple-700 rounded-2xl flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Trade Details</h2>\r\n                <p className=\"text-gray-600\">{selectedTrade.tradingPair} - {selectedTrade.direction?.toUpperCase()}</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => setShowTradeModal(false)}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-white rounded-xl transition-all\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n            {/* Trade Information */}\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Trade Setup</h3>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Trading Pair</p>\r\n                    <p className=\"font-semibold text-gray-900\">{selectedTrade.tradingPair}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Direction</p>\r\n                    <p className={`font-semibold ${getDirectionColor(selectedTrade.direction)}`}>\r\n                      {selectedTrade.direction?.toUpperCase()}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Entry Price</p>\r\n                    <p className=\"font-semibold text-gray-900 font-mono\">{parseFloat(selectedTrade.entryPrice).toFixed(5)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Status</p>\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(selectedTrade.status)}`}>\r\n                      {selectedTrade.status.charAt(0).toUpperCase() + selectedTrade.status.slice(1)}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Take Profit</p>\r\n                    <p className=\"font-semibold text-green-600 font-mono\">{parseFloat(selectedTrade.takeProfit).toFixed(5)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-1\">Stop Loss</p>\r\n                    <p className=\"font-semibold text-red-600 font-mono\">{parseFloat(selectedTrade.stopLoss).toFixed(5)}</p>\r\n                  </div>\r\n                  {selectedTrade.strategy && (\r\n                    <div className=\"col-span-2\">\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Strategy</p>\r\n                      <p className=\"font-semibold text-gray-900\">{selectedTrade.strategy}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Risk Management */}\r\n              {selectedTrade.calculations && (\r\n                <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Risk Management</h3>\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Risk Amount</p>\r\n                      <p className=\"font-semibold text-red-600\">${selectedTrade.calculations.riskAmount?.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Potential Profit</p>\r\n                      <p className=\"font-semibold text-green-600\">${selectedTrade.calculations.potentialProfit?.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Lot Size</p>\r\n                      <p className=\"font-semibold text-blue-600\">{selectedTrade.calculations.lotSize?.toFixed(4)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Risk:Reward</p>\r\n                      <p className=\"font-semibold text-purple-600\">1:{selectedTrade.calculations.riskRewardRatio?.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Profit Pips</p>\r\n                      <p className=\"font-semibold text-green-600\">{selectedTrade.calculations.profitPips?.toFixed(1)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Loss Pips</p>\r\n                      <p className=\"font-semibold text-red-600\">{selectedTrade.calculations.lossPips?.toFixed(1)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Analysis and Notes */}\r\n            <div className=\"space-y-6\">\r\n              {selectedTrade.analysis && (\r\n                <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Analysis</h3>\r\n                  <p className=\"text-gray-700 whitespace-pre-wrap\">{selectedTrade.analysis}</p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedTrade.notes && (\r\n                <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Notes</h3>\r\n                  <p className=\"text-gray-700 whitespace-pre-wrap\">{selectedTrade.notes}</p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedTrade.riskManagementLessons && (\r\n                <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Risk Management Lessons</h3>\r\n                  <p className=\"text-gray-700 whitespace-pre-wrap\">{selectedTrade.riskManagementLessons}</p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedTrade.tags && (\r\n                <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Tags</h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {selectedTrade.tags.split(',').map((tag, index) => (\r\n                      <span key={index} className=\"px-3 py-1 bg-purple-100 text-purple-700 text-sm rounded-full\">\r\n                        {tag.trim()}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"bg-gray-50 rounded-xl p-6\">\r\n                <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Trade Timeline</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Created:</span>\r\n                    <span className=\"font-semibold\">{new Date(selectedTrade.createdAt).toLocaleString()}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Last Updated:</span>\r\n                    <span className=\"font-semibold\">{new Date(selectedTrade.updatedAt).toLocaleString()}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n\r\n  {/* Edit Trade Modal */}\r\n  {showEditModal && editingTrade && (\r\n    <EditTradeModal\r\n      trade={editingTrade}\r\n      accounts={accounts}\r\n      onClose={() => {\r\n        setShowEditModal(false);\r\n        setEditingTrade(null);\r\n      }}\r\n      onTradeUpdated={(updatedTrade) => {\r\n        setTrades(prev => prev.map(trade =>\r\n          trade._id === updatedTrade._id ? updatedTrade : trade\r\n        ));\r\n        setShowEditModal(false);\r\n        setEditingTrade(null);\r\n      }}\r\n    />\r\n  )}\r\n\r\n  {/* Status Update Modal */}\r\n  {showStatusModal && statusTrade && (\r\n    <StatusUpdateModal\r\n      trade={statusTrade}\r\n      accounts={accounts}\r\n      onClose={() => {\r\n        setShowStatusModal(false);\r\n        setStatusTrade(null);\r\n      }}\r\n      onStatusUpdated={(updatedTrade, updatedAccount) => {\r\n        setTrades(prev => prev.map(trade =>\r\n          trade._id === updatedTrade._id ? updatedTrade : trade\r\n        ));\r\n        if (updatedAccount) {\r\n          setAccounts(prev => prev.map(acc =>\r\n            acc.id === updatedAccount.id || acc._id === updatedAccount._id\r\n              ? updatedAccount : acc\r\n          ));\r\n        }\r\n        setShowStatusModal(false);\r\n        setStatusTrade(null);\r\n      }}\r\n    />\r\n  )}\r\n\r\n  {/* Add Account Modal */}\r\n  {showAddAccountModal && (\r\n    <AddAccountModal\r\n      onClose={() => setShowAddAccountModal(false)}\r\n      onAccountAdded={(newAccount) => {\r\n        setAccounts(prev => [...prev, newAccount]);\r\n        setShowAddAccountModal(false);\r\n      }}\r\n    />\r\n  )}\r\n</div>\r\n);\r\n}\r\n\r\n// Edit Trade Modal Component\r\nfunction EditTradeModal({ trade, accounts, onClose, onTradeUpdated }) {\r\n  // Debug: Log the trade data to verify strategy is present\r\n  console.log('EditTradeModal - Trade data:', trade);\r\n  console.log('EditTradeModal - Strategy from trade:', trade.strategy);\r\n\r\n  const [formData, setFormData] = useState({\r\n    tradingPair: trade.tradingPair || '',\r\n    entryPrice: trade.entryPrice || '',\r\n    takeProfit: trade.takeProfit || '',\r\n    stopLoss: trade.stopLoss || '',\r\n    direction: trade.direction || 'long',\r\n    strategy: trade.strategy || '',\r\n    analysis: trade.analysis || '',\r\n    notes: trade.notes || '',\r\n    riskManagementLessons: trade.riskManagementLessons || '',\r\n    tags: trade.tags || '',\r\n    riskPerTrade: trade.riskPerTrade || 2,\r\n    accountSize: trade.accountSize || 0,\r\n    status: trade.status || 'planning',\r\n    actualEntry: trade.actualEntry || '',\r\n    actualExit: trade.actualExit || '',\r\n    exitReason: trade.exitReason || '',\r\n    actualProfit: trade.actualProfit || '',\r\n    screenshot: null,\r\n    closingImage: null\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [closingImagePreview, setClosingImagePreview] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('setup');\r\n  const [showStrategyModal, setShowStrategyModal] = useState(false);\r\n  const [userStrategies, setUserStrategies] = useState([]);\r\n  const [loadingStrategies, setLoadingStrategies] = useState(false);\r\n  const [calculatedResults, setCalculatedResults] = useState({\r\n    riskAmount: 0,\r\n    lotSize: 0,\r\n    potentialProfit: 0,\r\n    potentialLoss: 0,\r\n    profitPips: 0,\r\n    lossPips: 0,\r\n    riskRewardRatio: 0\r\n  });\r\n\r\n  // Suggested tags\r\n  const suggestedTags = [\r\n    'scalping', 'swing-trade', 'day-trade', 'breakout', 'trend-following',\r\n    'support-resistance', 'news-trade', 'technical-analysis', 'momentum',\r\n    'reversal', 'continuation', 'pullback', 'bounce', 'channel'\r\n  ];\r\n\r\n  // Trading pairs data (simplified version)\r\n  const tradingPairs = {\r\n    forex: [\r\n      { pair: 'EUR/USD', name: 'Euro/US Dollar' },\r\n      { pair: 'GBP/USD', name: 'British Pound/US Dollar' },\r\n      { pair: 'USD/JPY', name: 'US Dollar/Japanese Yen' },\r\n      { pair: 'USD/CHF', name: 'US Dollar/Swiss Franc' },\r\n      { pair: 'AUD/USD', name: 'Australian Dollar/US Dollar' },\r\n      { pair: 'USD/CAD', name: 'US Dollar/Canadian Dollar' },\r\n      { pair: 'NZD/USD', name: 'New Zealand Dollar/US Dollar' }\r\n    ],\r\n    crypto: [\r\n      { pair: 'BTC/USD', name: 'Bitcoin/US Dollar' },\r\n      { pair: 'ETH/USD', name: 'Ethereum/US Dollar' },\r\n      { pair: 'LTC/USD', name: 'Litecoin/US Dollar' },\r\n      { pair: 'XRP/USD', name: 'Ripple/US Dollar' }\r\n    ],\r\n    commodities: [\r\n      { pair: 'XAUUSD', name: 'Gold/US Dollar' },\r\n      { pair: 'XAGUSD', name: 'Silver/US Dollar' },\r\n      { pair: 'XTIUSD', name: 'Oil/US Dollar' }\r\n    ]\r\n  };\r\n\r\n  // Image upload handlers\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({ ...prev, screenshot: file }));\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => setImagePreview(e.target.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleClosingImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({ ...prev, closingImage: file }));\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => setClosingImagePreview(e.target.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const addTag = (tag) => {\r\n    const currentTags = formData.tags ? formData.tags.split(',').map(t => t.trim()) : [];\r\n    if (!currentTags.includes(tag)) {\r\n      const newTags = [...currentTags, tag].join(', ');\r\n      setFormData(prev => ({ ...prev, tags: newTags }));\r\n    }\r\n  };\r\n\r\n  // Fetch user strategies from database\r\n  const fetchUserStrategiesFromDB = async () => {\r\n    setLoadingStrategies(true);\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userData = localStorage.getItem('user');\r\n\r\n      if (!token || !userData) {\r\n        console.log('No auth token or user data found');\r\n        setUserStrategies([]);\r\n        return;\r\n      }\r\n\r\n      const user = JSON.parse(userData);\r\n      const userId = user?.id || user?._id;\r\n\r\n      if (!userId) {\r\n        console.log('No user ID found');\r\n        setUserStrategies([]);\r\n        return;\r\n      }\r\n\r\n      console.log('Fetching strategies for user:', userId);\r\n\r\n      const response = await fetch(`/api/strategies?userId=${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log('Strategies API response:', result);\r\n\r\n      if (response.ok && result.success) {\r\n        setUserStrategies(result.strategies || []);\r\n        console.log('Strategies loaded successfully:', result.strategies?.length || 0);\r\n      } else {\r\n        console.error('Failed to fetch strategies:', result.message);\r\n        setUserStrategies([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching strategies:', error);\r\n      setUserStrategies([]);\r\n    } finally {\r\n      setLoadingStrategies(false);\r\n    }\r\n  };\r\n\r\n  // Select strategy function\r\n  const selectStrategy = (strategy) => {\r\n    const strategyName = typeof strategy === 'string' ? strategy : strategy.name;\r\n    setFormData(prev => ({ ...prev, strategy: strategyName }));\r\n    setShowStrategyModal(false);\r\n  };\r\n\r\n  // Load strategies when modal opens\r\n  useEffect(() => {\r\n    if (showStrategyModal) {\r\n      fetchUserStrategiesFromDB();\r\n    }\r\n  }, [showStrategyModal]);\r\n\r\n  // Simple calculation function (simplified version from add-trade)\r\n  const calculateResults = (data) => {\r\n    const entryPrice = parseFloat(data.entryPrice) || 0;\r\n    const takeProfit = parseFloat(data.takeProfit) || 0;\r\n    const stopLoss = parseFloat(data.stopLoss) || 0;\r\n    const accountSize = parseFloat(data.accountSize) || 0;\r\n    const riskPercent = parseFloat(data.riskPerTrade) || 2;\r\n\r\n    if (!accountSize || !entryPrice || !stopLoss) {\r\n      return {\r\n        riskAmount: 0,\r\n        lotSize: 0,\r\n        potentialProfit: 0,\r\n        potentialLoss: 0,\r\n        profitPips: 0,\r\n        lossPips: 0,\r\n        riskRewardRatio: 0\r\n      };\r\n    }\r\n\r\n    const riskAmount = (accountSize * riskPercent) / 100;\r\n    const pipValue = 10; // Simplified\r\n    const stopLossPips = Math.abs(entryPrice - stopLoss) * 10000;\r\n    const profitPips = takeProfit ? Math.abs(takeProfit - entryPrice) * 10000 : 0;\r\n    const lotSize = stopLossPips > 0 ? riskAmount / (stopLossPips * pipValue) : 0;\r\n    const potentialProfit = profitPips * pipValue * lotSize;\r\n    const potentialLoss = riskAmount;\r\n    const riskRewardRatio = potentialProfit > 0 ? potentialProfit / potentialLoss : 0;\r\n\r\n    return {\r\n      riskAmount: parseFloat(riskAmount.toFixed(2)),\r\n      lotSize: parseFloat(Math.max(0, lotSize).toFixed(4)),\r\n      potentialProfit: parseFloat(Math.max(0, potentialProfit).toFixed(2)),\r\n      potentialLoss: parseFloat(potentialLoss.toFixed(2)),\r\n      profitPips: parseFloat(profitPips.toFixed(1)),\r\n      lossPips: parseFloat(stopLossPips.toFixed(1)),\r\n      riskRewardRatio: parseFloat(riskRewardRatio.toFixed(2))\r\n    };\r\n  };\r\n\r\n  // Auto-calculate actual P&L based on actual entry and exit prices\r\n  const calculateActualPL = (actualEntry, actualExit, direction, lotSize) => {\r\n    if (!actualEntry || !actualExit || !lotSize) return 0;\r\n\r\n    const entryPrice = parseFloat(actualEntry);\r\n    const exitPrice = parseFloat(actualExit);\r\n    const size = parseFloat(lotSize);\r\n\r\n    if (isNaN(entryPrice) || isNaN(exitPrice) || isNaN(size)) return 0;\r\n\r\n    let priceDifference;\r\n    if (direction === 'long') {\r\n      priceDifference = exitPrice - entryPrice;\r\n    } else {\r\n      priceDifference = entryPrice - exitPrice;\r\n    }\r\n\r\n    // For forex pairs, calculate pip value and P&L\r\n    const pipValue = 10; // Simplified pip value\r\n    const pips = priceDifference * 10000; // Convert to pips\r\n    const actualPL = pips * pipValue * size;\r\n\r\n    return parseFloat(actualPL.toFixed(2));\r\n  };\r\n\r\n  // Update calculations when form data changes\r\n  useEffect(() => {\r\n    const results = calculateResults(formData);\r\n    setCalculatedResults(results);\r\n\r\n    // Auto-calculate actual P&L when actual entry/exit prices change\r\n    if (formData.actualEntry && formData.actualExit) {\r\n      const autoCalculatedPL = calculateActualPL(\r\n        formData.actualEntry,\r\n        formData.actualExit,\r\n        formData.direction,\r\n        results.lotSize\r\n      );\r\n\r\n      // Only update if the calculated value is different from current\r\n      if (autoCalculatedPL !== parseFloat(formData.actualProfit || 0)) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          actualProfit: autoCalculatedPL.toString()\r\n        }));\r\n      }\r\n    }\r\n  }, [formData.actualEntry, formData.actualExit, formData.direction, formData.entryPrice, formData.takeProfit, formData.stopLoss, formData.accountSize, formData.riskPerTrade]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userData = localStorage.getItem('user');\r\n      const user = userData ? JSON.parse(userData) : null;\r\n      const userId = user?.id || user?._id;\r\n\r\n      // Prepare images array\r\n      const images = [];\r\n      if (formData.screenshot) {\r\n        images.push(formData.screenshot);\r\n      } else if (trade.images && trade.images.length > 0) {\r\n        images.push(...trade.images);\r\n      }\r\n\r\n      // Add closing image if provided\r\n      const closingImages = [];\r\n      if (formData.closingImage) {\r\n        closingImages.push(formData.closingImage);\r\n      }\r\n\r\n      const updateData = {\r\n        tradingPair: formData.tradingPair,\r\n        entryPrice: parseFloat(formData.entryPrice) || 0,\r\n        takeProfit: parseFloat(formData.takeProfit) || 0,\r\n        stopLoss: parseFloat(formData.stopLoss) || 0,\r\n        direction: formData.direction,\r\n        strategy: formData.strategy,\r\n        analysis: formData.analysis,\r\n        notes: formData.notes,\r\n        riskManagementLessons: formData.riskManagementLessons,\r\n        tags: formData.tags,\r\n        riskPerTrade: parseFloat(formData.riskPerTrade) || 2,\r\n        accountSize: parseFloat(formData.accountSize) || 0,\r\n        status: formData.status,\r\n        actualEntry: formData.actualEntry ? parseFloat(formData.actualEntry) : null,\r\n        actualExit: formData.actualExit ? parseFloat(formData.actualExit) : null,\r\n        exitReason: formData.exitReason,\r\n        actualProfit: formData.actualProfit ? parseFloat(formData.actualProfit) : null,\r\n        calculations: calculatedResults,\r\n        images: images,\r\n        closingImages: closingImages\r\n      };\r\n\r\n      const response = await fetch('/api/trades', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          tradeId: trade._id,\r\n          userId: userId,\r\n          ...updateData\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok && result.success) {\r\n        onTradeUpdated({ ...trade, ...updateData, updatedAt: new Date() });\r\n      } else {\r\n        alert('Failed to update trade: ' + (result.message || 'Unknown error'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating trade:', error);\r\n      alert('Error updating trade: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-md flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-3xl w-full max-w-7xl h-[95vh] flex flex-col shadow-2xl border border-gray-100\">\r\n        {/* Modern Header */}\r\n        <div className=\"relative p-8 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-3xl font-bold text-gray-900\">Edit Trade</h2>\r\n                <div className=\"flex items-center space-x-4 mt-2\">\r\n                  <span className=\"text-gray-600\">{trade.tradingPair}</span>\r\n                  <span className=\"text-gray-400\">•</span>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    {trade.direction === 'long' ? (\r\n                      <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\r\n                      </svg>\r\n                    )}\r\n                    <span className=\"text-gray-600 font-medium\">{trade.direction?.toUpperCase()}</span>\r\n                  </div>\r\n                  <span className=\"text-gray-400\">•</span>\r\n                  <div className={`flex items-center space-x-1 px-3 py-1 rounded-full text-xs font-medium ${\r\n                    trade.status === 'win' ? 'bg-green-100 text-green-700' :\r\n                    trade.status === 'loss' ? 'bg-red-100 text-red-700' :\r\n                    trade.status === 'active' ? 'bg-blue-100 text-blue-700' :\r\n                    'bg-gray-100 text-gray-700'\r\n                  }`}>\r\n                    {trade.status === 'win' && (\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    )}\r\n                    {trade.status === 'loss' && (\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    )}\r\n                    {trade.status === 'active' && (\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                      </svg>\r\n                    )}\r\n                    {trade.status === 'planning' && (\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                      </svg>\r\n                    )}\r\n                    <span>{trade.status?.charAt(0).toUpperCase() + trade.status?.slice(1)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-3 text-gray-400 hover:text-gray-600 hover:bg-white/80 rounded-2xl transition-all duration-200\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Progress indicator */}\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 to-indigo-600\"></div>\r\n        </div>\r\n\r\n        {/* Modern Tab Navigation */}\r\n        <div className=\"px-8 pt-6 border-b border-gray-200\">\r\n          <nav className=\"flex space-x-8\">\r\n            {[\r\n              {\r\n                id: 'setup',\r\n                name: 'Trade Setup',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                  </svg>\r\n                )\r\n              },\r\n              {\r\n                id: 'execution',\r\n                name: 'Execution',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                  </svg>\r\n                )\r\n              },\r\n              {\r\n                id: 'analysis',\r\n                name: 'Analysis',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                )\r\n              },\r\n              {\r\n                id: 'media',\r\n                name: 'Media',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                  </svg>\r\n                )\r\n              }\r\n            ].map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                type=\"button\"\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-all duration-200 ${\r\n                  activeTab === tab.id\r\n                    ? 'border-blue-500 text-blue-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                {tab.icon}\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"flex-1 flex flex-col min-h-0\">\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <div className=\"p-8\">\r\n\r\n              {/* Tab Content */}\r\n              {activeTab === 'setup' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                    {/* Basic Information */}\r\n                    <div className=\"space-y-6\">\r\n                      <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                        <div className=\"flex items-center space-x-3 mb-6\">\r\n                          <div className=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\r\n                            <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                            </svg>\r\n                          </div>\r\n                          <h3 className=\"text-lg font-semibold text-gray-900\">Basic Information</h3>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Trading Pair</label>\r\n                            <select\r\n                              value={formData.tradingPair}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, tradingPair: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Select Trading Pair</option>\r\n                              <optgroup label=\"Forex\">\r\n                                {tradingPairs.forex.map(pair => (\r\n                                  <option key={pair.pair} value={pair.pair}>{pair.pair} - {pair.name}</option>\r\n                                ))}\r\n                              </optgroup>\r\n                              <optgroup label=\"Crypto\">\r\n                                {tradingPairs.crypto.map(pair => (\r\n                                  <option key={pair.pair} value={pair.pair}>{pair.pair} - {pair.name}</option>\r\n                                ))}\r\n                              </optgroup>\r\n                              <optgroup label=\"Commodities\">\r\n                                {tradingPairs.commodities.map(pair => (\r\n                                  <option key={pair.pair} value={pair.pair}>{pair.pair} - {pair.name}</option>\r\n                                ))}\r\n                              </optgroup>\r\n                            </select>\r\n                          </div>\r\n\r\n                          <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Direction</label>\r\n                              <div className=\"grid grid-cols-2 gap-2\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => setFormData(prev => ({ ...prev, direction: 'long' }))}\r\n                                  className={`px-4 py-3 rounded-xl border-2 font-medium transition-all duration-200 flex items-center justify-center space-x-2 ${\r\n                                    formData.direction === 'long'\r\n                                      ? 'border-green-500 bg-green-50 text-green-700'\r\n                                      : 'border-gray-300 text-gray-600 hover:border-green-300'\r\n                                  }`}\r\n                                >\r\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                                  </svg>\r\n                                  <span>Long</span>\r\n                                </button>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => setFormData(prev => ({ ...prev, direction: 'short' }))}\r\n                                  className={`px-4 py-3 rounded-xl border-2 font-medium transition-all duration-200 flex items-center justify-center space-x-2 ${\r\n                                    formData.direction === 'short'\r\n                                      ? 'border-red-500 bg-red-50 text-red-700'\r\n                                      : 'border-gray-300 text-gray-600 hover:border-red-300'\r\n                                  }`}\r\n                                >\r\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\r\n                                  </svg>\r\n                                  <span>Short</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\r\n                              <select\r\n                                value={formData.status}\r\n                                onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value }))}\r\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\r\n                              >\r\n                                <option value=\"planning\">Planning</option>\r\n                                <option value=\"active\">Active</option>\r\n                              </select>\r\n                              <p className=\"text-xs text-gray-500 mt-2\">\r\n                                Use the status update button in the trade list to mark trades as win/loss\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Strategy</label>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setShowStrategyModal(true)}\r\n                              className=\"w-full p-4 bg-gray-50 hover:bg-gray-100 border border-gray-300 hover:border-purple-300 rounded-xl text-left transition-all duration-200 group\"\r\n                            >\r\n                              {formData.strategy ? (\r\n                                <div className=\"flex items-center space-x-3\">\r\n                                  <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl flex items-center justify-center shadow-sm\">\r\n                                    <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                  <div className=\"flex-1\">\r\n                                    <p className=\"font-semibold text-gray-900\">{formData.strategy}</p>\r\n                                    <p className=\"text-sm text-gray-500\">Selected Strategy (Auto-populated)</p>\r\n                                  </div>\r\n                                  <svg className=\"w-5 h-5 text-gray-400 group-hover:text-purple-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                                  </svg>\r\n                                </div>\r\n                              ) : (\r\n                                <div className=\"flex items-center space-x-3\">\r\n                                  <div className=\"w-10 h-10 bg-gray-200 rounded-xl flex items-center justify-center\">\r\n                                    <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                  <div className=\"flex-1\">\r\n                                    <p className=\"font-semibold text-gray-700\">Select Strategy</p>\r\n                                    <p className=\"text-sm text-gray-500\">Choose from your saved strategies</p>\r\n                                  </div>\r\n                                  <svg className=\"w-5 h-5 text-gray-400 group-hover:text-purple-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                                  </svg>\r\n                                </div>\r\n                              )}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Price Levels */}\r\n                      <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                        <div className=\"flex items-center space-x-3 mb-6\">\r\n                          <div className=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n                            <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\r\n                            </svg>\r\n                          </div>\r\n                          <h3 className=\"text-lg font-semibold text-gray-900\">Price Levels</h3>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Entry Price</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.entryPrice}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, entryPrice: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 font-mono\"\r\n                              required\r\n                              placeholder=\"1.23456\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                <span className=\"flex items-center space-x-2\">\r\n                                  <span className=\"w-3 h-3 bg-green-500 rounded-full\"></span>\r\n                                  <span>Take Profit</span>\r\n                                </span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.00001\"\r\n                                value={formData.takeProfit}\r\n                                onChange={(e) => setFormData(prev => ({ ...prev, takeProfit: e.target.value }))}\r\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200 font-mono\"\r\n                                required\r\n                                placeholder=\"1.25000\"\r\n                              />\r\n                            </div>\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                <span className=\"flex items-center space-x-2\">\r\n                                  <span className=\"w-3 h-3 bg-red-500 rounded-full\"></span>\r\n                                  <span>Stop Loss</span>\r\n                                </span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.00001\"\r\n                                value={formData.stopLoss}\r\n                                onChange={(e) => setFormData(prev => ({ ...prev, stopLoss: e.target.value }))}\r\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-all duration-200 font-mono\"\r\n                                required\r\n                                placeholder=\"1.22000\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Risk Management & Calculations */}\r\n                    <div className=\"space-y-6\">\r\n                      <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                        <div className=\"flex items-center space-x-3 mb-6\">\r\n                          <div className=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n                            <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n                            </svg>\r\n                          </div>\r\n                          <h3 className=\"text-lg font-semibold text-gray-900\">Risk Management</h3>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                          <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Size</label>\r\n                              <div className=\"relative\">\r\n                                <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  step=\"0.01\"\r\n                                  value={formData.accountSize}\r\n                                  onChange={(e) => setFormData(prev => ({ ...prev, accountSize: e.target.value }))}\r\n                                  className=\"w-full pl-8 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200\"\r\n                                  required\r\n                                  placeholder=\"10000\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Risk Percentage</label>\r\n                              <div className=\"relative\">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  step=\"0.1\"\r\n                                  value={formData.riskPerTrade}\r\n                                  onChange={(e) => setFormData(prev => ({ ...prev, riskPerTrade: e.target.value }))}\r\n                                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200\"\r\n                                  required\r\n                                  placeholder=\"2\"\r\n                                />\r\n                                <span className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-500\">%</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Live Calculations */}\r\n                      <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 border border-blue-200 rounded-2xl p-6\">\r\n                        <div className=\"flex items-center space-x-3 mb-6\">\r\n                          <div className=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\r\n                            <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                            </svg>\r\n                          </div>\r\n                          <h3 className=\"text-lg font-semibold text-gray-900\">Live Calculations</h3>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\r\n                            <p className=\"text-sm text-gray-600 mb-1\">Risk Amount</p>\r\n                            <p className=\"text-xl font-bold text-red-600\">${calculatedResults.riskAmount}</p>\r\n                          </div>\r\n                          <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\r\n                            <p className=\"text-sm text-gray-600 mb-1\">Potential Profit</p>\r\n                            <p className=\"text-xl font-bold text-green-600\">${calculatedResults.potentialProfit}</p>\r\n                          </div>\r\n                          <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\r\n                            <p className=\"text-sm text-gray-600 mb-1\">Position Size</p>\r\n                            <p className=\"text-xl font-bold text-blue-600\">{calculatedResults.lotSize}</p>\r\n                          </div>\r\n                          <div className=\"bg-white rounded-xl p-4 border border-blue-200\">\r\n                            <p className=\"text-sm text-gray-600 mb-1\">Risk:Reward</p>\r\n                            <p className=\"text-xl font-bold text-purple-600\">1:{calculatedResults.riskRewardRatio}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Execution Tab */}\r\n              {activeTab === 'execution' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                    {/* Actual Execution */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-orange-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Actual Execution</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Actual Entry</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.actualEntry}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, actualEntry: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200 font-mono\"\r\n                              placeholder=\"Actual entry price\"\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Actual Exit</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.actualExit}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, actualExit: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200 font-mono\"\r\n                              placeholder=\"Actual exit price\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                              <span className=\"flex items-center space-x-2\">\r\n                                <span>Final P&L</span>\r\n                                <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full\">Auto-calculated</span>\r\n                              </span>\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                              <span className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                value={formData.actualProfit}\r\n                                readOnly\r\n                                className={`w-full pl-8 pr-12 py-3 border rounded-xl transition-all duration-200 font-semibold ${\r\n                                  parseFloat(formData.actualProfit || 0) >= 0\r\n                                    ? 'border-green-300 bg-green-50 text-green-700'\r\n                                    : 'border-red-300 bg-red-50 text-red-700'\r\n                                }`}\r\n                                placeholder=\"Auto-calculated from actual prices\"\r\n                              />\r\n                              <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2\">\r\n                                <svg className=\"w-4 h-4 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                                </svg>\r\n                              </div>\r\n                            </div>\r\n                            {formData.actualEntry && formData.actualExit && (\r\n                              <p className=\"text-xs text-gray-500 mt-1\">\r\n                                Calculated from: {formData.actualEntry} → {formData.actualExit} ({formData.direction})\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Reason</label>\r\n                            <select\r\n                              value={formData.exitReason}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, exitReason: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200\"\r\n                            >\r\n                              <option value=\"\">Select reason</option>\r\n                              <option value=\"take-profit\">Take Profit Hit</option>\r\n                              <option value=\"stop-loss\">Stop Loss Hit</option>\r\n                              <option value=\"manual-close\">Manual Close</option>\r\n                              <option value=\"trailing-stop\">Trailing Stop</option>\r\n                              <option value=\"news-event\">News Event</option>\r\n                              <option value=\"time-based\">Time Based</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Performance Metrics */}\r\n                    <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 border border-green-200 rounded-2xl p-6\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Performance Metrics</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"bg-white rounded-xl p-4 border border-green-200\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-sm text-gray-600\">Planned vs Actual</span>\r\n                            <span className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full\">Comparison</span>\r\n                          </div>\r\n                          <div className=\"mt-2 space-y-2\">\r\n                            <div className=\"flex justify-between\">\r\n                              <span className=\"text-sm\">Entry:</span>\r\n                              <span className=\"text-sm font-mono\">\r\n                                {formData.entryPrice} → {formData.actualEntry || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between\">\r\n                              <span className=\"text-sm\">Exit:</span>\r\n                              <span className=\"text-sm font-mono\">\r\n                                {formData.takeProfit} → {formData.actualExit || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between items-center pt-2 border-t border-gray-200\">\r\n                              <span className=\"text-sm font-medium\">P&L:</span>\r\n                              <div className=\"text-right\">\r\n                                <div className=\"text-xs text-gray-500\">Planned: ${calculatedResults.potentialProfit}</div>\r\n                                <div className={`text-sm font-bold ${\r\n                                  parseFloat(formData.actualProfit || 0) >= 0 ? 'text-green-600' : 'text-red-600'\r\n                                }`}>\r\n                                  Actual: ${formData.actualProfit || '0.00'}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Analysis Tab */}\r\n              {activeTab === 'analysis' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 gap-8\">\r\n                    {/* Analysis Section */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-yellow-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Trade Analysis</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-6\">\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Market Analysis</label>\r\n                          <textarea\r\n                            value={formData.analysis}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, analysis: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-all duration-200 resize-none\"\r\n                            rows={5}\r\n                            placeholder=\"Describe your market analysis, setup reasoning, confluence factors, technical indicators used...\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Trade Notes</label>\r\n                          <textarea\r\n                            value={formData.notes}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-all duration-200 resize-none\"\r\n                            rows={4}\r\n                            placeholder=\"Additional observations, market conditions, emotions, execution notes...\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Risk Management Lessons</label>\r\n                          <textarea\r\n                            value={formData.riskManagementLessons}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, riskManagementLessons: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-all duration-200 resize-none\"\r\n                            rows={3}\r\n                            placeholder=\"What did you learn about risk management from this trade? What would you do differently?\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Tags Section */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-indigo-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Trade Tags</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Custom Tags</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formData.tags}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, tags: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\r\n                            placeholder=\"Enter comma-separated tags (e.g., breakout, trend-following, scalping)\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-700 mb-3\">Quick Tags</p>\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {suggestedTags.map((tag) => (\r\n                              <button\r\n                                key={tag}\r\n                                type=\"button\"\r\n                                onClick={() => addTag(tag)}\r\n                                className=\"px-3 py-2 bg-indigo-50 text-indigo-700 text-sm rounded-xl hover:bg-indigo-100 transition-all duration-200 border border-indigo-200 flex items-center space-x-1\"\r\n                              >\r\n                                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\r\n                                </svg>\r\n                                <span>{tag}</span>\r\n                              </button>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Media Tab */}\r\n              {activeTab === 'media' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                    {/* Entry Screenshot */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Entry Screenshot</h3>\r\n                      </div>\r\n\r\n                      <div className=\"border-2 border-dashed border-gray-300 rounded-2xl p-8 text-center hover:border-green-400 hover:bg-green-25 transition-all duration-300 group\">\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={handleImageUpload}\r\n                          className=\"hidden\"\r\n                          id=\"entry-screenshot-upload\"\r\n                        />\r\n                        <label htmlFor=\"entry-screenshot-upload\" className=\"cursor-pointer\">\r\n                          {imagePreview ? (\r\n                            <div className=\"space-y-4\">\r\n                              <img src={imagePreview} alt=\"Entry screenshot\" className=\"max-w-full h-64 object-cover rounded-2xl mx-auto shadow-lg\" />\r\n                              <div className=\"flex items-center justify-center space-x-2 text-green-600 font-semibold\">\r\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                                </svg>\r\n                                <span>Change Entry Image</span>\r\n                              </div>\r\n                            </div>\r\n                          ) : trade.images && trade.images.length > 0 ? (\r\n                            <div className=\"space-y-4\">\r\n                              <div className=\"text-gray-500\">\r\n                                <svg className=\"w-16 h-16 mx-auto mb-4 group-hover:scale-110 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                                </svg>\r\n                                <p className=\"text-sm font-medium\">Existing entry image</p>\r\n                              </div>\r\n                              <div className=\"inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-xl font-semibold hover:bg-green-700 transition-colors\">\r\n                                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                                </svg>\r\n                                Replace Entry Image\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <div className=\"text-gray-400 mb-6\">\r\n                                <svg className=\"w-16 h-16 mx-auto group-hover:scale-110 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                                </svg>\r\n                              </div>\r\n                              <p className=\"text-xl font-bold text-gray-900 mb-2\">Upload Entry Screenshot</p>\r\n                              <p className=\"text-sm text-gray-500 mb-6\">PNG, JPG, GIF up to 10MB</p>\r\n                              <div className=\"inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-xl font-semibold hover:bg-green-700 transition-colors\">\r\n                                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                                </svg>\r\n                                Choose File\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Closing Screenshot */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-red-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Closing Screenshot</h3>\r\n                      </div>\r\n\r\n                      <div className=\"border-2 border-dashed border-gray-300 rounded-2xl p-8 text-center hover:border-red-400 hover:bg-red-25 transition-all duration-300 group\">\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={handleClosingImageUpload}\r\n                          className=\"hidden\"\r\n                          id=\"closing-screenshot-upload\"\r\n                        />\r\n                        <label htmlFor=\"closing-screenshot-upload\" className=\"cursor-pointer\">\r\n                          {closingImagePreview ? (\r\n                            <div className=\"space-y-4\">\r\n                              <img src={closingImagePreview} alt=\"Closing screenshot\" className=\"max-w-full h-64 object-cover rounded-2xl mx-auto shadow-lg\" />\r\n                              <div className=\"flex items-center justify-center space-x-2 text-red-600 font-semibold\">\r\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                                </svg>\r\n                                <span>Change Closing Image</span>\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <div className=\"text-gray-400 mb-6\">\r\n                                <svg className=\"w-16 h-16 mx-auto group-hover:scale-110 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                                </svg>\r\n                              </div>\r\n                              <p className=\"text-xl font-bold text-gray-900 mb-2\">Upload Closing Screenshot</p>\r\n                              <p className=\"text-sm text-gray-500 mb-6\">PNG, JPG, GIF up to 10MB</p>\r\n                              <div className=\"inline-flex items-center px-6 py-3 bg-red-600 text-white rounded-xl font-semibold hover:bg-red-700 transition-colors\">\r\n                                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                                </svg>\r\n                                Choose File\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Modern Footer */}\r\n          <div className=\"bg-white border-t border-gray-200 p-6 mt-8\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                  <span>Last updated: {new Date(trade.updatedAt || trade.createdAt).toLocaleDateString()}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex space-x-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  className=\"px-6 py-3 text-gray-700 bg-gray-100 rounded-xl hover:bg-gray-200 transition-all duration-200 font-medium\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                  className=\"px-8 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-200 font-medium shadow-lg disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                      </svg>\r\n                      <span>Updating...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                      <span>Update Trade</span>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Strategy Selection Modal */}\r\n        {showStrategyModal && (\r\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-[60] p-4\">\r\n            <div className=\"bg-white rounded-2xl w-full max-w-2xl max-h-[80vh] overflow-hidden shadow-xl\">\r\n              {/* Header */}\r\n              <div className=\"p-6 border-b border-gray-100\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Select Strategy</h3>\r\n                    <p className=\"text-sm text-gray-500 mt-1\">Choose from your saved trading strategies</p>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => setShowStrategyModal(false)}\r\n                    className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-all\"\r\n                  >\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Content */}\r\n              <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\r\n                {loadingStrategies ? (\r\n                  <div className=\"flex items-center justify-center py-8\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600\"></div>\r\n                    <span className=\"ml-3 text-gray-600\">Loading strategies...</span>\r\n                  </div>\r\n                ) : userStrategies.length > 0 ? (\r\n                  <div className=\"space-y-2\">\r\n                    {userStrategies.map((strategy) => (\r\n                      <button\r\n                        key={strategy._id || strategy.id}\r\n                        onClick={() => selectStrategy(strategy)}\r\n                        className=\"w-full p-4 text-left border border-gray-100 rounded-xl hover:border-purple-200 hover:bg-purple-50/50 transition-all duration-200 group\"\r\n                      >\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-purple-400 to-purple-600 rounded-xl flex items-center justify-center shadow-sm\">\r\n                              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                              </svg>\r\n                            </div>\r\n                            <div>\r\n                              <p className=\"font-semibold text-gray-900\">{strategy.name}</p>\r\n                              <p className=\"text-sm text-gray-500\">{strategy.description || 'No description'}</p>\r\n                            </div>\r\n                          </div>\r\n                          <svg className=\"w-5 h-5 text-gray-400 group-hover:text-purple-500 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                          </svg>\r\n                        </div>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8\">\r\n                    <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                      <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <p className=\"text-gray-500 mb-4\">No strategies found</p>\r\n                    <p className=\"text-sm text-gray-400\">Create strategies in the add-trade page to see them here</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Enhanced Status Update Modal Component\r\nfunction StatusUpdateModal({ trade, accounts, onClose, onStatusUpdated }) {\r\n  const [selectedStatus, setSelectedStatus] = useState(trade.status === 'win' || trade.status === 'loss' ? trade.status : 'win');\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('status');\r\n\r\n  // Form data for trade modifications\r\n  const [formData, setFormData] = useState({\r\n    actualEntry: trade.actualEntry || trade.entryPrice || '',\r\n    actualExit: trade.actualExit || '',\r\n    stopLoss: trade.stopLoss || '',\r\n    takeProfit: trade.takeProfit || '',\r\n    exitReason: trade.exitReason || '',\r\n    notes: trade.notes || '',\r\n    actualProfit: trade.actualProfit || '',\r\n    exitType: trade.actualExit ? 'price' : 'other', // 'price' or 'other'\r\n    manualPL: trade.actualProfit || '',\r\n    exitDescription: trade.exitDescription || '',\r\n    closingImage: null\r\n  });\r\n\r\n  // Auto-populate execution prices based on status selection and existing data\r\n  const updateExecutionPricesFromStatus = (status) => {\r\n    // Check if current exit price matches either TP or SL (indicating it was auto-filled)\r\n    const isAutoFilled = formData.actualExit === trade.takeProfit || formData.actualExit === trade.stopLoss;\r\n\r\n    // Auto-populate if:\r\n    // 1. No exit data entered yet, OR\r\n    // 2. Current exit price was auto-filled from previous status selection, OR\r\n    // 3. User is switching between win/loss and we have a previous auto-fill\r\n    if ((!formData.actualExit && !formData.manualPL) || isAutoFilled || lastAutoFilledStatus) {\r\n      if (status === 'win' && trade.takeProfit) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          actualExit: trade.takeProfit,\r\n          exitType: 'price'\r\n        }));\r\n        setLastAutoFilledStatus('win');\r\n      } else if (status === 'loss' && trade.stopLoss) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          actualExit: trade.stopLoss,\r\n          exitType: 'price'\r\n        }));\r\n        setLastAutoFilledStatus('loss');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Calculated results\r\n  const [calculatedResults, setCalculatedResults] = useState({\r\n    actualPL: 0,\r\n    pips: 0,\r\n    riskRewardRatio: 0,\r\n    accountImpact: 0\r\n  });\r\n\r\n  // Preview metrics based on status selection\r\n  const [previewMetrics, setPreviewMetrics] = useState({\r\n    previewPL: 0,\r\n    previewPips: 0,\r\n    previewRiskReward: 0,\r\n    previewAccountImpact: 0\r\n  });\r\n\r\n  // Track the last auto-filled status to help with visual indicators\r\n  const [lastAutoFilledStatus, setLastAutoFilledStatus] = useState(null);\r\n\r\n  // Handle closing image upload\r\n  const handleClosingImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n        alert('Image size should be less than 5MB');\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          closingImage: e.target.result\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Remove closing image\r\n  const removeClosingImage = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      closingImage: null\r\n    }));\r\n  };\r\n\r\n  // Get current account\r\n  const currentAccount = accounts.find(acc => acc.id === trade.accountId || acc._id === trade.accountId);\r\n\r\n  // Auto-calculate P&L and metrics\r\n  const calculateMetrics = (data) => {\r\n    const actualEntry = parseFloat(data.actualEntry) || 0;\r\n    const actualExit = parseFloat(data.actualExit) || 0;\r\n    const stopLoss = parseFloat(data.stopLoss) || 0;\r\n    const takeProfit = parseFloat(data.takeProfit) || 0;\r\n    const manualPL = parseFloat(data.manualPL) || 0;\r\n\r\n    // If using manual P&L entry (exitType is 'other')\r\n    if (data.exitType === 'other') {\r\n      const accountBalance = currentAccount?.balance || 10000;\r\n      const accountImpact = manualPL ? (manualPL / accountBalance) * 100 : 0;\r\n\r\n      return {\r\n        actualPL: manualPL,\r\n        pips: 0, // Can't calculate pips without exit price\r\n        riskRewardRatio: 0, // Can't calculate R:R without exit price\r\n        accountImpact: parseFloat(accountImpact.toFixed(2))\r\n      };\r\n    }\r\n\r\n    // Price-based calculation\r\n    if (!actualEntry || !actualExit) {\r\n      return {\r\n        actualPL: 0,\r\n        pips: 0,\r\n        riskRewardRatio: 0,\r\n        accountImpact: 0\r\n      };\r\n    }\r\n\r\n    // Calculate pips\r\n    const pips = Math.abs(actualExit - actualEntry) * 10000;\r\n\r\n    // Calculate P&L based on direction\r\n    let priceDifference;\r\n    if (trade.direction === 'long') {\r\n      priceDifference = actualExit - actualEntry;\r\n    } else {\r\n      priceDifference = actualEntry - actualExit;\r\n    }\r\n\r\n    // Use lot size from trade calculations or default\r\n    const lotSize = trade.calculations?.lotSize || 0.1;\r\n    const pipValue = 10; // Simplified pip value\r\n    const actualPL = (priceDifference * 10000) * pipValue * lotSize;\r\n\r\n    // Calculate risk/reward ratio\r\n    let riskRewardRatio = 0;\r\n    if (stopLoss && takeProfit && actualEntry) {\r\n      const riskPips = Math.abs(actualEntry - stopLoss) * 10000;\r\n      const rewardPips = Math.abs(takeProfit - actualEntry) * 10000;\r\n      riskRewardRatio = rewardPips / riskPips;\r\n    }\r\n\r\n    // Calculate account impact percentage\r\n    const accountBalance = currentAccount?.balance || 10000;\r\n    const accountImpact = (actualPL / accountBalance) * 100;\r\n\r\n    return {\r\n      actualPL: parseFloat(actualPL.toFixed(2)),\r\n      pips: parseFloat(pips.toFixed(1)),\r\n      riskRewardRatio: parseFloat(riskRewardRatio.toFixed(2)),\r\n      accountImpact: parseFloat(accountImpact.toFixed(2))\r\n    };\r\n  };\r\n\r\n  // Calculate preview metrics based on status selection (win/loss)\r\n  const calculatePreviewMetrics = () => {\r\n    if (!selectedStatus || (selectedStatus !== 'win' && selectedStatus !== 'loss')) {\r\n      return {\r\n        previewPL: 0,\r\n        previewPips: 0,\r\n        previewRiskReward: 0,\r\n        previewAccountImpact: 0\r\n      };\r\n    }\r\n\r\n    const entryPrice = parseFloat(trade.entryPrice) || 0;\r\n    const takeProfit = parseFloat(trade.takeProfit) || 0;\r\n    const stopLoss = parseFloat(trade.stopLoss) || 0;\r\n    const lotSize = trade.calculations?.lotSize || 0.1;\r\n    const pipValue = 10;\r\n    const accountBalance = currentAccount?.balance || 10000;\r\n\r\n    if (!entryPrice || !takeProfit || !stopLoss) {\r\n      return {\r\n        previewPL: 0,\r\n        previewPips: 0,\r\n        previewRiskReward: 0,\r\n        previewAccountImpact: 0\r\n      };\r\n    }\r\n\r\n    let exitPrice, pips, priceDifference;\r\n\r\n    if (selectedStatus === 'win') {\r\n      exitPrice = takeProfit;\r\n      pips = Math.abs(takeProfit - entryPrice) * 10000;\r\n      if (trade.direction === 'long') {\r\n        priceDifference = takeProfit - entryPrice;\r\n      } else {\r\n        priceDifference = entryPrice - takeProfit;\r\n      }\r\n    } else { // loss\r\n      exitPrice = stopLoss;\r\n      pips = Math.abs(stopLoss - entryPrice) * 10000;\r\n      if (trade.direction === 'long') {\r\n        priceDifference = stopLoss - entryPrice;\r\n      } else {\r\n        priceDifference = entryPrice - stopLoss;\r\n      }\r\n    }\r\n\r\n    const previewPL = (priceDifference * 10000) * pipValue * lotSize;\r\n    const previewAccountImpact = (previewPL / accountBalance) * 100;\r\n\r\n    // Calculate risk/reward ratio\r\n    const riskPips = Math.abs(entryPrice - stopLoss) * 10000;\r\n    const rewardPips = Math.abs(takeProfit - entryPrice) * 10000;\r\n    const previewRiskReward = rewardPips / riskPips;\r\n\r\n    return {\r\n      previewPL: parseFloat(previewPL.toFixed(2)),\r\n      previewPips: parseFloat(pips.toFixed(1)),\r\n      previewRiskReward: parseFloat(previewRiskReward.toFixed(2)),\r\n      previewAccountImpact: parseFloat(previewAccountImpact.toFixed(2))\r\n    };\r\n  };\r\n\r\n  // Update calculations when form data changes\r\n  useEffect(() => {\r\n    const results = calculateMetrics(formData);\r\n    setCalculatedResults(results);\r\n\r\n    // Auto-update actual profit field only for price-based calculations\r\n    if (formData.exitType === 'price' && results.actualPL !== parseFloat(formData.actualProfit || 0)) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        actualProfit: results.actualPL.toString()\r\n      }));\r\n    } else if (formData.exitType === 'other' && formData.manualPL !== formData.actualProfit) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        actualProfit: formData.manualPL\r\n      }));\r\n    }\r\n  }, [formData.actualEntry, formData.actualExit, formData.stopLoss, formData.takeProfit, formData.exitType, formData.manualPL]);\r\n\r\n  // Update preview metrics when status changes\r\n  useEffect(() => {\r\n    const preview = calculatePreviewMetrics();\r\n    setPreviewMetrics(preview);\r\n  }, [selectedStatus, trade.entryPrice, trade.takeProfit, trade.stopLoss, trade.direction, trade.calculations, currentAccount]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userData = localStorage.getItem('user');\r\n      const user = userData ? JSON.parse(userData) : null;\r\n      const userId = user?.id || user?._id;\r\n\r\n      // Prepare closing images array\r\n      const closingImages = [];\r\n      if (formData.closingImage) {\r\n        closingImages.push(formData.closingImage);\r\n      } else if (trade.closingImages && trade.closingImages.length > 0) {\r\n        closingImages.push(...trade.closingImages);\r\n      }\r\n\r\n      // Prepare update data\r\n      const updateData = {\r\n        status: selectedStatus,\r\n        actualEntry: formData.actualEntry ? parseFloat(formData.actualEntry) : null,\r\n        actualExit: formData.exitType === 'price' && formData.actualExit ? parseFloat(formData.actualExit) : null,\r\n        stopLoss: formData.stopLoss ? parseFloat(formData.stopLoss) : trade.stopLoss,\r\n        takeProfit: formData.takeProfit ? parseFloat(formData.takeProfit) : trade.takeProfit,\r\n        exitReason: formData.exitReason,\r\n        notes: formData.notes,\r\n        actualProfit: calculatedResults.actualPL,\r\n        exitType: formData.exitType,\r\n        exitDescription: formData.exitType === 'other' ? formData.exitDescription : null,\r\n        closingImages: closingImages,\r\n        calculations: {\r\n          ...trade.calculations,\r\n          actualPL: calculatedResults.actualPL,\r\n          pips: calculatedResults.pips,\r\n          riskRewardRatio: calculatedResults.riskRewardRatio,\r\n          accountImpact: calculatedResults.accountImpact\r\n        }\r\n      };\r\n\r\n      // Update trade\r\n      const response = await fetch('/api/trades', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          tradeId: trade._id,\r\n          userId: userId,\r\n          ...updateData\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok && result.success) {\r\n        // Update account balance if there's a P&L impact\r\n        let updatedAccount = null;\r\n        if (calculatedResults.actualPL !== 0 && currentAccount) {\r\n          const newBalance = currentAccount.balance + calculatedResults.actualPL;\r\n\r\n          const accountResponse = await fetch('/api/accounts', {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              accountId: currentAccount.id || currentAccount._id,\r\n              userId: userId,\r\n              updates: { balance: newBalance }\r\n            })\r\n          });\r\n\r\n          if (accountResponse.ok) {\r\n            updatedAccount = { ...currentAccount, balance: newBalance };\r\n          }\r\n        }\r\n\r\n        onStatusUpdated({ ...trade, ...updateData }, updatedAccount);\r\n      } else {\r\n        alert('Failed to update trade status: ' + (result.message || 'Unknown error'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating trade status:', error);\r\n      alert('Error updating trade status: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-md flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-3xl w-full max-w-6xl h-[90vh] flex flex-col shadow-2xl border border-gray-100\">\r\n        {/* Modern Header */}\r\n        <div className=\"relative p-8 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-3xl font-bold text-gray-900\">Update Trade Status</h2>\r\n                <div className=\"flex items-center space-x-4 mt-2\">\r\n                  <span className=\"text-gray-600 font-semibold\">{trade.tradingPair}</span>\r\n                  <span className=\"text-gray-400\">•</span>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    {trade.direction === 'long' ? (\r\n                      <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\r\n                      </svg>\r\n                    )}\r\n                    <span className=\"text-gray-600 font-medium\">{trade.direction?.toUpperCase()}</span>\r\n                  </div>\r\n                  <span className=\"text-gray-400\">•</span>\r\n                  <div className={`flex items-center space-x-1 px-3 py-1 rounded-full text-xs font-medium ${\r\n                    trade.status === 'win' ? 'bg-green-100 text-green-700' :\r\n                    trade.status === 'loss' ? 'bg-red-100 text-red-700' :\r\n                    trade.status === 'active' ? 'bg-blue-100 text-blue-700' :\r\n                    'bg-gray-100 text-gray-700'\r\n                  }`}>\r\n                    <span>Current: {trade.status?.charAt(0).toUpperCase() + trade.status?.slice(1)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-3 text-gray-400 hover:text-gray-600 hover:bg-white/80 rounded-2xl transition-all duration-200\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Progress indicator */}\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-green-500 to-emerald-600\"></div>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"px-8 pt-6 border-b border-gray-200\">\r\n          <nav className=\"flex space-x-8\">\r\n            {[\r\n              {\r\n                id: 'status',\r\n                name: 'Status & Outcome',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                )\r\n              },\r\n              {\r\n                id: 'execution',\r\n                name: 'Execution Details',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                  </svg>\r\n                )\r\n              },\r\n              {\r\n                id: 'analysis',\r\n                name: 'Analysis & Notes',\r\n                icon: (\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                )\r\n              }\r\n            ].map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                type=\"button\"\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-all duration-200 ${\r\n                  activeTab === tab.id\r\n                    ? 'border-green-500 text-green-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                {tab.icon}\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Form Content */}\r\n        <form onSubmit={handleSubmit} className=\"flex-1 flex flex-col min-h-0\">\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <div className=\"p-8\">\r\n\r\n              {/* Status & Outcome Tab */}\r\n              {activeTab === 'status' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n                    {/* Status Selection */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Trade Outcome</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setSelectedStatus('win');\r\n                              updateExecutionPricesFromStatus('win');\r\n                            }}\r\n                            className={`p-6 rounded-2xl border-2 font-medium transition-all duration-200 flex flex-col items-center space-y-3 ${\r\n                              selectedStatus === 'win'\r\n                                ? 'border-green-500 bg-green-50 text-green-700'\r\n                                : 'border-gray-300 text-gray-600 hover:border-green-300 hover:bg-green-50'\r\n                            }`}\r\n                          >\r\n                            <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${\r\n                              selectedStatus === 'win' ? 'bg-green-500' : 'bg-gray-300'\r\n                            }`}>\r\n                              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                              </svg>\r\n                            </div>\r\n                            <span className=\"text-lg font-semibold\">Win</span>\r\n                            <span className=\"text-sm text-center\">Trade was profitable</span>\r\n                          </button>\r\n\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setSelectedStatus('loss');\r\n                              updateExecutionPricesFromStatus('loss');\r\n                            }}\r\n                            className={`p-6 rounded-2xl border-2 font-medium transition-all duration-200 flex flex-col items-center space-y-3 ${\r\n                              selectedStatus === 'loss'\r\n                                ? 'border-red-500 bg-red-50 text-red-700'\r\n                                : 'border-gray-300 text-gray-600 hover:border-red-300 hover:bg-red-50'\r\n                            }`}\r\n                          >\r\n                            <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${\r\n                              selectedStatus === 'loss' ? 'bg-red-500' : 'bg-gray-300'\r\n                            }`}>\r\n                              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                              </svg>\r\n                            </div>\r\n                            <span className=\"text-lg font-semibold\">Loss</span>\r\n                            <span className=\"text-sm text-center\">Trade was not profitable</span>\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Reason</label>\r\n                          <select\r\n                            value={formData.exitReason}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, exitReason: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200\"\r\n                          >\r\n                            <option value=\"\">Select exit reason</option>\r\n                            <option value=\"take-profit-hit\">Take Profit Hit</option>\r\n                            <option value=\"stop-loss-hit\">Stop Loss Hit</option>\r\n                            <option value=\"manual-close\">Manual Close</option>\r\n                            <option value=\"trailing-stop\">Trailing Stop</option>\r\n                            <option value=\"market-close\">Market Close</option>\r\n                            <option value=\"risk-management\">Risk Management</option>\r\n                            <option value=\"strategy-signal\">Strategy Signal</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Calculated Metrics */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Performance Metrics</h3>\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                          <div className=\"text-sm text-gray-600 mb-1\">\r\n                            P&L\r\n                            {calculatedResults.actualPL === 0 && previewMetrics.previewPL !== 0 && (\r\n                              <span className=\"ml-1 text-xs text-blue-600\">(Preview)</span>\r\n                            )}\r\n                          </div>\r\n                          <div className={`text-2xl font-bold ${\r\n                            (calculatedResults.actualPL !== 0 ? calculatedResults.actualPL : previewMetrics.previewPL) >= 0 ? 'text-green-600' : 'text-red-600'\r\n                          }`}>\r\n                            ${(calculatedResults.actualPL !== 0 ? calculatedResults.actualPL : previewMetrics.previewPL) >= 0 ? '+' : ''}${calculatedResults.actualPL !== 0 ? calculatedResults.actualPL : previewMetrics.previewPL}\r\n                          </div>\r\n                          {calculatedResults.actualPL === 0 && previewMetrics.previewPL !== 0 && (\r\n                            <div className=\"text-xs text-blue-500 mt-1\">\r\n                              Based on {selectedStatus === 'win' ? 'take profit' : 'stop loss'}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                          <div className=\"text-sm text-gray-600 mb-1\">\r\n                            Pips\r\n                            {calculatedResults.pips === 0 && previewMetrics.previewPips !== 0 && (\r\n                              <span className=\"ml-1 text-xs text-blue-600\">(Preview)</span>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-gray-900\">\r\n                            {formData.exitType === 'price' ? calculatedResults.pips :\r\n                             (calculatedResults.pips === 0 && previewMetrics.previewPips !== 0 ? previewMetrics.previewPips : 'N/A')}\r\n                          </div>\r\n                          {formData.exitType === 'other' && calculatedResults.pips === 0 && previewMetrics.previewPips === 0 && (\r\n                            <div className=\"text-xs text-gray-500 mt-1\">Requires exit price</div>\r\n                          )}\r\n                          {calculatedResults.pips === 0 && previewMetrics.previewPips !== 0 && formData.exitType !== 'other' && (\r\n                            <div className=\"text-xs text-blue-500 mt-1\">\r\n                              Based on {selectedStatus === 'win' ? 'TP' : 'SL'}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                          <div className=\"text-sm text-gray-600 mb-1\">\r\n                            R:R Ratio\r\n                            {calculatedResults.riskRewardRatio === 0 && previewMetrics.previewRiskReward !== 0 && (\r\n                              <span className=\"ml-1 text-xs text-blue-600\">(Preview)</span>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-gray-900\">\r\n                            {formData.exitType === 'price' && calculatedResults.riskRewardRatio > 0\r\n                              ? `1:${calculatedResults.riskRewardRatio}`\r\n                              : (calculatedResults.riskRewardRatio === 0 && previewMetrics.previewRiskReward > 0\r\n                                  ? `1:${previewMetrics.previewRiskReward}`\r\n                                  : 'N/A')\r\n                            }\r\n                          </div>\r\n                          {formData.exitType === 'other' && calculatedResults.riskRewardRatio === 0 && previewMetrics.previewRiskReward === 0 && (\r\n                            <div className=\"text-xs text-gray-500 mt-1\">Requires exit price</div>\r\n                          )}\r\n                          {calculatedResults.riskRewardRatio === 0 && previewMetrics.previewRiskReward !== 0 && formData.exitType !== 'other' && (\r\n                            <div className=\"text-xs text-blue-500 mt-1\">Based on planned levels</div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                          <div className=\"text-sm text-gray-600 mb-1\">\r\n                            Account Impact\r\n                            {calculatedResults.accountImpact === 0 && previewMetrics.previewAccountImpact !== 0 && (\r\n                              <span className=\"ml-1 text-xs text-blue-600\">(Preview)</span>\r\n                            )}\r\n                          </div>\r\n                          <div className={`text-2xl font-bold ${\r\n                            (calculatedResults.accountImpact !== 0 ? calculatedResults.accountImpact : previewMetrics.previewAccountImpact) >= 0 ? 'text-green-600' : 'text-red-600'\r\n                          }`}>\r\n                            {(calculatedResults.accountImpact !== 0 ? calculatedResults.accountImpact : previewMetrics.previewAccountImpact) >= 0 ? '+' : ''}{calculatedResults.accountImpact !== 0 ? calculatedResults.accountImpact : previewMetrics.previewAccountImpact}%\r\n                          </div>\r\n                          {calculatedResults.accountImpact === 0 && previewMetrics.previewAccountImpact !== 0 && (\r\n                            <div className=\"text-xs text-blue-500 mt-1\">\r\n                              Based on {selectedStatus === 'win' ? 'take profit' : 'stop loss'}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {currentAccount && (\r\n                        <div className=\"mt-4 p-4 bg-blue-50 rounded-xl\">\r\n                          <div className=\"text-sm text-blue-700 mb-1\">\r\n                            Account: {currentAccount.name}\r\n                            {calculatedResults.actualPL === 0 && previewMetrics.previewPL !== 0 && (\r\n                              <span className=\"ml-1 text-xs\">(Preview)</span>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-lg font-semibold text-blue-900\">\r\n                            New Balance: ${(currentAccount.balance + (calculatedResults.actualPL !== 0 ? calculatedResults.actualPL : previewMetrics.previewPL)).toFixed(2)}\r\n                          </div>\r\n                          {calculatedResults.actualPL === 0 && previewMetrics.previewPL !== 0 && (\r\n                            <div className=\"text-xs text-blue-600 mt-1\">\r\n                              Expected if {selectedStatus === 'win' ? 'take profit hits' : 'stop loss hits'}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Execution Details Tab */}\r\n              {activeTab === 'execution' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n                    {/* Price Levels */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Execution Prices</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        {/* Exit Type Selection */}\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-3\">Exit Information Type</label>\r\n                          <div className=\"grid grid-cols-2 gap-4\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setFormData(prev => ({ ...prev, exitType: 'price' }))}\r\n                              className={`p-4 rounded-xl border-2 font-medium transition-all duration-200 flex flex-col items-center space-y-2 ${\r\n                                formData.exitType === 'price'\r\n                                  ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                                  : 'border-gray-300 text-gray-600 hover:border-blue-300 hover:bg-blue-50'\r\n                              }`}\r\n                            >\r\n                              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\r\n                              </svg>\r\n                              <span className=\"text-sm font-semibold\">Use Exit Price</span>\r\n                              <span className=\"text-xs text-center\">Enter actual exit price for automatic P&L calculation</span>\r\n                            </button>\r\n\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setFormData(prev => ({ ...prev, exitType: 'other' }))}\r\n                              className={`p-4 rounded-xl border-2 font-medium transition-all duration-200 flex flex-col items-center space-y-2 ${\r\n                                formData.exitType === 'other'\r\n                                  ? 'border-purple-500 bg-purple-50 text-purple-700'\r\n                                  : 'border-gray-300 text-gray-600 hover:border-purple-300 hover:bg-purple-50'\r\n                              }`}\r\n                            >\r\n                              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\r\n                              </svg>\r\n                              <span className=\"text-sm font-semibold\">Manual P&L</span>\r\n                              <span className=\"text-xs text-center\">Enter P&L manually without exit price</span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Entry Price */}\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            <span className=\"flex items-center space-x-2\">\r\n                              <span className=\"w-3 h-3 bg-blue-500 rounded-full\"></span>\r\n                              <span>Actual Entry</span>\r\n                              {formData.actualEntry === trade.entryPrice && (\r\n                                <span className=\"text-xs text-blue-600 bg-blue-100 px-2 py-1 rounded-full\">Auto-filled</span>\r\n                              )}\r\n                            </span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            step=\"0.00001\"\r\n                            value={formData.actualEntry}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, actualEntry: e.target.value }))}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 font-mono\"\r\n                            placeholder={trade.entryPrice || \"1.23456\"}\r\n                          />\r\n                          <div className=\"flex items-center justify-between mt-1\">\r\n                            <p className=\"text-xs text-gray-500\">Planned: {trade.entryPrice}</p>\r\n                            {formData.actualEntry !== trade.entryPrice && trade.entryPrice && (\r\n                              <button\r\n                                type=\"button\"\r\n                                onClick={() => setFormData(prev => ({ ...prev, actualEntry: trade.entryPrice }))}\r\n                                className=\"text-xs text-blue-600 hover:text-blue-800 underline\"\r\n                              >\r\n                                Use planned price\r\n                              </button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Conditional Fields Based on Exit Type */}\r\n                        {formData.exitType === 'price' ? (\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                              <span className=\"flex items-center space-x-2\">\r\n                                <span className=\"w-3 h-3 bg-orange-500 rounded-full\"></span>\r\n                                <span>Actual Exit Price</span>\r\n                                {((selectedStatus === 'win' && formData.actualExit === trade.takeProfit) ||\r\n                                  (selectedStatus === 'loss' && formData.actualExit === trade.stopLoss)) && (\r\n                                  <span className=\"text-xs text-orange-600 bg-orange-100 px-2 py-1 rounded-full\">\r\n                                    Auto-filled from {selectedStatus === 'win' ? 'TP' : 'SL'}\r\n                                  </span>\r\n                                )}\r\n                              </span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.actualExit}\r\n                              onChange={(e) => {\r\n                                setFormData(prev => ({ ...prev, actualExit: e.target.value }));\r\n                                // Reset auto-fill tracking when user manually changes the value\r\n                                if (e.target.value !== trade.takeProfit && e.target.value !== trade.stopLoss) {\r\n                                  setLastAutoFilledStatus(null);\r\n                                }\r\n                              }}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200 font-mono\"\r\n                              placeholder=\"1.25000\"\r\n                            />\r\n                            <div className=\"flex items-center justify-between mt-1\">\r\n                              <div className=\"flex space-x-4 text-xs text-gray-500\">\r\n                                <span>TP: {trade.takeProfit}</span>\r\n                                <span>SL: {trade.stopLoss}</span>\r\n                              </div>\r\n                              <div className=\"flex space-x-2\">\r\n                                {trade.takeProfit && formData.actualExit !== trade.takeProfit && (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                      setFormData(prev => ({ ...prev, actualExit: trade.takeProfit }));\r\n                                      setLastAutoFilledStatus('win');\r\n                                    }}\r\n                                    className=\"text-xs text-green-600 hover:text-green-800 underline\"\r\n                                  >\r\n                                    Use TP\r\n                                  </button>\r\n                                )}\r\n                                {trade.stopLoss && formData.actualExit !== trade.stopLoss && (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                      setFormData(prev => ({ ...prev, actualExit: trade.stopLoss }));\r\n                                      setLastAutoFilledStatus('loss');\r\n                                    }}\r\n                                    className=\"text-xs text-red-600 hover:text-red-800 underline\"\r\n                                  >\r\n                                    Use SL\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"space-y-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                <span className=\"flex items-center space-x-2\">\r\n                                  <span className=\"w-3 h-3 bg-purple-500 rounded-full\"></span>\r\n                                  <span>Manual P&L Amount</span>\r\n                                </span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                value={formData.manualPL}\r\n                                onChange={(e) => setFormData(prev => ({ ...prev, manualPL: e.target.value }))}\r\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 font-mono\"\r\n                                placeholder=\"Enter profit/loss amount (e.g., 150.00 or -75.50)\"\r\n                              />\r\n                              <p className=\"text-xs text-gray-500 mt-1\">Enter positive for profit, negative for loss</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exit Description</label>\r\n                              <textarea\r\n                                value={formData.exitDescription}\r\n                                onChange={(e) => setFormData(prev => ({ ...prev, exitDescription: e.target.value }))}\r\n                                rows={3}\r\n                                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 resize-none\"\r\n                                placeholder=\"Describe how the trade was closed (e.g., partial close, trailing stop, manual close due to news, etc.)\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                              <span className=\"flex items-center space-x-2\">\r\n                                <span className=\"w-3 h-3 bg-red-500 rounded-full\"></span>\r\n                                <span>Stop Loss</span>\r\n                                {formData.stopLoss === trade.stopLoss && (\r\n                                  <span className=\"text-xs text-red-600 bg-red-100 px-2 py-1 rounded-full\">Original</span>\r\n                                )}\r\n                              </span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.stopLoss}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, stopLoss: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-all duration-200 font-mono\"\r\n                              placeholder={trade.stopLoss || \"1.22000\"}\r\n                            />\r\n                            <div className=\"flex items-center justify-between mt-1\">\r\n                              <p className=\"text-xs text-gray-500\">Original: {trade.stopLoss}</p>\r\n                              {formData.stopLoss !== trade.stopLoss && trade.stopLoss && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => setFormData(prev => ({ ...prev, stopLoss: trade.stopLoss }))}\r\n                                  className=\"text-xs text-red-600 hover:text-red-800 underline\"\r\n                                >\r\n                                  Reset to original\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                              <span className=\"flex items-center space-x-2\">\r\n                                <span className=\"w-3 h-3 bg-green-500 rounded-full\"></span>\r\n                                <span>Take Profit</span>\r\n                                {formData.takeProfit === trade.takeProfit && (\r\n                                  <span className=\"text-xs text-green-600 bg-green-100 px-2 py-1 rounded-full\">Original</span>\r\n                                )}\r\n                              </span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.00001\"\r\n                              value={formData.takeProfit}\r\n                              onChange={(e) => setFormData(prev => ({ ...prev, takeProfit: e.target.value }))}\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200 font-mono\"\r\n                              placeholder={trade.takeProfit || \"1.25000\"}\r\n                            />\r\n                            <div className=\"flex items-center justify-between mt-1\">\r\n                              <p className=\"text-xs text-gray-500\">Original: {trade.takeProfit}</p>\r\n                              {formData.takeProfit !== trade.takeProfit && trade.takeProfit && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => setFormData(prev => ({ ...prev, takeProfit: trade.takeProfit }))}\r\n                                  className=\"text-xs text-green-600 hover:text-green-800 underline\"\r\n                                >\r\n                                  Reset to original\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            {formData.exitType === 'price' ? 'Actual P&L (Auto-calculated)' : 'Actual P&L (Manual Entry)'}\r\n                          </label>\r\n                          <div className=\"relative\">\r\n                            <input\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              value={formData.actualProfit}\r\n                              readOnly\r\n                              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl bg-gray-50 font-mono text-lg font-semibold\"\r\n                            />\r\n                            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\r\n                              <span className={`text-sm font-medium ${\r\n                                parseFloat(formData.actualProfit || 0) >= 0 ? 'text-green-600' : 'text-red-600'\r\n                              }`}>\r\n                                {parseFloat(formData.actualProfit || 0) >= 0 ? '↗' : '↘'}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs text-gray-500 mt-1\">\r\n                            {formData.exitType === 'price'\r\n                              ? 'Automatically calculated based on entry/exit prices'\r\n                              : 'Based on your manual P&L entry'\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Trade Information */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-indigo-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Original Trade Setup</h3>\r\n                      </div>\r\n\r\n                      {/* Quick Fill Buttons */}\r\n                      <div className=\"mb-6 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl\">\r\n                        <div className=\"text-sm font-medium text-gray-700 mb-3\">Quick Fill Options:</div>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setFormData(prev => ({\r\n                                ...prev,\r\n                                actualEntry: trade.entryPrice,\r\n                                actualExit: trade.takeProfit,\r\n                                exitType: 'price'\r\n                              }));\r\n                              setLastAutoFilledStatus('win');\r\n                            }}\r\n                            className=\"px-3 py-2 bg-green-100 text-green-700 rounded-lg text-xs font-medium hover:bg-green-200 transition-colors\"\r\n                          >\r\n                            Fill Win Scenario (TP Hit)\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setFormData(prev => ({\r\n                                ...prev,\r\n                                actualEntry: trade.entryPrice,\r\n                                actualExit: trade.stopLoss,\r\n                                exitType: 'price'\r\n                              }));\r\n                              setLastAutoFilledStatus('loss');\r\n                            }}\r\n                            className=\"px-3 py-2 bg-red-100 text-red-700 rounded-lg text-xs font-medium hover:bg-red-200 transition-colors\"\r\n                          >\r\n                            Fill Loss Scenario (SL Hit)\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setFormData(prev => ({\r\n                                ...prev,\r\n                                actualEntry: trade.entryPrice,\r\n                                stopLoss: trade.stopLoss,\r\n                                takeProfit: trade.takeProfit\r\n                              }));\r\n                              setLastAutoFilledStatus(null);\r\n                            }}\r\n                            className=\"px-3 py-2 bg-blue-100 text-blue-700 rounded-lg text-xs font-medium hover:bg-blue-200 transition-colors\"\r\n                          >\r\n                            Reset All to Original\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                            <div className=\"text-sm text-gray-600 mb-1\">Trading Pair</div>\r\n                            <div className=\"text-lg font-semibold text-gray-900\">{trade.tradingPair}</div>\r\n                          </div>\r\n\r\n                          <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                            <div className=\"text-sm text-gray-600 mb-1\">Direction</div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              {trade.direction === 'long' ? (\r\n                                <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                                </svg>\r\n                              ) : (\r\n                                <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\" />\r\n                                </svg>\r\n                              )}\r\n                              <span className=\"text-lg font-semibold text-gray-900\">{trade.direction?.toUpperCase()}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                            <div className=\"text-sm text-gray-600 mb-1\">Lot Size</div>\r\n                            <div className=\"text-lg font-semibold text-gray-900\">\r\n                              {trade.calculations?.lotSize || 'N/A'}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                            <div className=\"text-sm text-gray-600 mb-1\">Risk Amount</div>\r\n                            <div className=\"text-lg font-semibold text-gray-900\">\r\n                              ${trade.calculations?.riskAmount || 'N/A'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-blue-50 rounded-xl p-4\">\r\n                          <div className=\"text-sm text-blue-700 mb-1\">Strategy</div>\r\n                          <div className=\"text-lg font-semibold text-blue-900\">\r\n                            {trade.strategy || 'No strategy specified'}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Analysis & Notes Tab */}\r\n              {activeTab === 'analysis' && (\r\n                <div className=\"space-y-8\">\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n                    {/* Notes Section */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-amber-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Trade Notes</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Additional Notes</label>\r\n                          <textarea\r\n                            value={formData.notes}\r\n                            onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\r\n                            rows={4}\r\n                            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-200 resize-none\"\r\n                            placeholder=\"Add any additional notes about the trade execution, market conditions, or lessons learned...\"\r\n                          />\r\n                        </div>\r\n\r\n                        {/* Trade Tags */}\r\n                        {trade.tags && (\r\n                          <div>\r\n                            <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Trade Tags</h4>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                              {trade.tags.split(',').map((tag, index) => (\r\n                                <span\r\n                                  key={index}\r\n                                  className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium\"\r\n                                >\r\n                                  {tag.trim()}\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Closing Chart Image */}\r\n                    <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                      <div className=\"flex items-center space-x-3 mb-6\">\r\n                        <div className=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n                          <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Closing Chart</h3>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-4\">\r\n                        {!formData.closingImage ? (\r\n                          <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-8 text-center hover:border-purple-400 transition-colors\">\r\n                            <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h14a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <div className=\"mt-4\">\r\n                              <label htmlFor=\"closing-image-upload\" className=\"cursor-pointer\">\r\n                                <span className=\"mt-2 block text-sm font-medium text-gray-900\">\r\n                                  Upload closing chart image\r\n                                </span>\r\n                                <span className=\"mt-1 block text-sm text-gray-500\">\r\n                                  PNG, JPG, GIF up to 5MB\r\n                                </span>\r\n                              </label>\r\n                              <input\r\n                                id=\"closing-image-upload\"\r\n                                type=\"file\"\r\n                                className=\"hidden\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleClosingImageUpload}\r\n                              />\r\n                            </div>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => document.getElementById('closing-image-upload').click()}\r\n                              className=\"mt-4 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm font-medium\"\r\n                            >\r\n                              Choose Image\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"relative\">\r\n                            <img\r\n                              src={formData.closingImage}\r\n                              alt=\"Closing chart\"\r\n                              className=\"w-full h-64 object-cover rounded-xl border border-gray-200\"\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={removeClosingImage}\r\n                              className=\"absolute top-2 right-2 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors\"\r\n                            >\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n\r\n                        <p className=\"text-xs text-gray-500\">\r\n                          Upload a screenshot of your chart at the time of closing the trade for future reference and analysis.\r\n                        </p>\r\n\r\n                        {/* Show existing closing images if any */}\r\n                        {trade.closingImages && trade.closingImages.length > 0 && !formData.closingImage && (\r\n                          <div className=\"mt-4\">\r\n                            <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Existing Closing Images</h4>\r\n                            <div className=\"grid grid-cols-2 gap-2\">\r\n                              {trade.closingImages.map((image, index) => (\r\n                                <div key={index} className=\"relative\">\r\n                                  <img\r\n                                    src={image}\r\n                                    alt={`Existing closing chart ${index + 1}`}\r\n                                    className=\"w-full h-24 object-cover rounded-lg border border-gray-200\"\r\n                                  />\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => setFormData(prev => ({ ...prev, closingImage: image }))}\r\n                                    className=\"absolute inset-0 bg-black bg-opacity-0 hover:bg-opacity-20 transition-all duration-200 rounded-lg flex items-center justify-center\"\r\n                                  >\r\n                                    <span className=\"text-white text-xs font-medium opacity-0 hover:opacity-100 transition-opacity\">\r\n                                      Use This Image\r\n                                    </span>\r\n                                  </button>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Original Trade Information */}\r\n                  <div className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\">\r\n                    <div className=\"flex items-center space-x-3 mb-6\">\r\n                      <div className=\"w-10 h-10 bg-gray-100 rounded-xl flex items-center justify-center\">\r\n                        <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <h3 className=\"text-lg font-semibold text-gray-900\">Original Trade Analysis</h3>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                      <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                        <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Original Analysis</h4>\r\n                        <div className=\"text-sm text-gray-600\">\r\n                          {trade.analysis || 'No original analysis provided'}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"bg-gray-50 rounded-xl p-4\">\r\n                        <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Risk Management Lessons</h4>\r\n                        <div className=\"text-sm text-gray-600\">\r\n                          {trade.riskManagementLessons || 'No risk management lessons recorded'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {/* Footer with Action Buttons */}\r\n          <div className=\"p-8 bg-gray-50 border-t border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                <span className=\"font-medium\">Account:</span> {currentAccount?.name || 'Unknown Account'}\r\n                {calculatedResults.actualPL !== 0 && (\r\n                  <span className=\"ml-4\">\r\n                    <span className=\"font-medium\">Balance Change:</span>\r\n                    <span className={`ml-1 font-semibold ${\r\n                      calculatedResults.actualPL >= 0 ? 'text-green-600' : 'text-red-600'\r\n                    }`}>\r\n                      {calculatedResults.actualPL >= 0 ? '+' : ''}${calculatedResults.actualPL}\r\n                    </span>\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex space-x-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  className=\"px-6 py-3 text-gray-700 bg-white border border-gray-300 rounded-xl hover:bg-gray-50 transition-all duration-200 font-medium\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loading || !formData.actualEntry ||\r\n                    (formData.exitType === 'price' && !formData.actualExit) ||\r\n                    (formData.exitType === 'other' && !formData.manualPL)}\r\n                  className=\"px-8 py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-xl hover:from-green-600 hover:to-emerald-700 transition-all duration-200 font-medium shadow-lg disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      <span>Updating...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                      <span>Update Trade Status</span>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n// Add Account Modal Component\r\nfunction AddAccountModal({ onClose, onAccountAdded }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    balance: '',\r\n    tag: 'personal'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const token = Cookies.get('auth-token') || localStorage.getItem('auth-token');\r\n      const userData = localStorage.getItem('user');\r\n      const user = userData ? JSON.parse(userData) : null;\r\n      const userId = user?.id || user?._id;\r\n\r\n      const response = await fetch('/api/accounts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userId: userId,\r\n          name: formData.name,\r\n          balance: parseFloat(formData.balance) || 0,\r\n          tag: formData.tag\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok && result.success) {\r\n        onAccountAdded(result.account);\r\n      } else {\r\n        alert('Failed to create account: ' + (result.message || 'Unknown error'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating account:', error);\r\n      alert('Error creating account: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl w-full max-w-md shadow-xl\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-bold text-gray-900\">Add New Account</h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg transition-colors\"\r\n            >\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              placeholder=\"e.g., Main Trading Account\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Initial Balance</label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.balance}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, balance: e.target.value }))}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              placeholder=\"10000\"\r\n              step=\"0.01\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Account Type</label>\r\n            <select\r\n              value={formData.tag}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, tag: e.target.value }))}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            >\r\n              <option value=\"personal\">Personal</option>\r\n              <option value=\"funded\">Funded</option>\r\n              <option value=\"demo\">Demo</option>\r\n              <option value=\"forex\">Forex</option>\r\n              <option value=\"crypto\">Crypto</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"flex-1 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Creating...' : 'Create Account'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}