(()=>{var e={};e.id=828,e.ids=[828],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},2518:e=>{"use strict";e.exports=require("mongodb")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3834:(e,t,r)=>{"use strict";let s;r.d(t,{$V:()=>c,Ay:()=>p});var n=r(6037),o=r.n(n),a=r(2518);let d=process.env.MONGODB_URI||"mongodb+srv://tmuneebanjum:A5Y1enJBJcDVwPrt@jorn.nx9fd28.mongodb.net/smartsave",i="trading-journal";if(!d)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let l=global.mongoose;async function u(){if(l.conn)return l.conn;l.promise||(l.promise=o().connect(d,{bufferCommands:!1}).then(e=>e));try{l.conn=await l.promise}catch(e){throw l.promise=null,e}return l.conn}async function c(){try{let e=await s;console.log("Connected to MongoDB successfully, using database:",i);let t=e.db(i);return{client:e,db:t}}catch(e){throw console.error("Failed to connect to database:",e),e}}l||(l=global.mongoose={conn:null,promise:null}),s=new a.MongoClient(d).connect();let p=u},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6037:e=>{"use strict";e.exports=require("mongoose")},6487:()=>{},7589:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>g,serverHooks:()=>w,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>x});var s={};r.r(s),r.d(s,{DELETE:()=>m,GET:()=>u,POST:()=>c,PUT:()=>p});var n=r(6559),o=r(8088),a=r(7719),d=r(3834),i=r(2190),l=r(2518);async function u(e){try{let{searchParams:t}=new URL(e.url),r=t.get("userId"),s=t.get("accountId");if(!r)return i.NextResponse.json({error:"User ID is required"},{status:400});let{db:n}=await (0,d.$V)(),o={userId:r};s&&(o.accountId=s);let a=await n.collection("am_trades").find(o).sort({createdAt:-1}).toArray();return i.NextResponse.json({trades:a})}catch(e){return console.error("Error fetching AM trades:",e),i.NextResponse.json({error:"Failed to fetch AM trades"},{status:500})}}async function c(e){try{let{userId:t,accountId:r,dateTime:s,manualDateTime:n,weekday:o,month:a,quarter:l,accountSize:u,direction:c,tradingPair:p,strategy:m,entryPrice:g,takeProfit:f,stopLoss:x,setup:w,htfFramework:y,dailyProfile:j,entryCandle:A,entryTime:R,entryTimeFrame:h,entryConfluence:M,duration:I,riskPercent:T,plannedRR:v,analysis:N,notes:P,riskManagementLessons:D,tags:b,screenshot:q,calculatedResults:E}=await e.json();if(!t||!r||!p||!g||!f||!x)return i.NextResponse.json({error:"Required fields missing"},{status:400});let{db:F}=await (0,d.$V)(),O={userId:t,accountId:r,dateTime:s||new Date().toISOString(),manualDateTime:n||!1,weekday:o||"",month:a||"",quarter:l||"",accountSize:parseFloat(u)||0,direction:c||"",tradingPair:p||"",strategy:m||"",entryPrice:parseFloat(g),takeProfit:parseFloat(f),stopLoss:parseFloat(x),setup:w||"",htfFramework:y||"",dailyProfile:j||"",entryCandle:A||"",entryTime:R||"",entryTimeFrame:h||"",entryConfluence:M||"",duration:I||"",riskPercent:T||"2",plannedRR:v||"",analysis:N||"",notes:P||"",riskManagementLessons:D||"",tags:b||"",screenshot:q||null,calculatedResults:E||{},status:null,actualEntry:null,actualExit:null,actualProfit:null,exitReason:null,exitNotes:"",createdAt:new Date,updatedAt:new Date},_=await F.collection("am_trades").insertOne(O);return i.NextResponse.json({success:!0,tradeId:_.insertedId,message:"AM Trade created successfully"})}catch(e){return console.error("Error creating AM trade:",e),i.NextResponse.json({error:"Failed to create AM trade"},{status:500})}}async function p(e){try{let{tradeId:t,userId:r,_id:s,createdAt:n,...o}=await e.json();if(!t||!r)return i.NextResponse.json({error:"Trade ID and User ID are required"},{status:400});let{_id:a,userId:u,createdAt:c,...p}=o,{db:m}=await (0,d.$V)(),g=await m.collection("am_trades").updateOne({_id:new l.ObjectId(t),userId:r},{$set:{...p,updatedAt:new Date}});if(0===g.matchedCount)return i.NextResponse.json({error:"AM Trade not found"},{status:404});return i.NextResponse.json({success:!0,message:"AM Trade updated successfully"})}catch(e){return console.error("Error updating AM trade:",e),i.NextResponse.json({error:"Failed to update AM trade"},{status:500})}}async function m(e){try{let{searchParams:t}=new URL(e.url),r=t.get("tradeId")||t.get("id"),s=t.get("userId");if(console.log("AM Trade DELETE request:",{tradeId:r,userId:s}),!r)return console.error("Missing tradeId in delete request"),i.NextResponse.json({error:"Trade ID is required"},{status:400});if(!l.ObjectId.isValid(r))return console.error("Invalid tradeId format:",r),i.NextResponse.json({error:"Invalid Trade ID format"},{status:400});let{db:n}=await (0,d.$V)(),o={_id:new l.ObjectId(r)};s&&(o.userId=s),console.log("Delete filter:",o);let a=await n.collection("am_trades").findOne(o);if(!a)return console.error("AM Trade not found:",o),i.NextResponse.json({error:"AM Trade not found or access denied"},{status:404});console.log("Found trade to delete:",{_id:a._id,tradingPair:a.tradingPair});let u=await n.collection("am_trades").deleteOne(o);if(console.log("Delete result:",u),0===u.deletedCount)return console.error("No trades were deleted"),i.NextResponse.json({error:"Failed to delete AM Trade"},{status:500});return console.log("AM Trade deleted successfully"),i.NextResponse.json({success:!0,message:"AM Trade deleted successfully",deletedTrade:{_id:a._id,tradingPair:a.tradingPair}})}catch(e){return console.error("Error deleting AM trade:",e),i.NextResponse.json({error:"Failed to delete AM trade",details:e.message},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/am-trades/route",pathname:"/api/am-trades",filename:"route",bundlePath:"app/api/am-trades/route"},resolvedPagePath:"/home/runner/work/minjournel/minjournel/app/api/am-trades/route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:x,serverHooks:w}=g;function y(){return(0,a.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:x})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(7589));module.exports=s})();