(()=>{var e={};e.id=794,e.ids=[794],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},2518:e=>{"use strict";e.exports=require("mongodb")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3834:(e,t,r)=>{"use strict";let o;r.d(t,{$V:()=>d,Ay:()=>p});var n=r(6037),s=r.n(n),a=r(2518);let c=process.env.MONGODB_URI||"mongodb+srv://tmuneebanjum:A5Y1enJBJcDVwPrt@jorn.nx9fd28.mongodb.net/smartsave",u="trading-journal";if(!c)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let i=global.mongoose;async function l(){if(i.conn)return i.conn;i.promise||(i.promise=s().connect(c,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}async function d(){try{let e=await o;console.log("Connected to MongoDB successfully, using database:",u);let t=e.db(u);return{client:e,db:t}}catch(e){throw console.error("Failed to connect to database:",e),e}}i||(i=global.mongoose={conn:null,promise:null}),o=new a.MongoClient(c).connect();let p=l},4359:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>b,routeModule:()=>m,serverHooks:()=>w,workAsyncStorage:()=>v,workUnitAsyncStorage:()=>y});var o={};r.r(o),r.d(o,{DELETE:()=>x,GET:()=>g,POST:()=>f,PUT:()=>h});var n=r(6559),s=r(8088),a=r(7719),c=r(3834),u=r(2190),i=r(2518),l=r(3205),d=r.n(l);let p="your-secret-key-change-in-production";async function g(e){try{let{searchParams:t}=new URL(e.url);if(t.get("health"))return console.log("Accounts API health check requested"),u.NextResponse.json({success:!0,message:"Accounts API is working",timestamp:new Date().toISOString(),env:{hasJwtSecret:!!process.env.JWT_SECRET,hasMongoUri:!!process.env.MONGODB_URI,nodeEnv:"production",hardcodedSecret:!!p}});let r=t.get("userId");if(!r)return u.NextResponse.json({error:"User ID is required"},{status:400});let o=e.headers.get("authorization");if(console.log("Auth header present in accounts API:",!!o),o&&o.startsWith("Bearer "))try{let e=o.substring(7),t=process.env.JWT_SECRET||p;d().verify(e,t)}catch(e){console.log("JWT verification failed, but allowing request to continue")}let{db:n}=await (0,c.$V)();console.log("Connected to DB, fetching accounts for userId:",r);let s=await n.collection("accounts").find({userId:r}).sort({createdAt:-1}).toArray();return console.log("Found accounts:",s.length),u.NextResponse.json({accounts:s})}catch(e){return console.error("Error fetching accounts:",e),u.NextResponse.json({error:"Failed to fetch accounts"},{status:500})}}async function f(e){try{let{userId:t,name:r,balance:o,tag:n}=await e.json();if(!t||!r||void 0===o||!n)return u.NextResponse.json({error:"Missing required fields: userId, name, balance, tag"},{status:400});let s=e.headers.get("authorization");if(s&&s.startsWith("Bearer "))try{let e=s.substring(7),t=process.env.JWT_SECRET||p;d().verify(e,t)}catch(e){console.log("JWT verification failed, but allowing request to continue")}let{db:a}=await (0,c.$V)(),i={userId:t,name:r,balance:parseFloat(o),tag:n,color:{personal:"bg-blue-600",funded:"bg-green-600",demo:"bg-purple-600",forex:"bg-orange-600",crypto:"bg-indigo-600"}[n]||"bg-gray-600",isActive:!1,createdAt:new Date,updatedAt:new Date},l=await a.collection("accounts").insertOne(i);return u.NextResponse.json({success:!0,message:"Account created successfully",accountId:l.insertedId,account:{...i,_id:l.insertedId,id:l.insertedId}})}catch(e){return console.error("Error creating account:",e),u.NextResponse.json({error:"Failed to create account"},{status:500})}}async function h(e){try{let t,{accountId:r,userId:o,updates:n}=await e.json();if(!r||!o)return u.NextResponse.json({error:"Account ID and User ID are required"},{status:400});let s=e.headers.get("authorization");if(s&&s.startsWith("Bearer "))try{let e=s.substring(7),t=process.env.JWT_SECRET||p;d().verify(e,t)}catch(e){console.log("JWT verification failed, but allowing request to continue")}let{db:a}=await (0,c.$V)();try{t=new i.ObjectId(r)}catch(e){return u.NextResponse.json({error:"Invalid account ID format"},{status:400})}let l=await a.collection("accounts").updateOne({_id:t,userId:o},{$set:{...n,updatedAt:new Date}});if(0===l.matchedCount)return u.NextResponse.json({error:"Account not found"},{status:404});return u.NextResponse.json({message:"Account updated successfully"})}catch(e){return console.error("Error updating account:",e),u.NextResponse.json({error:"Failed to update account"},{status:500})}}async function x(e){try{let t,{searchParams:r}=new URL(e.url),o=r.get("accountId"),n=r.get("userId");if(!o||!n)return u.NextResponse.json({error:"Account ID and User ID are required"},{status:400});let s=e.headers.get("authorization");if(s&&s.startsWith("Bearer "))try{let e=s.substring(7),t=process.env.JWT_SECRET||p;d().verify(e,t)}catch(e){console.log("JWT verification failed, but allowing request to continue")}let{db:a}=await (0,c.$V)();if(await a.collection("accounts").countDocuments({userId:n})<=1)return u.NextResponse.json({error:"Cannot delete the only account"},{status:400});try{t=new i.ObjectId(o)}catch(e){return u.NextResponse.json({error:"Invalid account ID format"},{status:400})}let l=await a.collection("accounts").deleteOne({_id:t,userId:n});if(0===l.deletedCount)return u.NextResponse.json({error:"Account not found"},{status:404});return u.NextResponse.json({message:"Account deleted successfully"})}catch(e){return console.error("Error deleting account:",e),u.NextResponse.json({error:"Failed to delete account"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/accounts/route",pathname:"/api/accounts",filename:"route",bundlePath:"app/api/accounts/route"},resolvedPagePath:"E:\\trading-journal-app\\app\\api\\accounts\\route.js",nextConfigOutput:"",userland:o}),{workAsyncStorage:v,workUnitAsyncStorage:y,serverHooks:w}=m;function b(){return(0,a.patchFetch)({workAsyncStorage:v,workUnitAsyncStorage:y})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5511:e=>{"use strict";e.exports=require("crypto")},6037:e=>{"use strict";e.exports=require("mongoose")},6487:()=>{},7910:e=>{"use strict";e.exports=require("stream")},8335:()=>{},8354:e=>{"use strict";e.exports=require("util")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9428:e=>{"use strict";e.exports=require("buffer")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[447,580,205],()=>r(4359));module.exports=o})();